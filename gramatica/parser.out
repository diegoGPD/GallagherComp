Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    ENDFUNC
    GOTO
    GOTOF
    GOTOT
    IGNOREGOTOFUNC
    INI_BOOL
    LEFTBRACK
    MAIN
    RIGHTBRACK

Grammar

Rule 0     S' -> compile
Rule 1     compile -> PROG ID seen_program DOTCOMMA lets modules
Rule 2     compile -> <empty>
Rule 3     modules -> func modules
Rule 4     modules -> <empty>
Rule 5     seen_program -> <empty>
Rule 6     lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
Rule 7     lets -> empty
Rule 8     seen_lets -> <empty>
Rule 9     type -> INT seen_type
Rule 10    type -> FLOAT seen_type
Rule 11    type -> BOOL seen_type
Rule 12    seen_type -> <empty>
Rule 13    seen_ID_let -> <empty>
Rule 14    aux_let -> COMMA ID seen_ID_let aux_let
Rule 15    aux_let -> <empty>
Rule 16    func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code
Rule 17    seen_func_name -> <empty>
Rule 18    params -> LEFTPARENT param_table_init param_declare RIGHTPARENT
Rule 19    param_table_init -> <empty>
Rule 20    param_declare -> type ID seen_ID_let param_declare
Rule 21    param_declare -> COMMA param_declare
Rule 22    param_declare -> empty
Rule 23    return_func_type -> type
Rule 24    return_func_type -> VOID void_detect
Rule 25    void_detect -> <empty>
Rule 26    func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func
Rule 27    end_func -> <empty>
Rule 28    func_code_aux -> action func_code_aux
Rule 29    func_code_aux -> <empty>
Rule 30    action -> assign
Rule 31    action -> expresion_line
Rule 32    action -> condition
Rule 33    action -> while
Rule 34    action -> func_call
Rule 35    action -> write
Rule 36    write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
Rule 37    write_found -> write_found_aux
Rule 38    write_found -> write_found_aux COMMA write_found
Rule 39    write_found_aux -> expresion_line print_exp
Rule 40    write_found_aux -> INI_STRING string_appear print_exp
Rule 41    print_exp -> <empty>
Rule 42    string_appear -> <empty>
Rule 43    func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
Rule 44    func_call -> <empty>
Rule 45    end_func_call_params -> <empty>
Rule 46    func_call_ID -> <empty>
Rule 47    end_func_call -> <empty>
Rule 48    func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params
Rule 49    func_calls_params -> expresion_line parameter_call
Rule 50    parameter_call -> <empty>
Rule 51    add_parameter -> <empty>
Rule 52    while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
Rule 53    while_appear -> <empty>
Rule 54    condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
Rule 55    condtion_appear -> <empty>
Rule 56    condition_end_check -> ELSE condition_code end_condition
Rule 57    condition_end_check -> end_condition
Rule 58    condition_code -> LEFTKEY lets func_code_aux RIGHTKEY
Rule 59    end_condition -> <empty>
Rule 60    end_cond -> <empty>
Rule 61    condition_signs -> GREATERTN add_operator
Rule 62    condition_signs -> LESSTN add_operator
Rule 63    condition_signs -> SAME add_operator
Rule 64    condition_signs -> NOTSAME add_operator
Rule 65    condition_signs -> <empty>
Rule 66    condition_expresion -> expresion_line condtion_appear
Rule 67    condition_expresion -> expresion_line condition_signs expresion_line condtion_appear
Rule 68    expresion_line -> term term_appear
Rule 69    expresion_line -> term term_appear aux_expresion
Rule 70    aux_expresion -> ADD add_operator expresion_line
Rule 71    aux_expresion -> LESS add_operator expresion_line
Rule 72    term -> fact factor_appear
Rule 73    term -> fact factor_appear aux_term
Rule 74    aux_term -> SPLIT_BY add_operator term
Rule 75    aux_term -> MULT_BY add_operator term
Rule 76    fact -> expo expo_appear
Rule 77    fact -> expo expo_appear aux_expo
Rule 78    expo -> parent_aux
Rule 79    expo -> call_lets
Rule 80    expo -> call_let
Rule 81    parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
Rule 82    right_parent_condition -> <empty>
Rule 83    found_init_parent -> <empty>
Rule 84    found_end_parent -> <empty>
Rule 85    aux_expo -> TIMES_BY_SAME add_operator fact
Rule 86    assign -> call_let set_appear SET set_value
Rule 87    assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
Rule 88    seen_final_asignacion -> <empty>
Rule 89    add_operand -> <empty>
Rule 90    add_operator -> <empty>
Rule 91    set_appear -> <empty>
Rule 92    term_appear -> <empty>
Rule 93    factor_appear -> <empty>
Rule 94    expo_appear -> <empty>
Rule 95    call_let -> ID check_let_exists
Rule 96    call_lets -> INI_INT check_global_const_exists
Rule 97    call_lets -> INI_FLOAT check_global_const_exists
Rule 98    check_global_const_exists -> add_operand
Rule 99    check_let_exists -> <empty>
Rule 100   set_value -> INI_INT aux_int_check append_operand DOTCOMMA
Rule 101   set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA
Rule 102   append_operand -> <empty>
Rule 103   aux_int_check -> <empty>
Rule 104   aux_float_check -> <empty>
Rule 105   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 70
BOOL                 : 11
COMMA                : 14 21 38 48
DO                   : 
DOTCOMMA             : 1 6 36 43 87 100 101
ELSE                 : 56
ENDFUNC              : 
FLOAT                : 10
FUNC                 : 16
GOTO                 : 
GOTOF                : 
GOTOT                : 
GREATERTN            : 61
ID                   : 1 6 14 16 20 43 95
IF                   : 54
IGNOREGOTOFUNC       : 
INI_BOOL             : 
INI_FLOAT            : 97 101
INI_INT              : 96 100
INI_STRING           : 40
INT                  : 9
LEFTBRACK            : 
LEFTKEY              : 26 58
LEFTPARENT           : 18 36 43 52 54 81
LESS                 : 71
LESSTN               : 62
LET                  : 6
MAIN                 : 
MULT_BY              : 75
NOTSAME              : 64
PRINTG               : 36
PROG                 : 1
RIGHTBRACK           : 
RIGHTKEY             : 26 58
RIGHTPARENT          : 18 36 43 52 54 81
SAME                 : 63
SET                  : 86 87
SPLIT_BY             : 74
TIMES_BY_SAME        : 85
TWOPOINTS            : 16 16
VOID                 : 24
WHILE                : 52
error                : 

Nonterminals, with rules where they appear

action               : 28
add_operand          : 98
add_operator         : 61 62 63 64 70 71 74 75 85
add_parameter        : 48
append_operand       : 100 101
assign               : 30
aux_expo             : 77
aux_expresion        : 69
aux_float_check      : 101
aux_int_check        : 100
aux_let              : 6 14
aux_term             : 73
call_let             : 80 86 87
call_lets            : 79
check_global_const_exists : 96 97
check_let_exists     : 95
compile              : 0
condition            : 32
condition_code       : 52 54 56
condition_end_check  : 54
condition_expresion  : 52 54
condition_signs      : 67
condtion_appear      : 66 67
empty                : 7 22
end_cond             : 52 54
end_condition        : 56 57
end_func             : 26
end_func_call        : 43
end_func_call_params : 43
expo                 : 76 77
expo_appear          : 76 77
expresion_line       : 31 39 48 49 66 67 67 70 71 81 87
fact                 : 72 73 85
factor_appear        : 72 73
found_end_parent     : 81
found_init_parent    : 54 81
func                 : 3
func_call            : 34
func_call_ID         : 43
func_calls_params    : 43 48
func_code            : 16
func_code_aux        : 26 28 58
lets                 : 1 6 26 58
modules              : 1 3
param_declare        : 18 20 21
param_table_init     : 18
parameter_call       : 48 49
params               : 16
parent_aux           : 78
print_exp            : 39 40
return_func_type     : 16
right_parent_condition : 52 54
seen_ID_let          : 6 14 20
seen_final_asignacion : 87
seen_func_name       : 16
seen_lets            : 6
seen_program         : 1
seen_type            : 9 10 11
set_appear           : 86 87
set_value            : 86
string_appear        : 40
term                 : 68 69 74 75
term_appear          : 68 69
type                 : 6 20 23
void_detect          : 24
while                : 33
while_appear         : 52
write                : 35
write_found          : 36 38
write_found_aux      : 37 38

Parsing method: LALR

state 0

    (0) S' -> . compile
    (1) compile -> . PROG ID seen_program DOTCOMMA lets modules
    (2) compile -> .

    PROG            shift and go to state 2
    $end            reduce using rule 2 (compile -> .)

    compile                        shift and go to state 1

state 1

    (0) S' -> compile .



state 2

    (1) compile -> PROG . ID seen_program DOTCOMMA lets modules

    ID              shift and go to state 3


state 3

    (1) compile -> PROG ID . seen_program DOTCOMMA lets modules
    (5) seen_program -> .

    DOTCOMMA        reduce using rule 5 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) compile -> PROG ID seen_program . DOTCOMMA lets modules

    DOTCOMMA        shift and go to state 5


state 5

    (1) compile -> PROG ID seen_program DOTCOMMA . lets modules
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (105) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    lets                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) compile -> PROG ID seen_program DOTCOMMA lets . modules
    (3) modules -> . func modules
    (4) modules -> .
    (16) func -> . FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    $end            reduce using rule 4 (modules -> .)
    FUNC            shift and go to state 11

    modules                        shift and go to state 9
    func                           shift and go to state 10

state 7

    (6) lets -> LET . seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (8) seen_lets -> .

    INT             reduce using rule 8 (seen_lets -> .)
    FLOAT           reduce using rule 8 (seen_lets -> .)
    BOOL            reduce using rule 8 (seen_lets -> .)

    seen_lets                      shift and go to state 12

state 8

    (7) lets -> empty .

    FUNC            reduce using rule 7 (lets -> empty .)
    $end            reduce using rule 7 (lets -> empty .)
    IF              reduce using rule 7 (lets -> empty .)
    WHILE           reduce using rule 7 (lets -> empty .)
    ID              reduce using rule 7 (lets -> empty .)
    PRINTG          reduce using rule 7 (lets -> empty .)
    LEFTPARENT      reduce using rule 7 (lets -> empty .)
    INI_INT         reduce using rule 7 (lets -> empty .)
    INI_FLOAT       reduce using rule 7 (lets -> empty .)
    RIGHTKEY        reduce using rule 7 (lets -> empty .)


state 9

    (1) compile -> PROG ID seen_program DOTCOMMA lets modules .

    $end            reduce using rule 1 (compile -> PROG ID seen_program DOTCOMMA lets modules .)


state 10

    (3) modules -> func . modules
    (3) modules -> . func modules
    (4) modules -> .
    (16) func -> . FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    $end            reduce using rule 4 (modules -> .)
    FUNC            shift and go to state 11

    func                           shift and go to state 10
    modules                        shift and go to state 13

state 11

    (16) func -> FUNC . ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    ID              shift and go to state 14


state 12

    (6) lets -> LET seen_lets . type ID seen_ID_let aux_let DOTCOMMA lets
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18

    type                           shift and go to state 15

state 13

    (3) modules -> func modules .

    $end            reduce using rule 3 (modules -> func modules .)


state 14

    (16) func -> FUNC ID . seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code
    (17) seen_func_name -> .

    LEFTPARENT      reduce using rule 17 (seen_func_name -> .)

    seen_func_name                 shift and go to state 19

state 15

    (6) lets -> LET seen_lets type . ID seen_ID_let aux_let DOTCOMMA lets

    ID              shift and go to state 20


state 16

    (9) type -> INT . seen_type
    (12) seen_type -> .

    ID              reduce using rule 12 (seen_type -> .)
    TWOPOINTS       reduce using rule 12 (seen_type -> .)

    seen_type                      shift and go to state 21

state 17

    (10) type -> FLOAT . seen_type
    (12) seen_type -> .

    ID              reduce using rule 12 (seen_type -> .)
    TWOPOINTS       reduce using rule 12 (seen_type -> .)

    seen_type                      shift and go to state 22

state 18

    (11) type -> BOOL . seen_type
    (12) seen_type -> .

    ID              reduce using rule 12 (seen_type -> .)
    TWOPOINTS       reduce using rule 12 (seen_type -> .)

    seen_type                      shift and go to state 23

state 19

    (16) func -> FUNC ID seen_func_name . params TWOPOINTS return_func_type TWOPOINTS func_code
    (18) params -> . LEFTPARENT param_table_init param_declare RIGHTPARENT

    LEFTPARENT      shift and go to state 25

    params                         shift and go to state 24

state 20

    (6) lets -> LET seen_lets type ID . seen_ID_let aux_let DOTCOMMA lets
    (13) seen_ID_let -> .

    COMMA           reduce using rule 13 (seen_ID_let -> .)
    DOTCOMMA        reduce using rule 13 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 26

state 21

    (9) type -> INT seen_type .

    ID              reduce using rule 9 (type -> INT seen_type .)
    TWOPOINTS       reduce using rule 9 (type -> INT seen_type .)


state 22

    (10) type -> FLOAT seen_type .

    ID              reduce using rule 10 (type -> FLOAT seen_type .)
    TWOPOINTS       reduce using rule 10 (type -> FLOAT seen_type .)


state 23

    (11) type -> BOOL seen_type .

    ID              reduce using rule 11 (type -> BOOL seen_type .)
    TWOPOINTS       reduce using rule 11 (type -> BOOL seen_type .)


state 24

    (16) func -> FUNC ID seen_func_name params . TWOPOINTS return_func_type TWOPOINTS func_code

    TWOPOINTS       shift and go to state 27


state 25

    (18) params -> LEFTPARENT . param_table_init param_declare RIGHTPARENT
    (19) param_table_init -> .

    COMMA           reduce using rule 19 (param_table_init -> .)
    INT             reduce using rule 19 (param_table_init -> .)
    FLOAT           reduce using rule 19 (param_table_init -> .)
    BOOL            reduce using rule 19 (param_table_init -> .)
    RIGHTPARENT     reduce using rule 19 (param_table_init -> .)

    param_table_init               shift and go to state 28

state 26

    (6) lets -> LET seen_lets type ID seen_ID_let . aux_let DOTCOMMA lets
    (14) aux_let -> . COMMA ID seen_ID_let aux_let
    (15) aux_let -> .

    COMMA           shift and go to state 30
    DOTCOMMA        reduce using rule 15 (aux_let -> .)

    aux_let                        shift and go to state 29

state 27

    (16) func -> FUNC ID seen_func_name params TWOPOINTS . return_func_type TWOPOINTS func_code
    (23) return_func_type -> . type
    (24) return_func_type -> . VOID void_detect
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type

    VOID            shift and go to state 33
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18

    return_func_type               shift and go to state 31
    type                           shift and go to state 32

state 28

    (18) params -> LEFTPARENT param_table_init . param_declare RIGHTPARENT
    (20) param_declare -> . type ID seen_ID_let param_declare
    (21) param_declare -> . COMMA param_declare
    (22) param_declare -> . empty
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type
    (105) empty -> .

    COMMA           shift and go to state 36
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 105 (empty -> .)

    param_declare                  shift and go to state 34
    type                           shift and go to state 35
    empty                          shift and go to state 37

state 29

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let . DOTCOMMA lets

    DOTCOMMA        shift and go to state 38


state 30

    (14) aux_let -> COMMA . ID seen_ID_let aux_let

    ID              shift and go to state 39


state 31

    (16) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type . TWOPOINTS func_code

    TWOPOINTS       shift and go to state 40


state 32

    (23) return_func_type -> type .

    TWOPOINTS       reduce using rule 23 (return_func_type -> type .)


state 33

    (24) return_func_type -> VOID . void_detect
    (25) void_detect -> .

    TWOPOINTS       reduce using rule 25 (void_detect -> .)

    void_detect                    shift and go to state 41

state 34

    (18) params -> LEFTPARENT param_table_init param_declare . RIGHTPARENT

    RIGHTPARENT     shift and go to state 42


state 35

    (20) param_declare -> type . ID seen_ID_let param_declare

    ID              shift and go to state 43


state 36

    (21) param_declare -> COMMA . param_declare
    (20) param_declare -> . type ID seen_ID_let param_declare
    (21) param_declare -> . COMMA param_declare
    (22) param_declare -> . empty
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type
    (105) empty -> .

    COMMA           shift and go to state 36
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 105 (empty -> .)

    param_declare                  shift and go to state 44
    type                           shift and go to state 35
    empty                          shift and go to state 37

state 37

    (22) param_declare -> empty .

    RIGHTPARENT     reduce using rule 22 (param_declare -> empty .)


state 38

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA . lets
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (105) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)
    IF              reduce using rule 105 (empty -> .)
    WHILE           reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PRINTG          reduce using rule 105 (empty -> .)
    LEFTPARENT      reduce using rule 105 (empty -> .)
    INI_INT         reduce using rule 105 (empty -> .)
    INI_FLOAT       reduce using rule 105 (empty -> .)
    RIGHTKEY        reduce using rule 105 (empty -> .)

    lets                           shift and go to state 45
    empty                          shift and go to state 8

state 39

    (14) aux_let -> COMMA ID . seen_ID_let aux_let
    (13) seen_ID_let -> .

    COMMA           reduce using rule 13 (seen_ID_let -> .)
    DOTCOMMA        reduce using rule 13 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 46

state 40

    (16) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS . func_code
    (26) func_code -> . LEFTKEY lets func_code_aux RIGHTKEY end_func

    LEFTKEY         shift and go to state 48

    func_code                      shift and go to state 47

state 41

    (24) return_func_type -> VOID void_detect .

    TWOPOINTS       reduce using rule 24 (return_func_type -> VOID void_detect .)


state 42

    (18) params -> LEFTPARENT param_table_init param_declare RIGHTPARENT .

    TWOPOINTS       reduce using rule 18 (params -> LEFTPARENT param_table_init param_declare RIGHTPARENT .)


state 43

    (20) param_declare -> type ID . seen_ID_let param_declare
    (13) seen_ID_let -> .

    COMMA           reduce using rule 13 (seen_ID_let -> .)
    INT             reduce using rule 13 (seen_ID_let -> .)
    FLOAT           reduce using rule 13 (seen_ID_let -> .)
    BOOL            reduce using rule 13 (seen_ID_let -> .)
    RIGHTPARENT     reduce using rule 13 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 49

state 44

    (21) param_declare -> COMMA param_declare .

    RIGHTPARENT     reduce using rule 21 (param_declare -> COMMA param_declare .)


state 45

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .

    FUNC            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    $end            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    IF              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    WHILE           reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    ID              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    PRINTG          reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    LEFTPARENT      reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    INI_INT         reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    INI_FLOAT       reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    RIGHTKEY        reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)


state 46

    (14) aux_let -> COMMA ID seen_ID_let . aux_let
    (14) aux_let -> . COMMA ID seen_ID_let aux_let
    (15) aux_let -> .

    COMMA           shift and go to state 30
    DOTCOMMA        reduce using rule 15 (aux_let -> .)

    aux_let                        shift and go to state 50

state 47

    (16) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .

    FUNC            reduce using rule 16 (func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .)
    $end            reduce using rule 16 (func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .)


state 48

    (26) func_code -> LEFTKEY . lets func_code_aux RIGHTKEY end_func
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (105) empty -> .

    LET             shift and go to state 7
    IF              reduce using rule 105 (empty -> .)
    WHILE           reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PRINTG          reduce using rule 105 (empty -> .)
    LEFTPARENT      reduce using rule 105 (empty -> .)
    INI_INT         reduce using rule 105 (empty -> .)
    INI_FLOAT       reduce using rule 105 (empty -> .)
    RIGHTKEY        reduce using rule 105 (empty -> .)

    lets                           shift and go to state 51
    empty                          shift and go to state 8

state 49

    (20) param_declare -> type ID seen_ID_let . param_declare
    (20) param_declare -> . type ID seen_ID_let param_declare
    (21) param_declare -> . COMMA param_declare
    (22) param_declare -> . empty
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type
    (105) empty -> .

    COMMA           shift and go to state 36
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 105 (empty -> .)

    type                           shift and go to state 35
    param_declare                  shift and go to state 52
    empty                          shift and go to state 37

state 50

    (14) aux_let -> COMMA ID seen_ID_let aux_let .

    DOTCOMMA        reduce using rule 14 (aux_let -> COMMA ID seen_ID_let aux_let .)


state 51

    (26) func_code -> LEFTKEY lets . func_code_aux RIGHTKEY end_func
    (28) func_code_aux -> . action func_code_aux
    (29) func_code_aux -> .
    (30) action -> . assign
    (31) action -> . expresion_line
    (32) action -> . condition
    (33) action -> . while
    (34) action -> . func_call
    (35) action -> . write
    (86) assign -> . call_let set_appear SET set_value
    (87) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (54) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (52) while -> . WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (43) func_call -> . ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
    (44) func_call -> .
    (36) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (95) call_let -> . ID check_let_exists
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 29 (func_code_aux -> .)
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    RIGHTKEY        reduce using rule 29 (func_code_aux -> .)
    IF              shift and go to state 63
    WHILE           shift and go to state 65
    ID              shift and go to state 66
    PRINTG          shift and go to state 67
    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73

  ! IF              [ reduce using rule 44 (func_call -> .) ]
  ! WHILE           [ reduce using rule 44 (func_call -> .) ]
  ! ID              [ reduce using rule 44 (func_call -> .) ]
  ! PRINTG          [ reduce using rule 44 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 44 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 44 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 44 (func_call -> .) ]
  ! RIGHTKEY        [ reduce using rule 44 (func_call -> .) ]

    func_code_aux                  shift and go to state 53
    action                         shift and go to state 54
    assign                         shift and go to state 55
    expresion_line                 shift and go to state 56
    condition                      shift and go to state 57
    while                          shift and go to state 58
    func_call                      shift and go to state 59
    write                          shift and go to state 60
    call_let                       shift and go to state 61
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71

state 52

    (20) param_declare -> type ID seen_ID_let param_declare .

    RIGHTPARENT     reduce using rule 20 (param_declare -> type ID seen_ID_let param_declare .)


state 53

    (26) func_code -> LEFTKEY lets func_code_aux . RIGHTKEY end_func

    RIGHTKEY        shift and go to state 74


state 54

    (28) func_code_aux -> action . func_code_aux
    (28) func_code_aux -> . action func_code_aux
    (29) func_code_aux -> .
    (30) action -> . assign
    (31) action -> . expresion_line
    (32) action -> . condition
    (33) action -> . while
    (34) action -> . func_call
    (35) action -> . write
    (86) assign -> . call_let set_appear SET set_value
    (87) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (54) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (52) while -> . WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (43) func_call -> . ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
    (44) func_call -> .
    (36) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (95) call_let -> . ID check_let_exists
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 29 (func_code_aux -> .)
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    RIGHTKEY        reduce using rule 29 (func_code_aux -> .)
    IF              shift and go to state 63
    WHILE           shift and go to state 65
    ID              shift and go to state 66
    PRINTG          shift and go to state 67
    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73

  ! IF              [ reduce using rule 44 (func_call -> .) ]
  ! WHILE           [ reduce using rule 44 (func_call -> .) ]
  ! ID              [ reduce using rule 44 (func_call -> .) ]
  ! PRINTG          [ reduce using rule 44 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 44 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 44 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 44 (func_call -> .) ]
  ! RIGHTKEY        [ reduce using rule 44 (func_call -> .) ]

    action                         shift and go to state 54
    func_code_aux                  shift and go to state 75
    assign                         shift and go to state 55
    expresion_line                 shift and go to state 56
    condition                      shift and go to state 57
    while                          shift and go to state 58
    func_call                      shift and go to state 59
    write                          shift and go to state 60
    call_let                       shift and go to state 61
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71

state 55

    (30) action -> assign .

    IF              reduce using rule 30 (action -> assign .)
    WHILE           reduce using rule 30 (action -> assign .)
    ID              reduce using rule 30 (action -> assign .)
    PRINTG          reduce using rule 30 (action -> assign .)
    LEFTPARENT      reduce using rule 30 (action -> assign .)
    INI_INT         reduce using rule 30 (action -> assign .)
    INI_FLOAT       reduce using rule 30 (action -> assign .)
    RIGHTKEY        reduce using rule 30 (action -> assign .)


state 56

    (31) action -> expresion_line .

    IF              reduce using rule 31 (action -> expresion_line .)
    WHILE           reduce using rule 31 (action -> expresion_line .)
    ID              reduce using rule 31 (action -> expresion_line .)
    PRINTG          reduce using rule 31 (action -> expresion_line .)
    LEFTPARENT      reduce using rule 31 (action -> expresion_line .)
    INI_INT         reduce using rule 31 (action -> expresion_line .)
    INI_FLOAT       reduce using rule 31 (action -> expresion_line .)
    RIGHTKEY        reduce using rule 31 (action -> expresion_line .)


state 57

    (32) action -> condition .

    IF              reduce using rule 32 (action -> condition .)
    WHILE           reduce using rule 32 (action -> condition .)
    ID              reduce using rule 32 (action -> condition .)
    PRINTG          reduce using rule 32 (action -> condition .)
    LEFTPARENT      reduce using rule 32 (action -> condition .)
    INI_INT         reduce using rule 32 (action -> condition .)
    INI_FLOAT       reduce using rule 32 (action -> condition .)
    RIGHTKEY        reduce using rule 32 (action -> condition .)


state 58

    (33) action -> while .

    IF              reduce using rule 33 (action -> while .)
    WHILE           reduce using rule 33 (action -> while .)
    ID              reduce using rule 33 (action -> while .)
    PRINTG          reduce using rule 33 (action -> while .)
    LEFTPARENT      reduce using rule 33 (action -> while .)
    INI_INT         reduce using rule 33 (action -> while .)
    INI_FLOAT       reduce using rule 33 (action -> while .)
    RIGHTKEY        reduce using rule 33 (action -> while .)


state 59

    (34) action -> func_call .

    IF              reduce using rule 34 (action -> func_call .)
    WHILE           reduce using rule 34 (action -> func_call .)
    ID              reduce using rule 34 (action -> func_call .)
    PRINTG          reduce using rule 34 (action -> func_call .)
    LEFTPARENT      reduce using rule 34 (action -> func_call .)
    INI_INT         reduce using rule 34 (action -> func_call .)
    INI_FLOAT       reduce using rule 34 (action -> func_call .)
    RIGHTKEY        reduce using rule 34 (action -> func_call .)


state 60

    (35) action -> write .

    IF              reduce using rule 35 (action -> write .)
    WHILE           reduce using rule 35 (action -> write .)
    ID              reduce using rule 35 (action -> write .)
    PRINTG          reduce using rule 35 (action -> write .)
    LEFTPARENT      reduce using rule 35 (action -> write .)
    INI_INT         reduce using rule 35 (action -> write .)
    INI_FLOAT       reduce using rule 35 (action -> write .)
    RIGHTKEY        reduce using rule 35 (action -> write .)


state 61

    (86) assign -> call_let . set_appear SET set_value
    (87) assign -> call_let . set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (80) expo -> call_let .
    (91) set_appear -> .

    TIMES_BY_SAME   reduce using rule 80 (expo -> call_let .)
    SPLIT_BY        reduce using rule 80 (expo -> call_let .)
    MULT_BY         reduce using rule 80 (expo -> call_let .)
    ADD             reduce using rule 80 (expo -> call_let .)
    LESS            reduce using rule 80 (expo -> call_let .)
    IF              reduce using rule 80 (expo -> call_let .)
    WHILE           reduce using rule 80 (expo -> call_let .)
    ID              reduce using rule 80 (expo -> call_let .)
    PRINTG          reduce using rule 80 (expo -> call_let .)
    LEFTPARENT      reduce using rule 80 (expo -> call_let .)
    INI_INT         reduce using rule 80 (expo -> call_let .)
    INI_FLOAT       reduce using rule 80 (expo -> call_let .)
    RIGHTKEY        reduce using rule 80 (expo -> call_let .)
    SET             reduce using rule 91 (set_appear -> .)

    set_appear                     shift and go to state 76

state 62

    (68) expresion_line -> term . term_appear
    (69) expresion_line -> term . term_appear aux_expresion
    (92) term_appear -> .

    ADD             reduce using rule 92 (term_appear -> .)
    LESS            reduce using rule 92 (term_appear -> .)
    IF              reduce using rule 92 (term_appear -> .)
    WHILE           reduce using rule 92 (term_appear -> .)
    ID              reduce using rule 92 (term_appear -> .)
    PRINTG          reduce using rule 92 (term_appear -> .)
    LEFTPARENT      reduce using rule 92 (term_appear -> .)
    INI_INT         reduce using rule 92 (term_appear -> .)
    INI_FLOAT       reduce using rule 92 (term_appear -> .)
    RIGHTKEY        reduce using rule 92 (term_appear -> .)
    RIGHTPARENT     reduce using rule 92 (term_appear -> .)
    COMMA           reduce using rule 92 (term_appear -> .)
    DOTCOMMA        reduce using rule 92 (term_appear -> .)
    GREATERTN       reduce using rule 92 (term_appear -> .)
    LESSTN          reduce using rule 92 (term_appear -> .)
    SAME            reduce using rule 92 (term_appear -> .)
    NOTSAME         reduce using rule 92 (term_appear -> .)

    term_appear                    shift and go to state 77

state 63

    (54) condition -> IF . LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check

    LEFTPARENT      shift and go to state 78


state 64

    (81) parent_aux -> LEFTPARENT . found_init_parent expresion_line RIGHTPARENT found_end_parent
    (83) found_init_parent -> .

    LEFTPARENT      reduce using rule 83 (found_init_parent -> .)
    INI_INT         reduce using rule 83 (found_init_parent -> .)
    INI_FLOAT       reduce using rule 83 (found_init_parent -> .)
    ID              reduce using rule 83 (found_init_parent -> .)

    found_init_parent              shift and go to state 79

state 65

    (52) while -> WHILE . while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (53) while_appear -> .

    LEFTPARENT      reduce using rule 53 (while_appear -> .)

    while_appear                   shift and go to state 80

state 66

    (43) func_call -> ID . func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
    (95) call_let -> ID . check_let_exists
    (46) func_call_ID -> .
    (99) check_let_exists -> .

  ! reduce/reduce conflict for LEFTPARENT resolved using rule 46 (func_call_ID -> .)
    LEFTPARENT      reduce using rule 46 (func_call_ID -> .)
    SET             reduce using rule 99 (check_let_exists -> .)
    TIMES_BY_SAME   reduce using rule 99 (check_let_exists -> .)
    SPLIT_BY        reduce using rule 99 (check_let_exists -> .)
    MULT_BY         reduce using rule 99 (check_let_exists -> .)
    ADD             reduce using rule 99 (check_let_exists -> .)
    LESS            reduce using rule 99 (check_let_exists -> .)
    IF              reduce using rule 99 (check_let_exists -> .)
    WHILE           reduce using rule 99 (check_let_exists -> .)
    ID              reduce using rule 99 (check_let_exists -> .)
    PRINTG          reduce using rule 99 (check_let_exists -> .)
    INI_INT         reduce using rule 99 (check_let_exists -> .)
    INI_FLOAT       reduce using rule 99 (check_let_exists -> .)
    RIGHTKEY        reduce using rule 99 (check_let_exists -> .)

  ! LEFTPARENT      [ reduce using rule 99 (check_let_exists -> .) ]

    func_call_ID                   shift and go to state 81
    check_let_exists               shift and go to state 82

state 67

    (36) write -> PRINTG . LEFTPARENT write_found RIGHTPARENT DOTCOMMA

    LEFTPARENT      shift and go to state 83


state 68

    (72) term -> fact . factor_appear
    (73) term -> fact . factor_appear aux_term
    (93) factor_appear -> .

    SPLIT_BY        reduce using rule 93 (factor_appear -> .)
    MULT_BY         reduce using rule 93 (factor_appear -> .)
    ADD             reduce using rule 93 (factor_appear -> .)
    LESS            reduce using rule 93 (factor_appear -> .)
    IF              reduce using rule 93 (factor_appear -> .)
    WHILE           reduce using rule 93 (factor_appear -> .)
    ID              reduce using rule 93 (factor_appear -> .)
    PRINTG          reduce using rule 93 (factor_appear -> .)
    LEFTPARENT      reduce using rule 93 (factor_appear -> .)
    INI_INT         reduce using rule 93 (factor_appear -> .)
    INI_FLOAT       reduce using rule 93 (factor_appear -> .)
    RIGHTKEY        reduce using rule 93 (factor_appear -> .)
    RIGHTPARENT     reduce using rule 93 (factor_appear -> .)
    COMMA           reduce using rule 93 (factor_appear -> .)
    DOTCOMMA        reduce using rule 93 (factor_appear -> .)
    GREATERTN       reduce using rule 93 (factor_appear -> .)
    LESSTN          reduce using rule 93 (factor_appear -> .)
    SAME            reduce using rule 93 (factor_appear -> .)
    NOTSAME         reduce using rule 93 (factor_appear -> .)

    factor_appear                  shift and go to state 84

state 69

    (76) fact -> expo . expo_appear
    (77) fact -> expo . expo_appear aux_expo
    (94) expo_appear -> .

    TIMES_BY_SAME   reduce using rule 94 (expo_appear -> .)
    SPLIT_BY        reduce using rule 94 (expo_appear -> .)
    MULT_BY         reduce using rule 94 (expo_appear -> .)
    ADD             reduce using rule 94 (expo_appear -> .)
    LESS            reduce using rule 94 (expo_appear -> .)
    IF              reduce using rule 94 (expo_appear -> .)
    WHILE           reduce using rule 94 (expo_appear -> .)
    ID              reduce using rule 94 (expo_appear -> .)
    PRINTG          reduce using rule 94 (expo_appear -> .)
    LEFTPARENT      reduce using rule 94 (expo_appear -> .)
    INI_INT         reduce using rule 94 (expo_appear -> .)
    INI_FLOAT       reduce using rule 94 (expo_appear -> .)
    RIGHTKEY        reduce using rule 94 (expo_appear -> .)
    RIGHTPARENT     reduce using rule 94 (expo_appear -> .)
    COMMA           reduce using rule 94 (expo_appear -> .)
    DOTCOMMA        reduce using rule 94 (expo_appear -> .)
    GREATERTN       reduce using rule 94 (expo_appear -> .)
    LESSTN          reduce using rule 94 (expo_appear -> .)
    SAME            reduce using rule 94 (expo_appear -> .)
    NOTSAME         reduce using rule 94 (expo_appear -> .)

    expo_appear                    shift and go to state 85

state 70

    (78) expo -> parent_aux .

    TIMES_BY_SAME   reduce using rule 78 (expo -> parent_aux .)
    SPLIT_BY        reduce using rule 78 (expo -> parent_aux .)
    MULT_BY         reduce using rule 78 (expo -> parent_aux .)
    ADD             reduce using rule 78 (expo -> parent_aux .)
    LESS            reduce using rule 78 (expo -> parent_aux .)
    IF              reduce using rule 78 (expo -> parent_aux .)
    WHILE           reduce using rule 78 (expo -> parent_aux .)
    ID              reduce using rule 78 (expo -> parent_aux .)
    PRINTG          reduce using rule 78 (expo -> parent_aux .)
    LEFTPARENT      reduce using rule 78 (expo -> parent_aux .)
    INI_INT         reduce using rule 78 (expo -> parent_aux .)
    INI_FLOAT       reduce using rule 78 (expo -> parent_aux .)
    RIGHTKEY        reduce using rule 78 (expo -> parent_aux .)
    RIGHTPARENT     reduce using rule 78 (expo -> parent_aux .)
    COMMA           reduce using rule 78 (expo -> parent_aux .)
    DOTCOMMA        reduce using rule 78 (expo -> parent_aux .)
    GREATERTN       reduce using rule 78 (expo -> parent_aux .)
    LESSTN          reduce using rule 78 (expo -> parent_aux .)
    SAME            reduce using rule 78 (expo -> parent_aux .)
    NOTSAME         reduce using rule 78 (expo -> parent_aux .)


state 71

    (79) expo -> call_lets .

    TIMES_BY_SAME   reduce using rule 79 (expo -> call_lets .)
    SPLIT_BY        reduce using rule 79 (expo -> call_lets .)
    MULT_BY         reduce using rule 79 (expo -> call_lets .)
    ADD             reduce using rule 79 (expo -> call_lets .)
    LESS            reduce using rule 79 (expo -> call_lets .)
    IF              reduce using rule 79 (expo -> call_lets .)
    WHILE           reduce using rule 79 (expo -> call_lets .)
    ID              reduce using rule 79 (expo -> call_lets .)
    PRINTG          reduce using rule 79 (expo -> call_lets .)
    LEFTPARENT      reduce using rule 79 (expo -> call_lets .)
    INI_INT         reduce using rule 79 (expo -> call_lets .)
    INI_FLOAT       reduce using rule 79 (expo -> call_lets .)
    RIGHTKEY        reduce using rule 79 (expo -> call_lets .)
    RIGHTPARENT     reduce using rule 79 (expo -> call_lets .)
    COMMA           reduce using rule 79 (expo -> call_lets .)
    DOTCOMMA        reduce using rule 79 (expo -> call_lets .)
    GREATERTN       reduce using rule 79 (expo -> call_lets .)
    LESSTN          reduce using rule 79 (expo -> call_lets .)
    SAME            reduce using rule 79 (expo -> call_lets .)
    NOTSAME         reduce using rule 79 (expo -> call_lets .)


state 72

    (96) call_lets -> INI_INT . check_global_const_exists
    (98) check_global_const_exists -> . add_operand
    (89) add_operand -> .

    TIMES_BY_SAME   reduce using rule 89 (add_operand -> .)
    SPLIT_BY        reduce using rule 89 (add_operand -> .)
    MULT_BY         reduce using rule 89 (add_operand -> .)
    ADD             reduce using rule 89 (add_operand -> .)
    LESS            reduce using rule 89 (add_operand -> .)
    IF              reduce using rule 89 (add_operand -> .)
    WHILE           reduce using rule 89 (add_operand -> .)
    ID              reduce using rule 89 (add_operand -> .)
    PRINTG          reduce using rule 89 (add_operand -> .)
    LEFTPARENT      reduce using rule 89 (add_operand -> .)
    INI_INT         reduce using rule 89 (add_operand -> .)
    INI_FLOAT       reduce using rule 89 (add_operand -> .)
    RIGHTKEY        reduce using rule 89 (add_operand -> .)
    RIGHTPARENT     reduce using rule 89 (add_operand -> .)
    COMMA           reduce using rule 89 (add_operand -> .)
    GREATERTN       reduce using rule 89 (add_operand -> .)
    LESSTN          reduce using rule 89 (add_operand -> .)
    SAME            reduce using rule 89 (add_operand -> .)
    NOTSAME         reduce using rule 89 (add_operand -> .)
    DOTCOMMA        reduce using rule 89 (add_operand -> .)

    check_global_const_exists      shift and go to state 86
    add_operand                    shift and go to state 87

state 73

    (97) call_lets -> INI_FLOAT . check_global_const_exists
    (98) check_global_const_exists -> . add_operand
    (89) add_operand -> .

    TIMES_BY_SAME   reduce using rule 89 (add_operand -> .)
    SPLIT_BY        reduce using rule 89 (add_operand -> .)
    MULT_BY         reduce using rule 89 (add_operand -> .)
    ADD             reduce using rule 89 (add_operand -> .)
    LESS            reduce using rule 89 (add_operand -> .)
    IF              reduce using rule 89 (add_operand -> .)
    WHILE           reduce using rule 89 (add_operand -> .)
    ID              reduce using rule 89 (add_operand -> .)
    PRINTG          reduce using rule 89 (add_operand -> .)
    LEFTPARENT      reduce using rule 89 (add_operand -> .)
    INI_INT         reduce using rule 89 (add_operand -> .)
    INI_FLOAT       reduce using rule 89 (add_operand -> .)
    RIGHTKEY        reduce using rule 89 (add_operand -> .)
    RIGHTPARENT     reduce using rule 89 (add_operand -> .)
    COMMA           reduce using rule 89 (add_operand -> .)
    GREATERTN       reduce using rule 89 (add_operand -> .)
    LESSTN          reduce using rule 89 (add_operand -> .)
    SAME            reduce using rule 89 (add_operand -> .)
    NOTSAME         reduce using rule 89 (add_operand -> .)
    DOTCOMMA        reduce using rule 89 (add_operand -> .)

    check_global_const_exists      shift and go to state 88
    add_operand                    shift and go to state 87

state 74

    (26) func_code -> LEFTKEY lets func_code_aux RIGHTKEY . end_func
    (27) end_func -> .

    FUNC            reduce using rule 27 (end_func -> .)
    $end            reduce using rule 27 (end_func -> .)

    end_func                       shift and go to state 89

state 75

    (28) func_code_aux -> action func_code_aux .

    RIGHTKEY        reduce using rule 28 (func_code_aux -> action func_code_aux .)


state 76

    (86) assign -> call_let set_appear . SET set_value
    (87) assign -> call_let set_appear . SET expresion_line seen_final_asignacion DOTCOMMA

    SET             shift and go to state 90


state 77

    (68) expresion_line -> term term_appear .
    (69) expresion_line -> term term_appear . aux_expresion
    (70) aux_expresion -> . ADD add_operator expresion_line
    (71) aux_expresion -> . LESS add_operator expresion_line

    IF              reduce using rule 68 (expresion_line -> term term_appear .)
    WHILE           reduce using rule 68 (expresion_line -> term term_appear .)
    ID              reduce using rule 68 (expresion_line -> term term_appear .)
    PRINTG          reduce using rule 68 (expresion_line -> term term_appear .)
    LEFTPARENT      reduce using rule 68 (expresion_line -> term term_appear .)
    INI_INT         reduce using rule 68 (expresion_line -> term term_appear .)
    INI_FLOAT       reduce using rule 68 (expresion_line -> term term_appear .)
    RIGHTKEY        reduce using rule 68 (expresion_line -> term term_appear .)
    RIGHTPARENT     reduce using rule 68 (expresion_line -> term term_appear .)
    COMMA           reduce using rule 68 (expresion_line -> term term_appear .)
    DOTCOMMA        reduce using rule 68 (expresion_line -> term term_appear .)
    GREATERTN       reduce using rule 68 (expresion_line -> term term_appear .)
    LESSTN          reduce using rule 68 (expresion_line -> term term_appear .)
    SAME            reduce using rule 68 (expresion_line -> term term_appear .)
    NOTSAME         reduce using rule 68 (expresion_line -> term term_appear .)
    ADD             shift and go to state 92
    LESS            shift and go to state 93

    aux_expresion                  shift and go to state 91

state 78

    (54) condition -> IF LEFTPARENT . found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (83) found_init_parent -> .

    LEFTPARENT      reduce using rule 83 (found_init_parent -> .)
    INI_INT         reduce using rule 83 (found_init_parent -> .)
    INI_FLOAT       reduce using rule 83 (found_init_parent -> .)
    ID              reduce using rule 83 (found_init_parent -> .)

    found_init_parent              shift and go to state 94

state 79

    (81) parent_aux -> LEFTPARENT found_init_parent . expresion_line RIGHTPARENT found_end_parent
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    expresion_line                 shift and go to state 95
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 80

    (52) while -> WHILE while_appear . LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond

    LEFTPARENT      shift and go to state 98


state 81

    (43) func_call -> ID func_call_ID . LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA

    LEFTPARENT      shift and go to state 99


state 82

    (95) call_let -> ID check_let_exists .

    SET             reduce using rule 95 (call_let -> ID check_let_exists .)
    TIMES_BY_SAME   reduce using rule 95 (call_let -> ID check_let_exists .)
    SPLIT_BY        reduce using rule 95 (call_let -> ID check_let_exists .)
    MULT_BY         reduce using rule 95 (call_let -> ID check_let_exists .)
    ADD             reduce using rule 95 (call_let -> ID check_let_exists .)
    LESS            reduce using rule 95 (call_let -> ID check_let_exists .)
    IF              reduce using rule 95 (call_let -> ID check_let_exists .)
    WHILE           reduce using rule 95 (call_let -> ID check_let_exists .)
    ID              reduce using rule 95 (call_let -> ID check_let_exists .)
    PRINTG          reduce using rule 95 (call_let -> ID check_let_exists .)
    LEFTPARENT      reduce using rule 95 (call_let -> ID check_let_exists .)
    INI_INT         reduce using rule 95 (call_let -> ID check_let_exists .)
    INI_FLOAT       reduce using rule 95 (call_let -> ID check_let_exists .)
    RIGHTKEY        reduce using rule 95 (call_let -> ID check_let_exists .)
    RIGHTPARENT     reduce using rule 95 (call_let -> ID check_let_exists .)
    COMMA           reduce using rule 95 (call_let -> ID check_let_exists .)
    DOTCOMMA        reduce using rule 95 (call_let -> ID check_let_exists .)
    GREATERTN       reduce using rule 95 (call_let -> ID check_let_exists .)
    LESSTN          reduce using rule 95 (call_let -> ID check_let_exists .)
    SAME            reduce using rule 95 (call_let -> ID check_let_exists .)
    NOTSAME         reduce using rule 95 (call_let -> ID check_let_exists .)


state 83

    (36) write -> PRINTG LEFTPARENT . write_found RIGHTPARENT DOTCOMMA
    (37) write_found -> . write_found_aux
    (38) write_found -> . write_found_aux COMMA write_found
    (39) write_found_aux -> . expresion_line print_exp
    (40) write_found_aux -> . INI_STRING string_appear print_exp
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    INI_STRING      shift and go to state 103
    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    write_found                    shift and go to state 100
    write_found_aux                shift and go to state 101
    expresion_line                 shift and go to state 102
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 84

    (72) term -> fact factor_appear .
    (73) term -> fact factor_appear . aux_term
    (74) aux_term -> . SPLIT_BY add_operator term
    (75) aux_term -> . MULT_BY add_operator term

    ADD             reduce using rule 72 (term -> fact factor_appear .)
    LESS            reduce using rule 72 (term -> fact factor_appear .)
    IF              reduce using rule 72 (term -> fact factor_appear .)
    WHILE           reduce using rule 72 (term -> fact factor_appear .)
    ID              reduce using rule 72 (term -> fact factor_appear .)
    PRINTG          reduce using rule 72 (term -> fact factor_appear .)
    LEFTPARENT      reduce using rule 72 (term -> fact factor_appear .)
    INI_INT         reduce using rule 72 (term -> fact factor_appear .)
    INI_FLOAT       reduce using rule 72 (term -> fact factor_appear .)
    RIGHTKEY        reduce using rule 72 (term -> fact factor_appear .)
    RIGHTPARENT     reduce using rule 72 (term -> fact factor_appear .)
    COMMA           reduce using rule 72 (term -> fact factor_appear .)
    DOTCOMMA        reduce using rule 72 (term -> fact factor_appear .)
    GREATERTN       reduce using rule 72 (term -> fact factor_appear .)
    LESSTN          reduce using rule 72 (term -> fact factor_appear .)
    SAME            reduce using rule 72 (term -> fact factor_appear .)
    NOTSAME         reduce using rule 72 (term -> fact factor_appear .)
    SPLIT_BY        shift and go to state 105
    MULT_BY         shift and go to state 106

    aux_term                       shift and go to state 104

state 85

    (76) fact -> expo expo_appear .
    (77) fact -> expo expo_appear . aux_expo
    (85) aux_expo -> . TIMES_BY_SAME add_operator fact

    SPLIT_BY        reduce using rule 76 (fact -> expo expo_appear .)
    MULT_BY         reduce using rule 76 (fact -> expo expo_appear .)
    ADD             reduce using rule 76 (fact -> expo expo_appear .)
    LESS            reduce using rule 76 (fact -> expo expo_appear .)
    IF              reduce using rule 76 (fact -> expo expo_appear .)
    WHILE           reduce using rule 76 (fact -> expo expo_appear .)
    ID              reduce using rule 76 (fact -> expo expo_appear .)
    PRINTG          reduce using rule 76 (fact -> expo expo_appear .)
    LEFTPARENT      reduce using rule 76 (fact -> expo expo_appear .)
    INI_INT         reduce using rule 76 (fact -> expo expo_appear .)
    INI_FLOAT       reduce using rule 76 (fact -> expo expo_appear .)
    RIGHTKEY        reduce using rule 76 (fact -> expo expo_appear .)
    RIGHTPARENT     reduce using rule 76 (fact -> expo expo_appear .)
    COMMA           reduce using rule 76 (fact -> expo expo_appear .)
    DOTCOMMA        reduce using rule 76 (fact -> expo expo_appear .)
    GREATERTN       reduce using rule 76 (fact -> expo expo_appear .)
    LESSTN          reduce using rule 76 (fact -> expo expo_appear .)
    SAME            reduce using rule 76 (fact -> expo expo_appear .)
    NOTSAME         reduce using rule 76 (fact -> expo expo_appear .)
    TIMES_BY_SAME   shift and go to state 108

    aux_expo                       shift and go to state 107

state 86

    (96) call_lets -> INI_INT check_global_const_exists .

    TIMES_BY_SAME   reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    SPLIT_BY        reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    MULT_BY         reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    ADD             reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    LESS            reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    IF              reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    WHILE           reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    ID              reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    PRINTG          reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    LEFTPARENT      reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    INI_INT         reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    INI_FLOAT       reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTKEY        reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTPARENT     reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    COMMA           reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    DOTCOMMA        reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    GREATERTN       reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    LESSTN          reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    SAME            reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)
    NOTSAME         reduce using rule 96 (call_lets -> INI_INT check_global_const_exists .)


state 87

    (98) check_global_const_exists -> add_operand .

    TIMES_BY_SAME   reduce using rule 98 (check_global_const_exists -> add_operand .)
    SPLIT_BY        reduce using rule 98 (check_global_const_exists -> add_operand .)
    MULT_BY         reduce using rule 98 (check_global_const_exists -> add_operand .)
    ADD             reduce using rule 98 (check_global_const_exists -> add_operand .)
    LESS            reduce using rule 98 (check_global_const_exists -> add_operand .)
    IF              reduce using rule 98 (check_global_const_exists -> add_operand .)
    WHILE           reduce using rule 98 (check_global_const_exists -> add_operand .)
    ID              reduce using rule 98 (check_global_const_exists -> add_operand .)
    PRINTG          reduce using rule 98 (check_global_const_exists -> add_operand .)
    LEFTPARENT      reduce using rule 98 (check_global_const_exists -> add_operand .)
    INI_INT         reduce using rule 98 (check_global_const_exists -> add_operand .)
    INI_FLOAT       reduce using rule 98 (check_global_const_exists -> add_operand .)
    RIGHTKEY        reduce using rule 98 (check_global_const_exists -> add_operand .)
    RIGHTPARENT     reduce using rule 98 (check_global_const_exists -> add_operand .)
    COMMA           reduce using rule 98 (check_global_const_exists -> add_operand .)
    GREATERTN       reduce using rule 98 (check_global_const_exists -> add_operand .)
    LESSTN          reduce using rule 98 (check_global_const_exists -> add_operand .)
    SAME            reduce using rule 98 (check_global_const_exists -> add_operand .)
    NOTSAME         reduce using rule 98 (check_global_const_exists -> add_operand .)
    DOTCOMMA        reduce using rule 98 (check_global_const_exists -> add_operand .)


state 88

    (97) call_lets -> INI_FLOAT check_global_const_exists .

    TIMES_BY_SAME   reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    SPLIT_BY        reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    MULT_BY         reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    ADD             reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESS            reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    IF              reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    WHILE           reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    ID              reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    PRINTG          reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    LEFTPARENT      reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    INI_INT         reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    INI_FLOAT       reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTKEY        reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTPARENT     reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    COMMA           reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    DOTCOMMA        reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    GREATERTN       reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESSTN          reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    SAME            reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)
    NOTSAME         reduce using rule 97 (call_lets -> INI_FLOAT check_global_const_exists .)


state 89

    (26) func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func .

    FUNC            reduce using rule 26 (func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func .)
    $end            reduce using rule 26 (func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func .)


state 90

    (86) assign -> call_let set_appear SET . set_value
    (87) assign -> call_let set_appear SET . expresion_line seen_final_asignacion DOTCOMMA
    (100) set_value -> . INI_INT aux_int_check append_operand DOTCOMMA
    (101) set_value -> . INI_FLOAT aux_float_check append_operand DOTCOMMA
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    INI_INT         shift and go to state 111
    INI_FLOAT       shift and go to state 112
    LEFTPARENT      shift and go to state 64
    ID              shift and go to state 97

    call_let                       shift and go to state 96
    set_value                      shift and go to state 109
    expresion_line                 shift and go to state 110
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71

state 91

    (69) expresion_line -> term term_appear aux_expresion .

    IF              reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    WHILE           reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    ID              reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    PRINTG          reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    LEFTPARENT      reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    INI_INT         reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    INI_FLOAT       reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    RIGHTKEY        reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    RIGHTPARENT     reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    COMMA           reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    DOTCOMMA        reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    GREATERTN       reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    LESSTN          reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    SAME            reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)
    NOTSAME         reduce using rule 69 (expresion_line -> term term_appear aux_expresion .)


state 92

    (70) aux_expresion -> ADD . add_operator expresion_line
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 113

state 93

    (71) aux_expresion -> LESS . add_operator expresion_line
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 114

state 94

    (54) condition -> IF LEFTPARENT found_init_parent . condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (66) condition_expresion -> . expresion_line condtion_appear
    (67) condition_expresion -> . expresion_line condition_signs expresion_line condtion_appear
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    condition_expresion            shift and go to state 115
    expresion_line                 shift and go to state 116
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 95

    (81) parent_aux -> LEFTPARENT found_init_parent expresion_line . RIGHTPARENT found_end_parent

    RIGHTPARENT     shift and go to state 117


state 96

    (80) expo -> call_let .

    TIMES_BY_SAME   reduce using rule 80 (expo -> call_let .)
    SPLIT_BY        reduce using rule 80 (expo -> call_let .)
    MULT_BY         reduce using rule 80 (expo -> call_let .)
    ADD             reduce using rule 80 (expo -> call_let .)
    LESS            reduce using rule 80 (expo -> call_let .)
    RIGHTPARENT     reduce using rule 80 (expo -> call_let .)
    COMMA           reduce using rule 80 (expo -> call_let .)
    DOTCOMMA        reduce using rule 80 (expo -> call_let .)
    GREATERTN       reduce using rule 80 (expo -> call_let .)
    LESSTN          reduce using rule 80 (expo -> call_let .)
    SAME            reduce using rule 80 (expo -> call_let .)
    NOTSAME         reduce using rule 80 (expo -> call_let .)
    LEFTPARENT      reduce using rule 80 (expo -> call_let .)
    INI_INT         reduce using rule 80 (expo -> call_let .)
    INI_FLOAT       reduce using rule 80 (expo -> call_let .)
    ID              reduce using rule 80 (expo -> call_let .)
    IF              reduce using rule 80 (expo -> call_let .)
    WHILE           reduce using rule 80 (expo -> call_let .)
    PRINTG          reduce using rule 80 (expo -> call_let .)
    RIGHTKEY        reduce using rule 80 (expo -> call_let .)


state 97

    (95) call_let -> ID . check_let_exists
    (99) check_let_exists -> .

    TIMES_BY_SAME   reduce using rule 99 (check_let_exists -> .)
    SPLIT_BY        reduce using rule 99 (check_let_exists -> .)
    MULT_BY         reduce using rule 99 (check_let_exists -> .)
    ADD             reduce using rule 99 (check_let_exists -> .)
    LESS            reduce using rule 99 (check_let_exists -> .)
    RIGHTPARENT     reduce using rule 99 (check_let_exists -> .)
    COMMA           reduce using rule 99 (check_let_exists -> .)
    DOTCOMMA        reduce using rule 99 (check_let_exists -> .)
    GREATERTN       reduce using rule 99 (check_let_exists -> .)
    LESSTN          reduce using rule 99 (check_let_exists -> .)
    SAME            reduce using rule 99 (check_let_exists -> .)
    NOTSAME         reduce using rule 99 (check_let_exists -> .)
    LEFTPARENT      reduce using rule 99 (check_let_exists -> .)
    INI_INT         reduce using rule 99 (check_let_exists -> .)
    INI_FLOAT       reduce using rule 99 (check_let_exists -> .)
    ID              reduce using rule 99 (check_let_exists -> .)
    IF              reduce using rule 99 (check_let_exists -> .)
    WHILE           reduce using rule 99 (check_let_exists -> .)
    PRINTG          reduce using rule 99 (check_let_exists -> .)
    RIGHTKEY        reduce using rule 99 (check_let_exists -> .)

    check_let_exists               shift and go to state 82

state 98

    (52) while -> WHILE while_appear LEFTPARENT . condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (66) condition_expresion -> . expresion_line condtion_appear
    (67) condition_expresion -> . expresion_line condition_signs expresion_line condtion_appear
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    condition_expresion            shift and go to state 118
    expresion_line                 shift and go to state 116
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 99

    (43) func_call -> ID func_call_ID LEFTPARENT . func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
    (48) func_calls_params -> . expresion_line parameter_call COMMA add_parameter func_calls_params
    (49) func_calls_params -> . expresion_line parameter_call
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    func_calls_params              shift and go to state 119
    expresion_line                 shift and go to state 120
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 100

    (36) write -> PRINTG LEFTPARENT write_found . RIGHTPARENT DOTCOMMA

    RIGHTPARENT     shift and go to state 121


state 101

    (37) write_found -> write_found_aux .
    (38) write_found -> write_found_aux . COMMA write_found

    RIGHTPARENT     reduce using rule 37 (write_found -> write_found_aux .)
    COMMA           shift and go to state 122


state 102

    (39) write_found_aux -> expresion_line . print_exp
    (41) print_exp -> .

    COMMA           reduce using rule 41 (print_exp -> .)
    RIGHTPARENT     reduce using rule 41 (print_exp -> .)

    print_exp                      shift and go to state 123

state 103

    (40) write_found_aux -> INI_STRING . string_appear print_exp
    (42) string_appear -> .

    COMMA           reduce using rule 42 (string_appear -> .)
    RIGHTPARENT     reduce using rule 42 (string_appear -> .)

    string_appear                  shift and go to state 124

state 104

    (73) term -> fact factor_appear aux_term .

    ADD             reduce using rule 73 (term -> fact factor_appear aux_term .)
    LESS            reduce using rule 73 (term -> fact factor_appear aux_term .)
    IF              reduce using rule 73 (term -> fact factor_appear aux_term .)
    WHILE           reduce using rule 73 (term -> fact factor_appear aux_term .)
    ID              reduce using rule 73 (term -> fact factor_appear aux_term .)
    PRINTG          reduce using rule 73 (term -> fact factor_appear aux_term .)
    LEFTPARENT      reduce using rule 73 (term -> fact factor_appear aux_term .)
    INI_INT         reduce using rule 73 (term -> fact factor_appear aux_term .)
    INI_FLOAT       reduce using rule 73 (term -> fact factor_appear aux_term .)
    RIGHTKEY        reduce using rule 73 (term -> fact factor_appear aux_term .)
    RIGHTPARENT     reduce using rule 73 (term -> fact factor_appear aux_term .)
    COMMA           reduce using rule 73 (term -> fact factor_appear aux_term .)
    DOTCOMMA        reduce using rule 73 (term -> fact factor_appear aux_term .)
    GREATERTN       reduce using rule 73 (term -> fact factor_appear aux_term .)
    LESSTN          reduce using rule 73 (term -> fact factor_appear aux_term .)
    SAME            reduce using rule 73 (term -> fact factor_appear aux_term .)
    NOTSAME         reduce using rule 73 (term -> fact factor_appear aux_term .)


state 105

    (74) aux_term -> SPLIT_BY . add_operator term
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 125

state 106

    (75) aux_term -> MULT_BY . add_operator term
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 126

state 107

    (77) fact -> expo expo_appear aux_expo .

    SPLIT_BY        reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    MULT_BY         reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    ADD             reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    LESS            reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    IF              reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    WHILE           reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    ID              reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    PRINTG          reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    LEFTPARENT      reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    INI_INT         reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    INI_FLOAT       reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    RIGHTKEY        reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    RIGHTPARENT     reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    COMMA           reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    DOTCOMMA        reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    GREATERTN       reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    LESSTN          reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    SAME            reduce using rule 77 (fact -> expo expo_appear aux_expo .)
    NOTSAME         reduce using rule 77 (fact -> expo expo_appear aux_expo .)


state 108

    (85) aux_expo -> TIMES_BY_SAME . add_operator fact
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 127

state 109

    (86) assign -> call_let set_appear SET set_value .

    IF              reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    WHILE           reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    ID              reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    PRINTG          reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    LEFTPARENT      reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    INI_INT         reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    INI_FLOAT       reduce using rule 86 (assign -> call_let set_appear SET set_value .)
    RIGHTKEY        reduce using rule 86 (assign -> call_let set_appear SET set_value .)


state 110

    (87) assign -> call_let set_appear SET expresion_line . seen_final_asignacion DOTCOMMA
    (88) seen_final_asignacion -> .

    DOTCOMMA        reduce using rule 88 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 128

state 111

    (100) set_value -> INI_INT . aux_int_check append_operand DOTCOMMA
    (96) call_lets -> INI_INT . check_global_const_exists
    (103) aux_int_check -> .
    (98) check_global_const_exists -> . add_operand
    (89) add_operand -> .

  ! reduce/reduce conflict for DOTCOMMA resolved using rule 89 (add_operand -> .)
    TIMES_BY_SAME   reduce using rule 89 (add_operand -> .)
    SPLIT_BY        reduce using rule 89 (add_operand -> .)
    MULT_BY         reduce using rule 89 (add_operand -> .)
    ADD             reduce using rule 89 (add_operand -> .)
    LESS            reduce using rule 89 (add_operand -> .)
    DOTCOMMA        reduce using rule 89 (add_operand -> .)

  ! DOTCOMMA        [ reduce using rule 103 (aux_int_check -> .) ]

    aux_int_check                  shift and go to state 129
    check_global_const_exists      shift and go to state 86
    add_operand                    shift and go to state 87

state 112

    (101) set_value -> INI_FLOAT . aux_float_check append_operand DOTCOMMA
    (97) call_lets -> INI_FLOAT . check_global_const_exists
    (104) aux_float_check -> .
    (98) check_global_const_exists -> . add_operand
    (89) add_operand -> .

  ! reduce/reduce conflict for DOTCOMMA resolved using rule 89 (add_operand -> .)
    TIMES_BY_SAME   reduce using rule 89 (add_operand -> .)
    SPLIT_BY        reduce using rule 89 (add_operand -> .)
    MULT_BY         reduce using rule 89 (add_operand -> .)
    ADD             reduce using rule 89 (add_operand -> .)
    LESS            reduce using rule 89 (add_operand -> .)
    DOTCOMMA        reduce using rule 89 (add_operand -> .)

  ! DOTCOMMA        [ reduce using rule 104 (aux_float_check -> .) ]

    aux_float_check                shift and go to state 130
    check_global_const_exists      shift and go to state 88
    add_operand                    shift and go to state 87

state 113

    (70) aux_expresion -> ADD add_operator . expresion_line
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    expresion_line                 shift and go to state 131
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 114

    (71) aux_expresion -> LESS add_operator . expresion_line
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    expresion_line                 shift and go to state 132
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 115

    (54) condition -> IF LEFTPARENT found_init_parent condition_expresion . right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (82) right_parent_condition -> .

    RIGHTPARENT     reduce using rule 82 (right_parent_condition -> .)

    right_parent_condition         shift and go to state 133

state 116

    (66) condition_expresion -> expresion_line . condtion_appear
    (67) condition_expresion -> expresion_line . condition_signs expresion_line condtion_appear
    (55) condtion_appear -> .
    (61) condition_signs -> . GREATERTN add_operator
    (62) condition_signs -> . LESSTN add_operator
    (63) condition_signs -> . SAME add_operator
    (64) condition_signs -> . NOTSAME add_operator
    (65) condition_signs -> .

    RIGHTPARENT     reduce using rule 55 (condtion_appear -> .)
    GREATERTN       shift and go to state 136
    LESSTN          shift and go to state 137
    SAME            shift and go to state 138
    NOTSAME         shift and go to state 139
    LEFTPARENT      reduce using rule 65 (condition_signs -> .)
    INI_INT         reduce using rule 65 (condition_signs -> .)
    INI_FLOAT       reduce using rule 65 (condition_signs -> .)
    ID              reduce using rule 65 (condition_signs -> .)

    condtion_appear                shift and go to state 134
    condition_signs                shift and go to state 135

state 117

    (81) parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT . found_end_parent
    (84) found_end_parent -> .

    TIMES_BY_SAME   reduce using rule 84 (found_end_parent -> .)
    SPLIT_BY        reduce using rule 84 (found_end_parent -> .)
    MULT_BY         reduce using rule 84 (found_end_parent -> .)
    ADD             reduce using rule 84 (found_end_parent -> .)
    LESS            reduce using rule 84 (found_end_parent -> .)
    IF              reduce using rule 84 (found_end_parent -> .)
    WHILE           reduce using rule 84 (found_end_parent -> .)
    ID              reduce using rule 84 (found_end_parent -> .)
    PRINTG          reduce using rule 84 (found_end_parent -> .)
    LEFTPARENT      reduce using rule 84 (found_end_parent -> .)
    INI_INT         reduce using rule 84 (found_end_parent -> .)
    INI_FLOAT       reduce using rule 84 (found_end_parent -> .)
    RIGHTKEY        reduce using rule 84 (found_end_parent -> .)
    RIGHTPARENT     reduce using rule 84 (found_end_parent -> .)
    COMMA           reduce using rule 84 (found_end_parent -> .)
    DOTCOMMA        reduce using rule 84 (found_end_parent -> .)
    GREATERTN       reduce using rule 84 (found_end_parent -> .)
    LESSTN          reduce using rule 84 (found_end_parent -> .)
    SAME            reduce using rule 84 (found_end_parent -> .)
    NOTSAME         reduce using rule 84 (found_end_parent -> .)

    found_end_parent               shift and go to state 140

state 118

    (52) while -> WHILE while_appear LEFTPARENT condition_expresion . right_parent_condition RIGHTPARENT condition_code end_cond
    (82) right_parent_condition -> .

    RIGHTPARENT     reduce using rule 82 (right_parent_condition -> .)

    right_parent_condition         shift and go to state 141

state 119

    (43) func_call -> ID func_call_ID LEFTPARENT func_calls_params . end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
    (45) end_func_call_params -> .

    RIGHTPARENT     reduce using rule 45 (end_func_call_params -> .)

    end_func_call_params           shift and go to state 142

state 120

    (48) func_calls_params -> expresion_line . parameter_call COMMA add_parameter func_calls_params
    (49) func_calls_params -> expresion_line . parameter_call
    (50) parameter_call -> .

    COMMA           reduce using rule 50 (parameter_call -> .)
    RIGHTPARENT     reduce using rule 50 (parameter_call -> .)

    parameter_call                 shift and go to state 143

state 121

    (36) write -> PRINTG LEFTPARENT write_found RIGHTPARENT . DOTCOMMA

    DOTCOMMA        shift and go to state 144


state 122

    (38) write_found -> write_found_aux COMMA . write_found
    (37) write_found -> . write_found_aux
    (38) write_found -> . write_found_aux COMMA write_found
    (39) write_found_aux -> . expresion_line print_exp
    (40) write_found_aux -> . INI_STRING string_appear print_exp
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    INI_STRING      shift and go to state 103
    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    write_found_aux                shift and go to state 101
    write_found                    shift and go to state 145
    expresion_line                 shift and go to state 102
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 123

    (39) write_found_aux -> expresion_line print_exp .

    COMMA           reduce using rule 39 (write_found_aux -> expresion_line print_exp .)
    RIGHTPARENT     reduce using rule 39 (write_found_aux -> expresion_line print_exp .)


state 124

    (40) write_found_aux -> INI_STRING string_appear . print_exp
    (41) print_exp -> .

    COMMA           reduce using rule 41 (print_exp -> .)
    RIGHTPARENT     reduce using rule 41 (print_exp -> .)

    print_exp                      shift and go to state 146

state 125

    (74) aux_term -> SPLIT_BY add_operator . term
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    term                           shift and go to state 147
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 126

    (75) aux_term -> MULT_BY add_operator . term
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    term                           shift and go to state 148
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 127

    (85) aux_expo -> TIMES_BY_SAME add_operator . fact
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    fact                           shift and go to state 149
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 128

    (87) assign -> call_let set_appear SET expresion_line seen_final_asignacion . DOTCOMMA

    DOTCOMMA        shift and go to state 150


state 129

    (100) set_value -> INI_INT aux_int_check . append_operand DOTCOMMA
    (102) append_operand -> .

    DOTCOMMA        reduce using rule 102 (append_operand -> .)

    append_operand                 shift and go to state 151

state 130

    (101) set_value -> INI_FLOAT aux_float_check . append_operand DOTCOMMA
    (102) append_operand -> .

    DOTCOMMA        reduce using rule 102 (append_operand -> .)

    append_operand                 shift and go to state 152

state 131

    (70) aux_expresion -> ADD add_operator expresion_line .

    IF              reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    WHILE           reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    ID              reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    PRINTG          reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    LEFTPARENT      reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    INI_INT         reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    INI_FLOAT       reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTKEY        reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTPARENT     reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    COMMA           reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    DOTCOMMA        reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    GREATERTN       reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    LESSTN          reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    SAME            reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)
    NOTSAME         reduce using rule 70 (aux_expresion -> ADD add_operator expresion_line .)


state 132

    (71) aux_expresion -> LESS add_operator expresion_line .

    IF              reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    WHILE           reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    ID              reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    PRINTG          reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    LEFTPARENT      reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    INI_INT         reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    INI_FLOAT       reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTKEY        reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTPARENT     reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    COMMA           reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    DOTCOMMA        reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    GREATERTN       reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    LESSTN          reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    SAME            reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)
    NOTSAME         reduce using rule 71 (aux_expresion -> LESS add_operator expresion_line .)


state 133

    (54) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition . RIGHTPARENT condition_code end_cond condition_end_check

    RIGHTPARENT     shift and go to state 153


state 134

    (66) condition_expresion -> expresion_line condtion_appear .

    RIGHTPARENT     reduce using rule 66 (condition_expresion -> expresion_line condtion_appear .)


state 135

    (67) condition_expresion -> expresion_line condition_signs . expresion_line condtion_appear
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    expresion_line                 shift and go to state 154
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 136

    (61) condition_signs -> GREATERTN . add_operator
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 155

state 137

    (62) condition_signs -> LESSTN . add_operator
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 156

state 138

    (63) condition_signs -> SAME . add_operator
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 157

state 139

    (64) condition_signs -> NOTSAME . add_operator
    (90) add_operator -> .

    LEFTPARENT      reduce using rule 90 (add_operator -> .)
    INI_INT         reduce using rule 90 (add_operator -> .)
    INI_FLOAT       reduce using rule 90 (add_operator -> .)
    ID              reduce using rule 90 (add_operator -> .)

    add_operator                   shift and go to state 158

state 140

    (81) parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .

    TIMES_BY_SAME   reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    SPLIT_BY        reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    MULT_BY         reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    ADD             reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESS            reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    IF              reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    WHILE           reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    ID              reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    PRINTG          reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LEFTPARENT      reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    INI_INT         reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    INI_FLOAT       reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTKEY        reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTPARENT     reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    COMMA           reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    DOTCOMMA        reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    GREATERTN       reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESSTN          reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    SAME            reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    NOTSAME         reduce using rule 81 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)


state 141

    (52) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition . RIGHTPARENT condition_code end_cond

    RIGHTPARENT     shift and go to state 159


state 142

    (43) func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params . RIGHTPARENT end_func_call DOTCOMMA

    RIGHTPARENT     shift and go to state 160


state 143

    (48) func_calls_params -> expresion_line parameter_call . COMMA add_parameter func_calls_params
    (49) func_calls_params -> expresion_line parameter_call .

    COMMA           shift and go to state 161
    RIGHTPARENT     reduce using rule 49 (func_calls_params -> expresion_line parameter_call .)


state 144

    (36) write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .

    IF              reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    WHILE           reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    ID              reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    PRINTG          reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    LEFTPARENT      reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    INI_INT         reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    INI_FLOAT       reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    RIGHTKEY        reduce using rule 36 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)


state 145

    (38) write_found -> write_found_aux COMMA write_found .

    RIGHTPARENT     reduce using rule 38 (write_found -> write_found_aux COMMA write_found .)


state 146

    (40) write_found_aux -> INI_STRING string_appear print_exp .

    COMMA           reduce using rule 40 (write_found_aux -> INI_STRING string_appear print_exp .)
    RIGHTPARENT     reduce using rule 40 (write_found_aux -> INI_STRING string_appear print_exp .)


state 147

    (74) aux_term -> SPLIT_BY add_operator term .

    ADD             reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    LESS            reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    IF              reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    WHILE           reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    ID              reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    PRINTG          reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    LEFTPARENT      reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    INI_INT         reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    INI_FLOAT       reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTKEY        reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTPARENT     reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    COMMA           reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    DOTCOMMA        reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    GREATERTN       reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    LESSTN          reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    SAME            reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)
    NOTSAME         reduce using rule 74 (aux_term -> SPLIT_BY add_operator term .)


state 148

    (75) aux_term -> MULT_BY add_operator term .

    ADD             reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    LESS            reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    IF              reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    WHILE           reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    ID              reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    PRINTG          reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    LEFTPARENT      reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    INI_INT         reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    INI_FLOAT       reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    RIGHTKEY        reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    RIGHTPARENT     reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    COMMA           reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    DOTCOMMA        reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    GREATERTN       reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    LESSTN          reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    SAME            reduce using rule 75 (aux_term -> MULT_BY add_operator term .)
    NOTSAME         reduce using rule 75 (aux_term -> MULT_BY add_operator term .)


state 149

    (85) aux_expo -> TIMES_BY_SAME add_operator fact .

    SPLIT_BY        reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    MULT_BY         reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    ADD             reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESS            reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    IF              reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    WHILE           reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    ID              reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    PRINTG          reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LEFTPARENT      reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    INI_INT         reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    INI_FLOAT       reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTKEY        reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTPARENT     reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    COMMA           reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    DOTCOMMA        reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    GREATERTN       reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESSTN          reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    SAME            reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    NOTSAME         reduce using rule 85 (aux_expo -> TIMES_BY_SAME add_operator fact .)


state 150

    (87) assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .

    IF              reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    WHILE           reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    ID              reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    PRINTG          reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    LEFTPARENT      reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_INT         reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_FLOAT       reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RIGHTKEY        reduce using rule 87 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)


state 151

    (100) set_value -> INI_INT aux_int_check append_operand . DOTCOMMA

    DOTCOMMA        shift and go to state 162


state 152

    (101) set_value -> INI_FLOAT aux_float_check append_operand . DOTCOMMA

    DOTCOMMA        shift and go to state 163


state 153

    (54) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT . condition_code end_cond condition_end_check
    (58) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 165

    condition_code                 shift and go to state 164

state 154

    (67) condition_expresion -> expresion_line condition_signs expresion_line . condtion_appear
    (55) condtion_appear -> .

    RIGHTPARENT     reduce using rule 55 (condtion_appear -> .)

    condtion_appear                shift and go to state 166

state 155

    (61) condition_signs -> GREATERTN add_operator .

    LEFTPARENT      reduce using rule 61 (condition_signs -> GREATERTN add_operator .)
    INI_INT         reduce using rule 61 (condition_signs -> GREATERTN add_operator .)
    INI_FLOAT       reduce using rule 61 (condition_signs -> GREATERTN add_operator .)
    ID              reduce using rule 61 (condition_signs -> GREATERTN add_operator .)


state 156

    (62) condition_signs -> LESSTN add_operator .

    LEFTPARENT      reduce using rule 62 (condition_signs -> LESSTN add_operator .)
    INI_INT         reduce using rule 62 (condition_signs -> LESSTN add_operator .)
    INI_FLOAT       reduce using rule 62 (condition_signs -> LESSTN add_operator .)
    ID              reduce using rule 62 (condition_signs -> LESSTN add_operator .)


state 157

    (63) condition_signs -> SAME add_operator .

    LEFTPARENT      reduce using rule 63 (condition_signs -> SAME add_operator .)
    INI_INT         reduce using rule 63 (condition_signs -> SAME add_operator .)
    INI_FLOAT       reduce using rule 63 (condition_signs -> SAME add_operator .)
    ID              reduce using rule 63 (condition_signs -> SAME add_operator .)


state 158

    (64) condition_signs -> NOTSAME add_operator .

    LEFTPARENT      reduce using rule 64 (condition_signs -> NOTSAME add_operator .)
    INI_INT         reduce using rule 64 (condition_signs -> NOTSAME add_operator .)
    INI_FLOAT       reduce using rule 64 (condition_signs -> NOTSAME add_operator .)
    ID              reduce using rule 64 (condition_signs -> NOTSAME add_operator .)


state 159

    (52) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT . condition_code end_cond
    (58) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 165

    condition_code                 shift and go to state 167

state 160

    (43) func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT . end_func_call DOTCOMMA
    (47) end_func_call -> .

    DOTCOMMA        reduce using rule 47 (end_func_call -> .)

    end_func_call                  shift and go to state 168

state 161

    (48) func_calls_params -> expresion_line parameter_call COMMA . add_parameter func_calls_params
    (51) add_parameter -> .

    LEFTPARENT      reduce using rule 51 (add_parameter -> .)
    INI_INT         reduce using rule 51 (add_parameter -> .)
    INI_FLOAT       reduce using rule 51 (add_parameter -> .)
    ID              reduce using rule 51 (add_parameter -> .)

    add_parameter                  shift and go to state 169

state 162

    (100) set_value -> INI_INT aux_int_check append_operand DOTCOMMA .

    IF              reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    WHILE           reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    ID              reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    PRINTG          reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    LEFTPARENT      reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    INI_INT         reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    INI_FLOAT       reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    RIGHTKEY        reduce using rule 100 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)


state 163

    (101) set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .

    IF              reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    WHILE           reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    ID              reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    PRINTG          reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    LEFTPARENT      reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    INI_INT         reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    INI_FLOAT       reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    RIGHTKEY        reduce using rule 101 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)


state 164

    (54) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code . end_cond condition_end_check
    (60) end_cond -> .

    ELSE            reduce using rule 60 (end_cond -> .)
    IF              reduce using rule 60 (end_cond -> .)
    WHILE           reduce using rule 60 (end_cond -> .)
    ID              reduce using rule 60 (end_cond -> .)
    PRINTG          reduce using rule 60 (end_cond -> .)
    LEFTPARENT      reduce using rule 60 (end_cond -> .)
    INI_INT         reduce using rule 60 (end_cond -> .)
    INI_FLOAT       reduce using rule 60 (end_cond -> .)
    RIGHTKEY        reduce using rule 60 (end_cond -> .)

    end_cond                       shift and go to state 170

state 165

    (58) condition_code -> LEFTKEY . lets func_code_aux RIGHTKEY
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (105) empty -> .

    LET             shift and go to state 7
    IF              reduce using rule 105 (empty -> .)
    WHILE           reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PRINTG          reduce using rule 105 (empty -> .)
    LEFTPARENT      reduce using rule 105 (empty -> .)
    INI_INT         reduce using rule 105 (empty -> .)
    INI_FLOAT       reduce using rule 105 (empty -> .)
    RIGHTKEY        reduce using rule 105 (empty -> .)

    lets                           shift and go to state 171
    empty                          shift and go to state 8

state 166

    (67) condition_expresion -> expresion_line condition_signs expresion_line condtion_appear .

    RIGHTPARENT     reduce using rule 67 (condition_expresion -> expresion_line condition_signs expresion_line condtion_appear .)


state 167

    (52) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code . end_cond
    (60) end_cond -> .

    IF              reduce using rule 60 (end_cond -> .)
    WHILE           reduce using rule 60 (end_cond -> .)
    ID              reduce using rule 60 (end_cond -> .)
    PRINTG          reduce using rule 60 (end_cond -> .)
    LEFTPARENT      reduce using rule 60 (end_cond -> .)
    INI_INT         reduce using rule 60 (end_cond -> .)
    INI_FLOAT       reduce using rule 60 (end_cond -> .)
    RIGHTKEY        reduce using rule 60 (end_cond -> .)

    end_cond                       shift and go to state 172

state 168

    (43) func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call . DOTCOMMA

    DOTCOMMA        shift and go to state 173


state 169

    (48) func_calls_params -> expresion_line parameter_call COMMA add_parameter . func_calls_params
    (48) func_calls_params -> . expresion_line parameter_call COMMA add_parameter func_calls_params
    (49) func_calls_params -> . expresion_line parameter_call
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists
    (95) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73
    ID              shift and go to state 97

    expresion_line                 shift and go to state 120
    func_calls_params              shift and go to state 174
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71
    call_let                       shift and go to state 96

state 170

    (54) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond . condition_end_check
    (56) condition_end_check -> . ELSE condition_code end_condition
    (57) condition_end_check -> . end_condition
    (59) end_condition -> .

    ELSE            shift and go to state 176
    IF              reduce using rule 59 (end_condition -> .)
    WHILE           reduce using rule 59 (end_condition -> .)
    ID              reduce using rule 59 (end_condition -> .)
    PRINTG          reduce using rule 59 (end_condition -> .)
    LEFTPARENT      reduce using rule 59 (end_condition -> .)
    INI_INT         reduce using rule 59 (end_condition -> .)
    INI_FLOAT       reduce using rule 59 (end_condition -> .)
    RIGHTKEY        reduce using rule 59 (end_condition -> .)

    condition_end_check            shift and go to state 175
    end_condition                  shift and go to state 177

state 171

    (58) condition_code -> LEFTKEY lets . func_code_aux RIGHTKEY
    (28) func_code_aux -> . action func_code_aux
    (29) func_code_aux -> .
    (30) action -> . assign
    (31) action -> . expresion_line
    (32) action -> . condition
    (33) action -> . while
    (34) action -> . func_call
    (35) action -> . write
    (86) assign -> . call_let set_appear SET set_value
    (87) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (68) expresion_line -> . term term_appear
    (69) expresion_line -> . term term_appear aux_expresion
    (54) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (52) while -> . WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (43) func_call -> . ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA
    (44) func_call -> .
    (36) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (95) call_let -> . ID check_let_exists
    (72) term -> . fact factor_appear
    (73) term -> . fact factor_appear aux_term
    (76) fact -> . expo expo_appear
    (77) fact -> . expo expo_appear aux_expo
    (78) expo -> . parent_aux
    (79) expo -> . call_lets
    (80) expo -> . call_let
    (81) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (96) call_lets -> . INI_INT check_global_const_exists
    (97) call_lets -> . INI_FLOAT check_global_const_exists

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 29 (func_code_aux -> .)
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    RIGHTKEY        reduce using rule 29 (func_code_aux -> .)
    IF              shift and go to state 63
    WHILE           shift and go to state 65
    ID              shift and go to state 66
    PRINTG          shift and go to state 67
    LEFTPARENT      shift and go to state 64
    INI_INT         shift and go to state 72
    INI_FLOAT       shift and go to state 73

  ! IF              [ reduce using rule 44 (func_call -> .) ]
  ! WHILE           [ reduce using rule 44 (func_call -> .) ]
  ! ID              [ reduce using rule 44 (func_call -> .) ]
  ! PRINTG          [ reduce using rule 44 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 44 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 44 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 44 (func_call -> .) ]
  ! RIGHTKEY        [ reduce using rule 44 (func_call -> .) ]

    func_code_aux                  shift and go to state 178
    action                         shift and go to state 54
    assign                         shift and go to state 55
    expresion_line                 shift and go to state 56
    condition                      shift and go to state 57
    while                          shift and go to state 58
    func_call                      shift and go to state 59
    write                          shift and go to state 60
    call_let                       shift and go to state 61
    term                           shift and go to state 62
    fact                           shift and go to state 68
    expo                           shift and go to state 69
    parent_aux                     shift and go to state 70
    call_lets                      shift and go to state 71

state 172

    (52) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .

    IF              reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    WHILE           reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    ID              reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    PRINTG          reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    LEFTPARENT      reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    INI_INT         reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    INI_FLOAT       reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    RIGHTKEY        reduce using rule 52 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)


state 173

    (43) func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .

    IF              reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    WHILE           reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    ID              reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    PRINTG          reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    LEFTPARENT      reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    INI_INT         reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    INI_FLOAT       reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)
    RIGHTKEY        reduce using rule 43 (func_call -> ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call DOTCOMMA .)


state 174

    (48) func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params .

    RIGHTPARENT     reduce using rule 48 (func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params .)


state 175

    (54) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .

    IF              reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    WHILE           reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    ID              reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    PRINTG          reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    LEFTPARENT      reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    INI_INT         reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    INI_FLOAT       reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    RIGHTKEY        reduce using rule 54 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)


state 176

    (56) condition_end_check -> ELSE . condition_code end_condition
    (58) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 165

    condition_code                 shift and go to state 179

state 177

    (57) condition_end_check -> end_condition .

    IF              reduce using rule 57 (condition_end_check -> end_condition .)
    WHILE           reduce using rule 57 (condition_end_check -> end_condition .)
    ID              reduce using rule 57 (condition_end_check -> end_condition .)
    PRINTG          reduce using rule 57 (condition_end_check -> end_condition .)
    LEFTPARENT      reduce using rule 57 (condition_end_check -> end_condition .)
    INI_INT         reduce using rule 57 (condition_end_check -> end_condition .)
    INI_FLOAT       reduce using rule 57 (condition_end_check -> end_condition .)
    RIGHTKEY        reduce using rule 57 (condition_end_check -> end_condition .)


state 178

    (58) condition_code -> LEFTKEY lets func_code_aux . RIGHTKEY

    RIGHTKEY        shift and go to state 180


state 179

    (56) condition_end_check -> ELSE condition_code . end_condition
    (59) end_condition -> .

    IF              reduce using rule 59 (end_condition -> .)
    WHILE           reduce using rule 59 (end_condition -> .)
    ID              reduce using rule 59 (end_condition -> .)
    PRINTG          reduce using rule 59 (end_condition -> .)
    LEFTPARENT      reduce using rule 59 (end_condition -> .)
    INI_INT         reduce using rule 59 (end_condition -> .)
    INI_FLOAT       reduce using rule 59 (end_condition -> .)
    RIGHTKEY        reduce using rule 59 (end_condition -> .)

    end_condition                  shift and go to state 181

state 180

    (58) condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .

    ELSE            reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    IF              reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    WHILE           reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    ID              reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    PRINTG          reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    LEFTPARENT      reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    INI_INT         reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    INI_FLOAT       reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    RIGHTKEY        reduce using rule 58 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)


state 181

    (56) condition_end_check -> ELSE condition_code end_condition .

    IF              reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    WHILE           reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    ID              reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    PRINTG          reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    LEFTPARENT      reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    INI_INT         reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    INI_FLOAT       reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)
    RIGHTKEY        reduce using rule 56 (condition_end_check -> ELSE condition_code end_condition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 51 resolved as shift
WARNING: shift/reduce conflict for ID in state 51 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 51 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 51 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 51 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 54 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 54 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 54 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 54 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 54 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 54 resolved as shift
WARNING: shift/reduce conflict for IF in state 171 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 171 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 171 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 171 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 171 resolved as shift
WARNING: reduce/reduce conflict in state 51 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 51
WARNING: reduce/reduce conflict in state 54 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 54
WARNING: reduce/reduce conflict in state 66 resolved using rule (func_call_ID -> <empty>)
WARNING: rejected rule (check_let_exists -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 111 resolved using rule (add_operand -> <empty>)
WARNING: rejected rule (aux_int_check -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 112 resolved using rule (add_operand -> <empty>)
WARNING: rejected rule (aux_float_check -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 171 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 171
WARNING: Rule (func_call -> <empty>) is never reduced
WARNING: Rule (aux_int_check -> <empty>) is never reduced
WARNING: Rule (aux_float_check -> <empty>) is never reduced
