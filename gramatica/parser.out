Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    ENDFUNC
    GOTO
    GOTOF
    GOTOT
    IGNOREGOTOFUNC
    INI_BOOL
    LEFTBRACK
    MAIN
    RIGHTBRACK

Grammar

Rule 0     S' -> compile
Rule 1     compile -> PROG ID seen_program DOTCOMMA lets modules
Rule 2     compile -> <empty>
Rule 3     modules -> func modules
Rule 4     modules -> <empty>
Rule 5     seen_program -> <empty>
Rule 6     lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
Rule 7     lets -> empty
Rule 8     seen_lets -> <empty>
Rule 9     type -> INT seen_type
Rule 10    type -> FLOAT seen_type
Rule 11    type -> BOOL seen_type
Rule 12    seen_type -> <empty>
Rule 13    seen_ID_let -> <empty>
Rule 14    aux_let -> COMMA ID seen_ID_let aux_let
Rule 15    aux_let -> <empty>
Rule 16    func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code
Rule 17    seen_func_name -> <empty>
Rule 18    params -> LEFTPARENT param_table_init param_declare RIGHTPARENT
Rule 19    param_table_init -> <empty>
Rule 20    param_declare -> type ID seen_ID_let param_declare
Rule 21    param_declare -> COMMA param_declare
Rule 22    param_declare -> empty
Rule 23    return_func_type -> type
Rule 24    return_func_type -> VOID void_detect
Rule 25    void_detect -> <empty>
Rule 26    func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func
Rule 27    end_func -> <empty>
Rule 28    func_code_aux -> action func_code_aux
Rule 29    func_code_aux -> <empty>
Rule 30    action -> assign
Rule 31    action -> expresion_line
Rule 32    action -> condition
Rule 33    action -> while
Rule 34    action -> func_call DOTCOMMA
Rule 35    action -> write
Rule 36    action -> return
Rule 37    return -> RETURN expresion_line return_aux DOTCOMMA
Rule 38    return_aux -> <empty>
Rule 39    write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
Rule 40    write_found -> write_found_aux
Rule 41    write_found -> write_found_aux COMMA write_found
Rule 42    write_found_aux -> expresion_line print_exp
Rule 43    write_found_aux -> INI_STRING string_appear print_exp
Rule 44    print_exp -> <empty>
Rule 45    string_appear -> <empty>
Rule 46    func_call -> AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call
Rule 47    func_call -> <empty>
Rule 48    end_func_call_params -> <empty>
Rule 49    func_call_ID -> <empty>
Rule 50    end_func_call -> <empty>
Rule 51    func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params
Rule 52    func_calls_params -> expresion_line parameter_call
Rule 53    parameter_call -> <empty>
Rule 54    add_parameter -> <empty>
Rule 55    while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
Rule 56    while_appear -> <empty>
Rule 57    condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
Rule 58    condtion_appear -> <empty>
Rule 59    condition_end_check -> ELSE condition_code end_condition
Rule 60    condition_end_check -> end_condition
Rule 61    condition_code -> LEFTKEY lets func_code_aux RIGHTKEY
Rule 62    end_condition -> <empty>
Rule 63    end_cond -> <empty>
Rule 64    condition_signs -> GREATERTN add_operator
Rule 65    condition_signs -> LESSTN add_operator
Rule 66    condition_signs -> SAME add_operator
Rule 67    condition_signs -> NOTSAME add_operator
Rule 68    condition_signs -> <empty>
Rule 69    condition_expresion -> expresion_line condtion_appear
Rule 70    condition_expresion -> expresion_line condition_signs expresion_line condtion_appear
Rule 71    expresion_line -> term term_appear
Rule 72    expresion_line -> term term_appear aux_expresion
Rule 73    aux_expresion -> ADD add_operator expresion_line
Rule 74    aux_expresion -> LESS add_operator expresion_line
Rule 75    term -> fact factor_appear
Rule 76    term -> fact factor_appear aux_term
Rule 77    aux_term -> SPLIT_BY add_operator term
Rule 78    aux_term -> MULT_BY add_operator term
Rule 79    fact -> expo expo_appear
Rule 80    fact -> expo expo_appear aux_expo
Rule 81    expo -> parent_aux
Rule 82    expo -> call_lets
Rule 83    expo -> call_let
Rule 84    parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
Rule 85    right_parent_condition -> <empty>
Rule 86    found_init_parent -> <empty>
Rule 87    found_end_parent -> <empty>
Rule 88    aux_expo -> TIMES_BY_SAME add_operator fact
Rule 89    assign -> call_let set_appear SET set_value
Rule 90    assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
Rule 91    assign -> call_let set_appear SET func_call DOTCOMMA
Rule 92    seen_final_asignacion -> <empty>
Rule 93    add_operand -> <empty>
Rule 94    add_operator -> <empty>
Rule 95    set_appear -> <empty>
Rule 96    term_appear -> <empty>
Rule 97    factor_appear -> <empty>
Rule 98    expo_appear -> <empty>
Rule 99    call_let -> ID check_let_exists
Rule 100   call_lets -> INI_INT check_global_const_exists
Rule 101   call_lets -> INI_FLOAT check_global_const_exists
Rule 102   check_global_const_exists -> add_operand_const
Rule 103   add_operand_const -> <empty>
Rule 104   check_let_exists -> <empty>
Rule 105   set_value -> INI_INT aux_int_check append_operand DOTCOMMA
Rule 106   set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA
Rule 107   append_operand -> <empty>
Rule 108   aux_int_check -> <empty>
Rule 109   aux_float_check -> <empty>
Rule 110   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 73
AT                   : 46
BOOL                 : 11
COMMA                : 14 21 41 51
DO                   : 
DOTCOMMA             : 1 6 34 37 39 90 91 105 106
ELSE                 : 59
ENDFUNC              : 
FLOAT                : 10
FUNC                 : 16
GOTO                 : 
GOTOF                : 
GOTOT                : 
GREATERTN            : 64
ID                   : 1 6 14 16 20 46 99
IF                   : 57
IGNOREGOTOFUNC       : 
INI_BOOL             : 
INI_FLOAT            : 101 106
INI_INT              : 100 105
INI_STRING           : 43
INT                  : 9
LEFTBRACK            : 
LEFTKEY              : 26 61
LEFTPARENT           : 18 39 46 55 57 84
LESS                 : 74
LESSTN               : 65
LET                  : 6
MAIN                 : 
MULT_BY              : 78
NOTSAME              : 67
PRINTG               : 39
PROG                 : 1
RETURN               : 37
RIGHTBRACK           : 
RIGHTKEY             : 26 61
RIGHTPARENT          : 18 39 46 55 57 84
SAME                 : 66
SET                  : 89 90 91
SPLIT_BY             : 77
TIMES_BY_SAME        : 88
TWOPOINTS            : 16 16
VOID                 : 24
WHILE                : 55
error                : 

Nonterminals, with rules where they appear

action               : 28
add_operand          : 
add_operand_const    : 102
add_operator         : 64 65 66 67 73 74 77 78 88
add_parameter        : 51
append_operand       : 105 106
assign               : 30
aux_expo             : 80
aux_expresion        : 72
aux_float_check      : 106
aux_int_check        : 105
aux_let              : 6 14
aux_term             : 76
call_let             : 83 89 90 91
call_lets            : 82
check_global_const_exists : 100 101
check_let_exists     : 99
compile              : 0
condition            : 32
condition_code       : 55 57 59
condition_end_check  : 57
condition_expresion  : 55 57
condition_signs      : 70
condtion_appear      : 69 70
empty                : 7 22
end_cond             : 55 57
end_condition        : 59 60
end_func             : 26
end_func_call        : 46
end_func_call_params : 46
expo                 : 79 80
expo_appear          : 79 80
expresion_line       : 31 37 42 51 52 69 70 70 73 74 84 90
fact                 : 75 76 88
factor_appear        : 75 76
found_end_parent     : 84
found_init_parent    : 57 84
func                 : 3
func_call            : 34 91
func_call_ID         : 46
func_calls_params    : 46 51
func_code            : 16
func_code_aux        : 26 28 61
lets                 : 1 6 26 61
modules              : 1 3
param_declare        : 18 20 21
param_table_init     : 18
parameter_call       : 51 52
params               : 16
parent_aux           : 81
print_exp            : 42 43
return               : 36
return_aux           : 37
return_func_type     : 16
right_parent_condition : 55 57
seen_ID_let          : 6 14 20
seen_final_asignacion : 90
seen_func_name       : 16
seen_lets            : 6
seen_program         : 1
seen_type            : 9 10 11
set_appear           : 89 90 91
set_value            : 89
string_appear        : 43
term                 : 71 72 77 78
term_appear          : 71 72
type                 : 6 20 23
void_detect          : 24
while                : 33
while_appear         : 55
write                : 35
write_found          : 39 41
write_found_aux      : 40 41

Parsing method: LALR

state 0

    (0) S' -> . compile
    (1) compile -> . PROG ID seen_program DOTCOMMA lets modules
    (2) compile -> .

    PROG            shift and go to state 2
    $end            reduce using rule 2 (compile -> .)

    compile                        shift and go to state 1

state 1

    (0) S' -> compile .



state 2

    (1) compile -> PROG . ID seen_program DOTCOMMA lets modules

    ID              shift and go to state 3


state 3

    (1) compile -> PROG ID . seen_program DOTCOMMA lets modules
    (5) seen_program -> .

    DOTCOMMA        reduce using rule 5 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) compile -> PROG ID seen_program . DOTCOMMA lets modules

    DOTCOMMA        shift and go to state 5


state 5

    (1) compile -> PROG ID seen_program DOTCOMMA . lets modules
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (110) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 110 (empty -> .)
    $end            reduce using rule 110 (empty -> .)

    lets                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) compile -> PROG ID seen_program DOTCOMMA lets . modules
    (3) modules -> . func modules
    (4) modules -> .
    (16) func -> . FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    $end            reduce using rule 4 (modules -> .)
    FUNC            shift and go to state 11

    modules                        shift and go to state 9
    func                           shift and go to state 10

state 7

    (6) lets -> LET . seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (8) seen_lets -> .

    INT             reduce using rule 8 (seen_lets -> .)
    FLOAT           reduce using rule 8 (seen_lets -> .)
    BOOL            reduce using rule 8 (seen_lets -> .)

    seen_lets                      shift and go to state 12

state 8

    (7) lets -> empty .

    FUNC            reduce using rule 7 (lets -> empty .)
    $end            reduce using rule 7 (lets -> empty .)
    IF              reduce using rule 7 (lets -> empty .)
    WHILE           reduce using rule 7 (lets -> empty .)
    AT              reduce using rule 7 (lets -> empty .)
    PRINTG          reduce using rule 7 (lets -> empty .)
    RETURN          reduce using rule 7 (lets -> empty .)
    ID              reduce using rule 7 (lets -> empty .)
    LEFTPARENT      reduce using rule 7 (lets -> empty .)
    INI_INT         reduce using rule 7 (lets -> empty .)
    INI_FLOAT       reduce using rule 7 (lets -> empty .)
    RIGHTKEY        reduce using rule 7 (lets -> empty .)
    DOTCOMMA        reduce using rule 7 (lets -> empty .)


state 9

    (1) compile -> PROG ID seen_program DOTCOMMA lets modules .

    $end            reduce using rule 1 (compile -> PROG ID seen_program DOTCOMMA lets modules .)


state 10

    (3) modules -> func . modules
    (3) modules -> . func modules
    (4) modules -> .
    (16) func -> . FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    $end            reduce using rule 4 (modules -> .)
    FUNC            shift and go to state 11

    func                           shift and go to state 10
    modules                        shift and go to state 13

state 11

    (16) func -> FUNC . ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    ID              shift and go to state 14


state 12

    (6) lets -> LET seen_lets . type ID seen_ID_let aux_let DOTCOMMA lets
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18

    type                           shift and go to state 15

state 13

    (3) modules -> func modules .

    $end            reduce using rule 3 (modules -> func modules .)


state 14

    (16) func -> FUNC ID . seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code
    (17) seen_func_name -> .

    LEFTPARENT      reduce using rule 17 (seen_func_name -> .)

    seen_func_name                 shift and go to state 19

state 15

    (6) lets -> LET seen_lets type . ID seen_ID_let aux_let DOTCOMMA lets

    ID              shift and go to state 20


state 16

    (9) type -> INT . seen_type
    (12) seen_type -> .

    ID              reduce using rule 12 (seen_type -> .)
    TWOPOINTS       reduce using rule 12 (seen_type -> .)

    seen_type                      shift and go to state 21

state 17

    (10) type -> FLOAT . seen_type
    (12) seen_type -> .

    ID              reduce using rule 12 (seen_type -> .)
    TWOPOINTS       reduce using rule 12 (seen_type -> .)

    seen_type                      shift and go to state 22

state 18

    (11) type -> BOOL . seen_type
    (12) seen_type -> .

    ID              reduce using rule 12 (seen_type -> .)
    TWOPOINTS       reduce using rule 12 (seen_type -> .)

    seen_type                      shift and go to state 23

state 19

    (16) func -> FUNC ID seen_func_name . params TWOPOINTS return_func_type TWOPOINTS func_code
    (18) params -> . LEFTPARENT param_table_init param_declare RIGHTPARENT

    LEFTPARENT      shift and go to state 25

    params                         shift and go to state 24

state 20

    (6) lets -> LET seen_lets type ID . seen_ID_let aux_let DOTCOMMA lets
    (13) seen_ID_let -> .

    COMMA           reduce using rule 13 (seen_ID_let -> .)
    DOTCOMMA        reduce using rule 13 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 26

state 21

    (9) type -> INT seen_type .

    ID              reduce using rule 9 (type -> INT seen_type .)
    TWOPOINTS       reduce using rule 9 (type -> INT seen_type .)


state 22

    (10) type -> FLOAT seen_type .

    ID              reduce using rule 10 (type -> FLOAT seen_type .)
    TWOPOINTS       reduce using rule 10 (type -> FLOAT seen_type .)


state 23

    (11) type -> BOOL seen_type .

    ID              reduce using rule 11 (type -> BOOL seen_type .)
    TWOPOINTS       reduce using rule 11 (type -> BOOL seen_type .)


state 24

    (16) func -> FUNC ID seen_func_name params . TWOPOINTS return_func_type TWOPOINTS func_code

    TWOPOINTS       shift and go to state 27


state 25

    (18) params -> LEFTPARENT . param_table_init param_declare RIGHTPARENT
    (19) param_table_init -> .

    COMMA           reduce using rule 19 (param_table_init -> .)
    INT             reduce using rule 19 (param_table_init -> .)
    FLOAT           reduce using rule 19 (param_table_init -> .)
    BOOL            reduce using rule 19 (param_table_init -> .)
    RIGHTPARENT     reduce using rule 19 (param_table_init -> .)

    param_table_init               shift and go to state 28

state 26

    (6) lets -> LET seen_lets type ID seen_ID_let . aux_let DOTCOMMA lets
    (14) aux_let -> . COMMA ID seen_ID_let aux_let
    (15) aux_let -> .

    COMMA           shift and go to state 30
    DOTCOMMA        reduce using rule 15 (aux_let -> .)

    aux_let                        shift and go to state 29

state 27

    (16) func -> FUNC ID seen_func_name params TWOPOINTS . return_func_type TWOPOINTS func_code
    (23) return_func_type -> . type
    (24) return_func_type -> . VOID void_detect
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type

    VOID            shift and go to state 33
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18

    return_func_type               shift and go to state 31
    type                           shift and go to state 32

state 28

    (18) params -> LEFTPARENT param_table_init . param_declare RIGHTPARENT
    (20) param_declare -> . type ID seen_ID_let param_declare
    (21) param_declare -> . COMMA param_declare
    (22) param_declare -> . empty
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type
    (110) empty -> .

    COMMA           shift and go to state 36
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 110 (empty -> .)

    param_declare                  shift and go to state 34
    type                           shift and go to state 35
    empty                          shift and go to state 37

state 29

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let . DOTCOMMA lets

    DOTCOMMA        shift and go to state 38


state 30

    (14) aux_let -> COMMA . ID seen_ID_let aux_let

    ID              shift and go to state 39


state 31

    (16) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type . TWOPOINTS func_code

    TWOPOINTS       shift and go to state 40


state 32

    (23) return_func_type -> type .

    TWOPOINTS       reduce using rule 23 (return_func_type -> type .)


state 33

    (24) return_func_type -> VOID . void_detect
    (25) void_detect -> .

    TWOPOINTS       reduce using rule 25 (void_detect -> .)

    void_detect                    shift and go to state 41

state 34

    (18) params -> LEFTPARENT param_table_init param_declare . RIGHTPARENT

    RIGHTPARENT     shift and go to state 42


state 35

    (20) param_declare -> type . ID seen_ID_let param_declare

    ID              shift and go to state 43


state 36

    (21) param_declare -> COMMA . param_declare
    (20) param_declare -> . type ID seen_ID_let param_declare
    (21) param_declare -> . COMMA param_declare
    (22) param_declare -> . empty
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type
    (110) empty -> .

    COMMA           shift and go to state 36
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 110 (empty -> .)

    param_declare                  shift and go to state 44
    type                           shift and go to state 35
    empty                          shift and go to state 37

state 37

    (22) param_declare -> empty .

    RIGHTPARENT     reduce using rule 22 (param_declare -> empty .)


state 38

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA . lets
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (110) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 110 (empty -> .)
    $end            reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    AT              reduce using rule 110 (empty -> .)
    PRINTG          reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    LEFTPARENT      reduce using rule 110 (empty -> .)
    INI_INT         reduce using rule 110 (empty -> .)
    INI_FLOAT       reduce using rule 110 (empty -> .)
    RIGHTKEY        reduce using rule 110 (empty -> .)
    DOTCOMMA        reduce using rule 110 (empty -> .)

    lets                           shift and go to state 45
    empty                          shift and go to state 8

state 39

    (14) aux_let -> COMMA ID . seen_ID_let aux_let
    (13) seen_ID_let -> .

    COMMA           reduce using rule 13 (seen_ID_let -> .)
    DOTCOMMA        reduce using rule 13 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 46

state 40

    (16) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS . func_code
    (26) func_code -> . LEFTKEY lets func_code_aux RIGHTKEY end_func

    LEFTKEY         shift and go to state 48

    func_code                      shift and go to state 47

state 41

    (24) return_func_type -> VOID void_detect .

    TWOPOINTS       reduce using rule 24 (return_func_type -> VOID void_detect .)


state 42

    (18) params -> LEFTPARENT param_table_init param_declare RIGHTPARENT .

    TWOPOINTS       reduce using rule 18 (params -> LEFTPARENT param_table_init param_declare RIGHTPARENT .)


state 43

    (20) param_declare -> type ID . seen_ID_let param_declare
    (13) seen_ID_let -> .

    COMMA           reduce using rule 13 (seen_ID_let -> .)
    INT             reduce using rule 13 (seen_ID_let -> .)
    FLOAT           reduce using rule 13 (seen_ID_let -> .)
    BOOL            reduce using rule 13 (seen_ID_let -> .)
    RIGHTPARENT     reduce using rule 13 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 49

state 44

    (21) param_declare -> COMMA param_declare .

    RIGHTPARENT     reduce using rule 21 (param_declare -> COMMA param_declare .)


state 45

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .

    FUNC            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    $end            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    IF              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    WHILE           reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    AT              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    PRINTG          reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    RETURN          reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    ID              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    LEFTPARENT      reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    INI_INT         reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    INI_FLOAT       reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    RIGHTKEY        reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    DOTCOMMA        reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)


state 46

    (14) aux_let -> COMMA ID seen_ID_let . aux_let
    (14) aux_let -> . COMMA ID seen_ID_let aux_let
    (15) aux_let -> .

    COMMA           shift and go to state 30
    DOTCOMMA        reduce using rule 15 (aux_let -> .)

    aux_let                        shift and go to state 50

state 47

    (16) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .

    FUNC            reduce using rule 16 (func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .)
    $end            reduce using rule 16 (func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .)


state 48

    (26) func_code -> LEFTKEY . lets func_code_aux RIGHTKEY end_func
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (110) empty -> .

    LET             shift and go to state 7
    IF              reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    AT              reduce using rule 110 (empty -> .)
    PRINTG          reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    LEFTPARENT      reduce using rule 110 (empty -> .)
    INI_INT         reduce using rule 110 (empty -> .)
    INI_FLOAT       reduce using rule 110 (empty -> .)
    RIGHTKEY        reduce using rule 110 (empty -> .)
    DOTCOMMA        reduce using rule 110 (empty -> .)

    lets                           shift and go to state 51
    empty                          shift and go to state 8

state 49

    (20) param_declare -> type ID seen_ID_let . param_declare
    (20) param_declare -> . type ID seen_ID_let param_declare
    (21) param_declare -> . COMMA param_declare
    (22) param_declare -> . empty
    (9) type -> . INT seen_type
    (10) type -> . FLOAT seen_type
    (11) type -> . BOOL seen_type
    (110) empty -> .

    COMMA           shift and go to state 36
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 110 (empty -> .)

    type                           shift and go to state 35
    param_declare                  shift and go to state 52
    empty                          shift and go to state 37

state 50

    (14) aux_let -> COMMA ID seen_ID_let aux_let .

    DOTCOMMA        reduce using rule 14 (aux_let -> COMMA ID seen_ID_let aux_let .)


state 51

    (26) func_code -> LEFTKEY lets . func_code_aux RIGHTKEY end_func
    (28) func_code_aux -> . action func_code_aux
    (29) func_code_aux -> .
    (30) action -> . assign
    (31) action -> . expresion_line
    (32) action -> . condition
    (33) action -> . while
    (34) action -> . func_call DOTCOMMA
    (35) action -> . write
    (36) action -> . return
    (89) assign -> . call_let set_appear SET set_value
    (90) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (91) assign -> . call_let set_appear SET func_call DOTCOMMA
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (57) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (55) while -> . WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (46) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call
    (47) func_call -> .
    (39) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (37) return -> . RETURN expresion_line return_aux DOTCOMMA
    (99) call_let -> . ID check_let_exists
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists

    RIGHTKEY        reduce using rule 29 (func_code_aux -> .)
    IF              shift and go to state 64
    WHILE           shift and go to state 66
    AT              shift and go to state 67
    DOTCOMMA        reduce using rule 47 (func_call -> .)
    PRINTG          shift and go to state 69
    RETURN          shift and go to state 70
    ID              shift and go to state 68
    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76

    func_code_aux                  shift and go to state 53
    action                         shift and go to state 54
    assign                         shift and go to state 55
    expresion_line                 shift and go to state 56
    condition                      shift and go to state 57
    while                          shift and go to state 58
    func_call                      shift and go to state 59
    write                          shift and go to state 60
    return                         shift and go to state 61
    call_let                       shift and go to state 62
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74

state 52

    (20) param_declare -> type ID seen_ID_let param_declare .

    RIGHTPARENT     reduce using rule 20 (param_declare -> type ID seen_ID_let param_declare .)


state 53

    (26) func_code -> LEFTKEY lets func_code_aux . RIGHTKEY end_func

    RIGHTKEY        shift and go to state 77


state 54

    (28) func_code_aux -> action . func_code_aux
    (28) func_code_aux -> . action func_code_aux
    (29) func_code_aux -> .
    (30) action -> . assign
    (31) action -> . expresion_line
    (32) action -> . condition
    (33) action -> . while
    (34) action -> . func_call DOTCOMMA
    (35) action -> . write
    (36) action -> . return
    (89) assign -> . call_let set_appear SET set_value
    (90) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (91) assign -> . call_let set_appear SET func_call DOTCOMMA
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (57) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (55) while -> . WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (46) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call
    (47) func_call -> .
    (39) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (37) return -> . RETURN expresion_line return_aux DOTCOMMA
    (99) call_let -> . ID check_let_exists
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists

    RIGHTKEY        reduce using rule 29 (func_code_aux -> .)
    IF              shift and go to state 64
    WHILE           shift and go to state 66
    AT              shift and go to state 67
    DOTCOMMA        reduce using rule 47 (func_call -> .)
    PRINTG          shift and go to state 69
    RETURN          shift and go to state 70
    ID              shift and go to state 68
    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76

    action                         shift and go to state 54
    func_code_aux                  shift and go to state 78
    assign                         shift and go to state 55
    expresion_line                 shift and go to state 56
    condition                      shift and go to state 57
    while                          shift and go to state 58
    func_call                      shift and go to state 59
    write                          shift and go to state 60
    return                         shift and go to state 61
    call_let                       shift and go to state 62
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74

state 55

    (30) action -> assign .

    IF              reduce using rule 30 (action -> assign .)
    WHILE           reduce using rule 30 (action -> assign .)
    AT              reduce using rule 30 (action -> assign .)
    PRINTG          reduce using rule 30 (action -> assign .)
    RETURN          reduce using rule 30 (action -> assign .)
    ID              reduce using rule 30 (action -> assign .)
    LEFTPARENT      reduce using rule 30 (action -> assign .)
    INI_INT         reduce using rule 30 (action -> assign .)
    INI_FLOAT       reduce using rule 30 (action -> assign .)
    DOTCOMMA        reduce using rule 30 (action -> assign .)
    RIGHTKEY        reduce using rule 30 (action -> assign .)


state 56

    (31) action -> expresion_line .

    IF              reduce using rule 31 (action -> expresion_line .)
    WHILE           reduce using rule 31 (action -> expresion_line .)
    AT              reduce using rule 31 (action -> expresion_line .)
    PRINTG          reduce using rule 31 (action -> expresion_line .)
    RETURN          reduce using rule 31 (action -> expresion_line .)
    ID              reduce using rule 31 (action -> expresion_line .)
    LEFTPARENT      reduce using rule 31 (action -> expresion_line .)
    INI_INT         reduce using rule 31 (action -> expresion_line .)
    INI_FLOAT       reduce using rule 31 (action -> expresion_line .)
    DOTCOMMA        reduce using rule 31 (action -> expresion_line .)
    RIGHTKEY        reduce using rule 31 (action -> expresion_line .)


state 57

    (32) action -> condition .

    IF              reduce using rule 32 (action -> condition .)
    WHILE           reduce using rule 32 (action -> condition .)
    AT              reduce using rule 32 (action -> condition .)
    PRINTG          reduce using rule 32 (action -> condition .)
    RETURN          reduce using rule 32 (action -> condition .)
    ID              reduce using rule 32 (action -> condition .)
    LEFTPARENT      reduce using rule 32 (action -> condition .)
    INI_INT         reduce using rule 32 (action -> condition .)
    INI_FLOAT       reduce using rule 32 (action -> condition .)
    DOTCOMMA        reduce using rule 32 (action -> condition .)
    RIGHTKEY        reduce using rule 32 (action -> condition .)


state 58

    (33) action -> while .

    IF              reduce using rule 33 (action -> while .)
    WHILE           reduce using rule 33 (action -> while .)
    AT              reduce using rule 33 (action -> while .)
    PRINTG          reduce using rule 33 (action -> while .)
    RETURN          reduce using rule 33 (action -> while .)
    ID              reduce using rule 33 (action -> while .)
    LEFTPARENT      reduce using rule 33 (action -> while .)
    INI_INT         reduce using rule 33 (action -> while .)
    INI_FLOAT       reduce using rule 33 (action -> while .)
    DOTCOMMA        reduce using rule 33 (action -> while .)
    RIGHTKEY        reduce using rule 33 (action -> while .)


state 59

    (34) action -> func_call . DOTCOMMA

    DOTCOMMA        shift and go to state 79


state 60

    (35) action -> write .

    IF              reduce using rule 35 (action -> write .)
    WHILE           reduce using rule 35 (action -> write .)
    AT              reduce using rule 35 (action -> write .)
    PRINTG          reduce using rule 35 (action -> write .)
    RETURN          reduce using rule 35 (action -> write .)
    ID              reduce using rule 35 (action -> write .)
    LEFTPARENT      reduce using rule 35 (action -> write .)
    INI_INT         reduce using rule 35 (action -> write .)
    INI_FLOAT       reduce using rule 35 (action -> write .)
    DOTCOMMA        reduce using rule 35 (action -> write .)
    RIGHTKEY        reduce using rule 35 (action -> write .)


state 61

    (36) action -> return .

    IF              reduce using rule 36 (action -> return .)
    WHILE           reduce using rule 36 (action -> return .)
    AT              reduce using rule 36 (action -> return .)
    PRINTG          reduce using rule 36 (action -> return .)
    RETURN          reduce using rule 36 (action -> return .)
    ID              reduce using rule 36 (action -> return .)
    LEFTPARENT      reduce using rule 36 (action -> return .)
    INI_INT         reduce using rule 36 (action -> return .)
    INI_FLOAT       reduce using rule 36 (action -> return .)
    DOTCOMMA        reduce using rule 36 (action -> return .)
    RIGHTKEY        reduce using rule 36 (action -> return .)


state 62

    (89) assign -> call_let . set_appear SET set_value
    (90) assign -> call_let . set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (91) assign -> call_let . set_appear SET func_call DOTCOMMA
    (83) expo -> call_let .
    (95) set_appear -> .

    TIMES_BY_SAME   reduce using rule 83 (expo -> call_let .)
    SPLIT_BY        reduce using rule 83 (expo -> call_let .)
    MULT_BY         reduce using rule 83 (expo -> call_let .)
    ADD             reduce using rule 83 (expo -> call_let .)
    LESS            reduce using rule 83 (expo -> call_let .)
    IF              reduce using rule 83 (expo -> call_let .)
    WHILE           reduce using rule 83 (expo -> call_let .)
    AT              reduce using rule 83 (expo -> call_let .)
    PRINTG          reduce using rule 83 (expo -> call_let .)
    RETURN          reduce using rule 83 (expo -> call_let .)
    ID              reduce using rule 83 (expo -> call_let .)
    LEFTPARENT      reduce using rule 83 (expo -> call_let .)
    INI_INT         reduce using rule 83 (expo -> call_let .)
    INI_FLOAT       reduce using rule 83 (expo -> call_let .)
    DOTCOMMA        reduce using rule 83 (expo -> call_let .)
    RIGHTKEY        reduce using rule 83 (expo -> call_let .)
    SET             reduce using rule 95 (set_appear -> .)

    set_appear                     shift and go to state 80

state 63

    (71) expresion_line -> term . term_appear
    (72) expresion_line -> term . term_appear aux_expresion
    (96) term_appear -> .

    ADD             reduce using rule 96 (term_appear -> .)
    LESS            reduce using rule 96 (term_appear -> .)
    IF              reduce using rule 96 (term_appear -> .)
    WHILE           reduce using rule 96 (term_appear -> .)
    AT              reduce using rule 96 (term_appear -> .)
    PRINTG          reduce using rule 96 (term_appear -> .)
    RETURN          reduce using rule 96 (term_appear -> .)
    ID              reduce using rule 96 (term_appear -> .)
    LEFTPARENT      reduce using rule 96 (term_appear -> .)
    INI_INT         reduce using rule 96 (term_appear -> .)
    INI_FLOAT       reduce using rule 96 (term_appear -> .)
    DOTCOMMA        reduce using rule 96 (term_appear -> .)
    RIGHTKEY        reduce using rule 96 (term_appear -> .)
    RIGHTPARENT     reduce using rule 96 (term_appear -> .)
    COMMA           reduce using rule 96 (term_appear -> .)
    GREATERTN       reduce using rule 96 (term_appear -> .)
    LESSTN          reduce using rule 96 (term_appear -> .)
    SAME            reduce using rule 96 (term_appear -> .)
    NOTSAME         reduce using rule 96 (term_appear -> .)

    term_appear                    shift and go to state 81

state 64

    (57) condition -> IF . LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check

    LEFTPARENT      shift and go to state 82


state 65

    (84) parent_aux -> LEFTPARENT . found_init_parent expresion_line RIGHTPARENT found_end_parent
    (86) found_init_parent -> .

    LEFTPARENT      reduce using rule 86 (found_init_parent -> .)
    INI_INT         reduce using rule 86 (found_init_parent -> .)
    INI_FLOAT       reduce using rule 86 (found_init_parent -> .)
    ID              reduce using rule 86 (found_init_parent -> .)

    found_init_parent              shift and go to state 83

state 66

    (55) while -> WHILE . while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (56) while_appear -> .

    LEFTPARENT      reduce using rule 56 (while_appear -> .)

    while_appear                   shift and go to state 84

state 67

    (46) func_call -> AT . ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call

    ID              shift and go to state 85


state 68

    (99) call_let -> ID . check_let_exists
    (104) check_let_exists -> .

    SET             reduce using rule 104 (check_let_exists -> .)
    TIMES_BY_SAME   reduce using rule 104 (check_let_exists -> .)
    SPLIT_BY        reduce using rule 104 (check_let_exists -> .)
    MULT_BY         reduce using rule 104 (check_let_exists -> .)
    ADD             reduce using rule 104 (check_let_exists -> .)
    LESS            reduce using rule 104 (check_let_exists -> .)
    IF              reduce using rule 104 (check_let_exists -> .)
    WHILE           reduce using rule 104 (check_let_exists -> .)
    AT              reduce using rule 104 (check_let_exists -> .)
    PRINTG          reduce using rule 104 (check_let_exists -> .)
    RETURN          reduce using rule 104 (check_let_exists -> .)
    ID              reduce using rule 104 (check_let_exists -> .)
    LEFTPARENT      reduce using rule 104 (check_let_exists -> .)
    INI_INT         reduce using rule 104 (check_let_exists -> .)
    INI_FLOAT       reduce using rule 104 (check_let_exists -> .)
    DOTCOMMA        reduce using rule 104 (check_let_exists -> .)
    RIGHTKEY        reduce using rule 104 (check_let_exists -> .)
    RIGHTPARENT     reduce using rule 104 (check_let_exists -> .)
    COMMA           reduce using rule 104 (check_let_exists -> .)
    GREATERTN       reduce using rule 104 (check_let_exists -> .)
    LESSTN          reduce using rule 104 (check_let_exists -> .)
    SAME            reduce using rule 104 (check_let_exists -> .)
    NOTSAME         reduce using rule 104 (check_let_exists -> .)

    check_let_exists               shift and go to state 86

state 69

    (39) write -> PRINTG . LEFTPARENT write_found RIGHTPARENT DOTCOMMA

    LEFTPARENT      shift and go to state 87


state 70

    (37) return -> RETURN . expresion_line return_aux DOTCOMMA
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    expresion_line                 shift and go to state 88
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 71

    (75) term -> fact . factor_appear
    (76) term -> fact . factor_appear aux_term
    (97) factor_appear -> .

    SPLIT_BY        reduce using rule 97 (factor_appear -> .)
    MULT_BY         reduce using rule 97 (factor_appear -> .)
    ADD             reduce using rule 97 (factor_appear -> .)
    LESS            reduce using rule 97 (factor_appear -> .)
    IF              reduce using rule 97 (factor_appear -> .)
    WHILE           reduce using rule 97 (factor_appear -> .)
    AT              reduce using rule 97 (factor_appear -> .)
    PRINTG          reduce using rule 97 (factor_appear -> .)
    RETURN          reduce using rule 97 (factor_appear -> .)
    ID              reduce using rule 97 (factor_appear -> .)
    LEFTPARENT      reduce using rule 97 (factor_appear -> .)
    INI_INT         reduce using rule 97 (factor_appear -> .)
    INI_FLOAT       reduce using rule 97 (factor_appear -> .)
    DOTCOMMA        reduce using rule 97 (factor_appear -> .)
    RIGHTKEY        reduce using rule 97 (factor_appear -> .)
    RIGHTPARENT     reduce using rule 97 (factor_appear -> .)
    COMMA           reduce using rule 97 (factor_appear -> .)
    GREATERTN       reduce using rule 97 (factor_appear -> .)
    LESSTN          reduce using rule 97 (factor_appear -> .)
    SAME            reduce using rule 97 (factor_appear -> .)
    NOTSAME         reduce using rule 97 (factor_appear -> .)

    factor_appear                  shift and go to state 90

state 72

    (79) fact -> expo . expo_appear
    (80) fact -> expo . expo_appear aux_expo
    (98) expo_appear -> .

    TIMES_BY_SAME   reduce using rule 98 (expo_appear -> .)
    SPLIT_BY        reduce using rule 98 (expo_appear -> .)
    MULT_BY         reduce using rule 98 (expo_appear -> .)
    ADD             reduce using rule 98 (expo_appear -> .)
    LESS            reduce using rule 98 (expo_appear -> .)
    IF              reduce using rule 98 (expo_appear -> .)
    WHILE           reduce using rule 98 (expo_appear -> .)
    AT              reduce using rule 98 (expo_appear -> .)
    PRINTG          reduce using rule 98 (expo_appear -> .)
    RETURN          reduce using rule 98 (expo_appear -> .)
    ID              reduce using rule 98 (expo_appear -> .)
    LEFTPARENT      reduce using rule 98 (expo_appear -> .)
    INI_INT         reduce using rule 98 (expo_appear -> .)
    INI_FLOAT       reduce using rule 98 (expo_appear -> .)
    DOTCOMMA        reduce using rule 98 (expo_appear -> .)
    RIGHTKEY        reduce using rule 98 (expo_appear -> .)
    RIGHTPARENT     reduce using rule 98 (expo_appear -> .)
    COMMA           reduce using rule 98 (expo_appear -> .)
    GREATERTN       reduce using rule 98 (expo_appear -> .)
    LESSTN          reduce using rule 98 (expo_appear -> .)
    SAME            reduce using rule 98 (expo_appear -> .)
    NOTSAME         reduce using rule 98 (expo_appear -> .)

    expo_appear                    shift and go to state 91

state 73

    (81) expo -> parent_aux .

    TIMES_BY_SAME   reduce using rule 81 (expo -> parent_aux .)
    SPLIT_BY        reduce using rule 81 (expo -> parent_aux .)
    MULT_BY         reduce using rule 81 (expo -> parent_aux .)
    ADD             reduce using rule 81 (expo -> parent_aux .)
    LESS            reduce using rule 81 (expo -> parent_aux .)
    IF              reduce using rule 81 (expo -> parent_aux .)
    WHILE           reduce using rule 81 (expo -> parent_aux .)
    AT              reduce using rule 81 (expo -> parent_aux .)
    PRINTG          reduce using rule 81 (expo -> parent_aux .)
    RETURN          reduce using rule 81 (expo -> parent_aux .)
    ID              reduce using rule 81 (expo -> parent_aux .)
    LEFTPARENT      reduce using rule 81 (expo -> parent_aux .)
    INI_INT         reduce using rule 81 (expo -> parent_aux .)
    INI_FLOAT       reduce using rule 81 (expo -> parent_aux .)
    DOTCOMMA        reduce using rule 81 (expo -> parent_aux .)
    RIGHTKEY        reduce using rule 81 (expo -> parent_aux .)
    RIGHTPARENT     reduce using rule 81 (expo -> parent_aux .)
    COMMA           reduce using rule 81 (expo -> parent_aux .)
    GREATERTN       reduce using rule 81 (expo -> parent_aux .)
    LESSTN          reduce using rule 81 (expo -> parent_aux .)
    SAME            reduce using rule 81 (expo -> parent_aux .)
    NOTSAME         reduce using rule 81 (expo -> parent_aux .)


state 74

    (82) expo -> call_lets .

    TIMES_BY_SAME   reduce using rule 82 (expo -> call_lets .)
    SPLIT_BY        reduce using rule 82 (expo -> call_lets .)
    MULT_BY         reduce using rule 82 (expo -> call_lets .)
    ADD             reduce using rule 82 (expo -> call_lets .)
    LESS            reduce using rule 82 (expo -> call_lets .)
    IF              reduce using rule 82 (expo -> call_lets .)
    WHILE           reduce using rule 82 (expo -> call_lets .)
    AT              reduce using rule 82 (expo -> call_lets .)
    PRINTG          reduce using rule 82 (expo -> call_lets .)
    RETURN          reduce using rule 82 (expo -> call_lets .)
    ID              reduce using rule 82 (expo -> call_lets .)
    LEFTPARENT      reduce using rule 82 (expo -> call_lets .)
    INI_INT         reduce using rule 82 (expo -> call_lets .)
    INI_FLOAT       reduce using rule 82 (expo -> call_lets .)
    DOTCOMMA        reduce using rule 82 (expo -> call_lets .)
    RIGHTKEY        reduce using rule 82 (expo -> call_lets .)
    RIGHTPARENT     reduce using rule 82 (expo -> call_lets .)
    COMMA           reduce using rule 82 (expo -> call_lets .)
    GREATERTN       reduce using rule 82 (expo -> call_lets .)
    LESSTN          reduce using rule 82 (expo -> call_lets .)
    SAME            reduce using rule 82 (expo -> call_lets .)
    NOTSAME         reduce using rule 82 (expo -> call_lets .)


state 75

    (100) call_lets -> INI_INT . check_global_const_exists
    (102) check_global_const_exists -> . add_operand_const
    (103) add_operand_const -> .

    TIMES_BY_SAME   reduce using rule 103 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 103 (add_operand_const -> .)
    MULT_BY         reduce using rule 103 (add_operand_const -> .)
    ADD             reduce using rule 103 (add_operand_const -> .)
    LESS            reduce using rule 103 (add_operand_const -> .)
    IF              reduce using rule 103 (add_operand_const -> .)
    WHILE           reduce using rule 103 (add_operand_const -> .)
    AT              reduce using rule 103 (add_operand_const -> .)
    PRINTG          reduce using rule 103 (add_operand_const -> .)
    RETURN          reduce using rule 103 (add_operand_const -> .)
    ID              reduce using rule 103 (add_operand_const -> .)
    LEFTPARENT      reduce using rule 103 (add_operand_const -> .)
    INI_INT         reduce using rule 103 (add_operand_const -> .)
    INI_FLOAT       reduce using rule 103 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 103 (add_operand_const -> .)
    RIGHTKEY        reduce using rule 103 (add_operand_const -> .)
    RIGHTPARENT     reduce using rule 103 (add_operand_const -> .)
    COMMA           reduce using rule 103 (add_operand_const -> .)
    GREATERTN       reduce using rule 103 (add_operand_const -> .)
    LESSTN          reduce using rule 103 (add_operand_const -> .)
    SAME            reduce using rule 103 (add_operand_const -> .)
    NOTSAME         reduce using rule 103 (add_operand_const -> .)

    check_global_const_exists      shift and go to state 92
    add_operand_const              shift and go to state 93

state 76

    (101) call_lets -> INI_FLOAT . check_global_const_exists
    (102) check_global_const_exists -> . add_operand_const
    (103) add_operand_const -> .

    TIMES_BY_SAME   reduce using rule 103 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 103 (add_operand_const -> .)
    MULT_BY         reduce using rule 103 (add_operand_const -> .)
    ADD             reduce using rule 103 (add_operand_const -> .)
    LESS            reduce using rule 103 (add_operand_const -> .)
    IF              reduce using rule 103 (add_operand_const -> .)
    WHILE           reduce using rule 103 (add_operand_const -> .)
    AT              reduce using rule 103 (add_operand_const -> .)
    PRINTG          reduce using rule 103 (add_operand_const -> .)
    RETURN          reduce using rule 103 (add_operand_const -> .)
    ID              reduce using rule 103 (add_operand_const -> .)
    LEFTPARENT      reduce using rule 103 (add_operand_const -> .)
    INI_INT         reduce using rule 103 (add_operand_const -> .)
    INI_FLOAT       reduce using rule 103 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 103 (add_operand_const -> .)
    RIGHTKEY        reduce using rule 103 (add_operand_const -> .)
    RIGHTPARENT     reduce using rule 103 (add_operand_const -> .)
    COMMA           reduce using rule 103 (add_operand_const -> .)
    GREATERTN       reduce using rule 103 (add_operand_const -> .)
    LESSTN          reduce using rule 103 (add_operand_const -> .)
    SAME            reduce using rule 103 (add_operand_const -> .)
    NOTSAME         reduce using rule 103 (add_operand_const -> .)

    check_global_const_exists      shift and go to state 94
    add_operand_const              shift and go to state 93

state 77

    (26) func_code -> LEFTKEY lets func_code_aux RIGHTKEY . end_func
    (27) end_func -> .

    FUNC            reduce using rule 27 (end_func -> .)
    $end            reduce using rule 27 (end_func -> .)

    end_func                       shift and go to state 95

state 78

    (28) func_code_aux -> action func_code_aux .

    RIGHTKEY        reduce using rule 28 (func_code_aux -> action func_code_aux .)


state 79

    (34) action -> func_call DOTCOMMA .

    IF              reduce using rule 34 (action -> func_call DOTCOMMA .)
    WHILE           reduce using rule 34 (action -> func_call DOTCOMMA .)
    AT              reduce using rule 34 (action -> func_call DOTCOMMA .)
    PRINTG          reduce using rule 34 (action -> func_call DOTCOMMA .)
    RETURN          reduce using rule 34 (action -> func_call DOTCOMMA .)
    ID              reduce using rule 34 (action -> func_call DOTCOMMA .)
    LEFTPARENT      reduce using rule 34 (action -> func_call DOTCOMMA .)
    INI_INT         reduce using rule 34 (action -> func_call DOTCOMMA .)
    INI_FLOAT       reduce using rule 34 (action -> func_call DOTCOMMA .)
    DOTCOMMA        reduce using rule 34 (action -> func_call DOTCOMMA .)
    RIGHTKEY        reduce using rule 34 (action -> func_call DOTCOMMA .)


state 80

    (89) assign -> call_let set_appear . SET set_value
    (90) assign -> call_let set_appear . SET expresion_line seen_final_asignacion DOTCOMMA
    (91) assign -> call_let set_appear . SET func_call DOTCOMMA

    SET             shift and go to state 96


state 81

    (71) expresion_line -> term term_appear .
    (72) expresion_line -> term term_appear . aux_expresion
    (73) aux_expresion -> . ADD add_operator expresion_line
    (74) aux_expresion -> . LESS add_operator expresion_line

    IF              reduce using rule 71 (expresion_line -> term term_appear .)
    WHILE           reduce using rule 71 (expresion_line -> term term_appear .)
    AT              reduce using rule 71 (expresion_line -> term term_appear .)
    PRINTG          reduce using rule 71 (expresion_line -> term term_appear .)
    RETURN          reduce using rule 71 (expresion_line -> term term_appear .)
    ID              reduce using rule 71 (expresion_line -> term term_appear .)
    LEFTPARENT      reduce using rule 71 (expresion_line -> term term_appear .)
    INI_INT         reduce using rule 71 (expresion_line -> term term_appear .)
    INI_FLOAT       reduce using rule 71 (expresion_line -> term term_appear .)
    DOTCOMMA        reduce using rule 71 (expresion_line -> term term_appear .)
    RIGHTKEY        reduce using rule 71 (expresion_line -> term term_appear .)
    RIGHTPARENT     reduce using rule 71 (expresion_line -> term term_appear .)
    COMMA           reduce using rule 71 (expresion_line -> term term_appear .)
    GREATERTN       reduce using rule 71 (expresion_line -> term term_appear .)
    LESSTN          reduce using rule 71 (expresion_line -> term term_appear .)
    SAME            reduce using rule 71 (expresion_line -> term term_appear .)
    NOTSAME         reduce using rule 71 (expresion_line -> term term_appear .)
    ADD             shift and go to state 98
    LESS            shift and go to state 99

    aux_expresion                  shift and go to state 97

state 82

    (57) condition -> IF LEFTPARENT . found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (86) found_init_parent -> .

    LEFTPARENT      reduce using rule 86 (found_init_parent -> .)
    INI_INT         reduce using rule 86 (found_init_parent -> .)
    INI_FLOAT       reduce using rule 86 (found_init_parent -> .)
    ID              reduce using rule 86 (found_init_parent -> .)

    found_init_parent              shift and go to state 100

state 83

    (84) parent_aux -> LEFTPARENT found_init_parent . expresion_line RIGHTPARENT found_end_parent
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    expresion_line                 shift and go to state 101
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 84

    (55) while -> WHILE while_appear . LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond

    LEFTPARENT      shift and go to state 102


state 85

    (46) func_call -> AT ID . func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call
    (49) func_call_ID -> .

    LEFTPARENT      reduce using rule 49 (func_call_ID -> .)

    func_call_ID                   shift and go to state 103

state 86

    (99) call_let -> ID check_let_exists .

    SET             reduce using rule 99 (call_let -> ID check_let_exists .)
    TIMES_BY_SAME   reduce using rule 99 (call_let -> ID check_let_exists .)
    SPLIT_BY        reduce using rule 99 (call_let -> ID check_let_exists .)
    MULT_BY         reduce using rule 99 (call_let -> ID check_let_exists .)
    ADD             reduce using rule 99 (call_let -> ID check_let_exists .)
    LESS            reduce using rule 99 (call_let -> ID check_let_exists .)
    IF              reduce using rule 99 (call_let -> ID check_let_exists .)
    WHILE           reduce using rule 99 (call_let -> ID check_let_exists .)
    AT              reduce using rule 99 (call_let -> ID check_let_exists .)
    PRINTG          reduce using rule 99 (call_let -> ID check_let_exists .)
    RETURN          reduce using rule 99 (call_let -> ID check_let_exists .)
    ID              reduce using rule 99 (call_let -> ID check_let_exists .)
    LEFTPARENT      reduce using rule 99 (call_let -> ID check_let_exists .)
    INI_INT         reduce using rule 99 (call_let -> ID check_let_exists .)
    INI_FLOAT       reduce using rule 99 (call_let -> ID check_let_exists .)
    DOTCOMMA        reduce using rule 99 (call_let -> ID check_let_exists .)
    RIGHTKEY        reduce using rule 99 (call_let -> ID check_let_exists .)
    RIGHTPARENT     reduce using rule 99 (call_let -> ID check_let_exists .)
    COMMA           reduce using rule 99 (call_let -> ID check_let_exists .)
    GREATERTN       reduce using rule 99 (call_let -> ID check_let_exists .)
    LESSTN          reduce using rule 99 (call_let -> ID check_let_exists .)
    SAME            reduce using rule 99 (call_let -> ID check_let_exists .)
    NOTSAME         reduce using rule 99 (call_let -> ID check_let_exists .)


state 87

    (39) write -> PRINTG LEFTPARENT . write_found RIGHTPARENT DOTCOMMA
    (40) write_found -> . write_found_aux
    (41) write_found -> . write_found_aux COMMA write_found
    (42) write_found_aux -> . expresion_line print_exp
    (43) write_found_aux -> . INI_STRING string_appear print_exp
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    INI_STRING      shift and go to state 107
    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    write_found                    shift and go to state 104
    write_found_aux                shift and go to state 105
    expresion_line                 shift and go to state 106
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 88

    (37) return -> RETURN expresion_line . return_aux DOTCOMMA
    (38) return_aux -> .

    DOTCOMMA        reduce using rule 38 (return_aux -> .)

    return_aux                     shift and go to state 108

state 89

    (83) expo -> call_let .

    TIMES_BY_SAME   reduce using rule 83 (expo -> call_let .)
    SPLIT_BY        reduce using rule 83 (expo -> call_let .)
    MULT_BY         reduce using rule 83 (expo -> call_let .)
    ADD             reduce using rule 83 (expo -> call_let .)
    LESS            reduce using rule 83 (expo -> call_let .)
    DOTCOMMA        reduce using rule 83 (expo -> call_let .)
    RIGHTPARENT     reduce using rule 83 (expo -> call_let .)
    COMMA           reduce using rule 83 (expo -> call_let .)
    GREATERTN       reduce using rule 83 (expo -> call_let .)
    LESSTN          reduce using rule 83 (expo -> call_let .)
    SAME            reduce using rule 83 (expo -> call_let .)
    NOTSAME         reduce using rule 83 (expo -> call_let .)
    LEFTPARENT      reduce using rule 83 (expo -> call_let .)
    INI_INT         reduce using rule 83 (expo -> call_let .)
    INI_FLOAT       reduce using rule 83 (expo -> call_let .)
    ID              reduce using rule 83 (expo -> call_let .)
    IF              reduce using rule 83 (expo -> call_let .)
    WHILE           reduce using rule 83 (expo -> call_let .)
    AT              reduce using rule 83 (expo -> call_let .)
    PRINTG          reduce using rule 83 (expo -> call_let .)
    RETURN          reduce using rule 83 (expo -> call_let .)
    RIGHTKEY        reduce using rule 83 (expo -> call_let .)


state 90

    (75) term -> fact factor_appear .
    (76) term -> fact factor_appear . aux_term
    (77) aux_term -> . SPLIT_BY add_operator term
    (78) aux_term -> . MULT_BY add_operator term

    ADD             reduce using rule 75 (term -> fact factor_appear .)
    LESS            reduce using rule 75 (term -> fact factor_appear .)
    IF              reduce using rule 75 (term -> fact factor_appear .)
    WHILE           reduce using rule 75 (term -> fact factor_appear .)
    AT              reduce using rule 75 (term -> fact factor_appear .)
    PRINTG          reduce using rule 75 (term -> fact factor_appear .)
    RETURN          reduce using rule 75 (term -> fact factor_appear .)
    ID              reduce using rule 75 (term -> fact factor_appear .)
    LEFTPARENT      reduce using rule 75 (term -> fact factor_appear .)
    INI_INT         reduce using rule 75 (term -> fact factor_appear .)
    INI_FLOAT       reduce using rule 75 (term -> fact factor_appear .)
    DOTCOMMA        reduce using rule 75 (term -> fact factor_appear .)
    RIGHTKEY        reduce using rule 75 (term -> fact factor_appear .)
    RIGHTPARENT     reduce using rule 75 (term -> fact factor_appear .)
    COMMA           reduce using rule 75 (term -> fact factor_appear .)
    GREATERTN       reduce using rule 75 (term -> fact factor_appear .)
    LESSTN          reduce using rule 75 (term -> fact factor_appear .)
    SAME            reduce using rule 75 (term -> fact factor_appear .)
    NOTSAME         reduce using rule 75 (term -> fact factor_appear .)
    SPLIT_BY        shift and go to state 110
    MULT_BY         shift and go to state 111

    aux_term                       shift and go to state 109

state 91

    (79) fact -> expo expo_appear .
    (80) fact -> expo expo_appear . aux_expo
    (88) aux_expo -> . TIMES_BY_SAME add_operator fact

    SPLIT_BY        reduce using rule 79 (fact -> expo expo_appear .)
    MULT_BY         reduce using rule 79 (fact -> expo expo_appear .)
    ADD             reduce using rule 79 (fact -> expo expo_appear .)
    LESS            reduce using rule 79 (fact -> expo expo_appear .)
    IF              reduce using rule 79 (fact -> expo expo_appear .)
    WHILE           reduce using rule 79 (fact -> expo expo_appear .)
    AT              reduce using rule 79 (fact -> expo expo_appear .)
    PRINTG          reduce using rule 79 (fact -> expo expo_appear .)
    RETURN          reduce using rule 79 (fact -> expo expo_appear .)
    ID              reduce using rule 79 (fact -> expo expo_appear .)
    LEFTPARENT      reduce using rule 79 (fact -> expo expo_appear .)
    INI_INT         reduce using rule 79 (fact -> expo expo_appear .)
    INI_FLOAT       reduce using rule 79 (fact -> expo expo_appear .)
    DOTCOMMA        reduce using rule 79 (fact -> expo expo_appear .)
    RIGHTKEY        reduce using rule 79 (fact -> expo expo_appear .)
    RIGHTPARENT     reduce using rule 79 (fact -> expo expo_appear .)
    COMMA           reduce using rule 79 (fact -> expo expo_appear .)
    GREATERTN       reduce using rule 79 (fact -> expo expo_appear .)
    LESSTN          reduce using rule 79 (fact -> expo expo_appear .)
    SAME            reduce using rule 79 (fact -> expo expo_appear .)
    NOTSAME         reduce using rule 79 (fact -> expo expo_appear .)
    TIMES_BY_SAME   shift and go to state 113

    aux_expo                       shift and go to state 112

state 92

    (100) call_lets -> INI_INT check_global_const_exists .

    TIMES_BY_SAME   reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    SPLIT_BY        reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    MULT_BY         reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    ADD             reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    LESS            reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    IF              reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    WHILE           reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    AT              reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    PRINTG          reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    RETURN          reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    ID              reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    LEFTPARENT      reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    INI_INT         reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    INI_FLOAT       reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    DOTCOMMA        reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTKEY        reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTPARENT     reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    COMMA           reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    GREATERTN       reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    LESSTN          reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    SAME            reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)
    NOTSAME         reduce using rule 100 (call_lets -> INI_INT check_global_const_exists .)


state 93

    (102) check_global_const_exists -> add_operand_const .

    TIMES_BY_SAME   reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    SPLIT_BY        reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    MULT_BY         reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    ADD             reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    LESS            reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    IF              reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    WHILE           reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    AT              reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    PRINTG          reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    RETURN          reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    ID              reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    LEFTPARENT      reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    INI_INT         reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    INI_FLOAT       reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    DOTCOMMA        reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    RIGHTKEY        reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    RIGHTPARENT     reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    COMMA           reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    GREATERTN       reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    LESSTN          reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    SAME            reduce using rule 102 (check_global_const_exists -> add_operand_const .)
    NOTSAME         reduce using rule 102 (check_global_const_exists -> add_operand_const .)


state 94

    (101) call_lets -> INI_FLOAT check_global_const_exists .

    TIMES_BY_SAME   reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    SPLIT_BY        reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    MULT_BY         reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    ADD             reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESS            reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    IF              reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    WHILE           reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    AT              reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    PRINTG          reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    RETURN          reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    ID              reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    LEFTPARENT      reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    INI_INT         reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    INI_FLOAT       reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    DOTCOMMA        reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTKEY        reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTPARENT     reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    COMMA           reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    GREATERTN       reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESSTN          reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    SAME            reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)
    NOTSAME         reduce using rule 101 (call_lets -> INI_FLOAT check_global_const_exists .)


state 95

    (26) func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func .

    FUNC            reduce using rule 26 (func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func .)
    $end            reduce using rule 26 (func_code -> LEFTKEY lets func_code_aux RIGHTKEY end_func .)


state 96

    (89) assign -> call_let set_appear SET . set_value
    (90) assign -> call_let set_appear SET . expresion_line seen_final_asignacion DOTCOMMA
    (91) assign -> call_let set_appear SET . func_call DOTCOMMA
    (105) set_value -> . INI_INT aux_int_check append_operand DOTCOMMA
    (106) set_value -> . INI_FLOAT aux_float_check append_operand DOTCOMMA
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (46) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call
    (47) func_call -> .
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    INI_INT         shift and go to state 117
    INI_FLOAT       shift and go to state 118
    AT              shift and go to state 67
    DOTCOMMA        reduce using rule 47 (func_call -> .)
    LEFTPARENT      shift and go to state 65
    ID              shift and go to state 68

    call_let                       shift and go to state 89
    set_value                      shift and go to state 114
    expresion_line                 shift and go to state 115
    func_call                      shift and go to state 116
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74

state 97

    (72) expresion_line -> term term_appear aux_expresion .

    IF              reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    WHILE           reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    AT              reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    PRINTG          reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    RETURN          reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    ID              reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    LEFTPARENT      reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    INI_INT         reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    INI_FLOAT       reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    DOTCOMMA        reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    RIGHTKEY        reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    RIGHTPARENT     reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    COMMA           reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    GREATERTN       reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    LESSTN          reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    SAME            reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)
    NOTSAME         reduce using rule 72 (expresion_line -> term term_appear aux_expresion .)


state 98

    (73) aux_expresion -> ADD . add_operator expresion_line
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 119

state 99

    (74) aux_expresion -> LESS . add_operator expresion_line
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 120

state 100

    (57) condition -> IF LEFTPARENT found_init_parent . condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (69) condition_expresion -> . expresion_line condtion_appear
    (70) condition_expresion -> . expresion_line condition_signs expresion_line condtion_appear
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    condition_expresion            shift and go to state 121
    expresion_line                 shift and go to state 122
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 101

    (84) parent_aux -> LEFTPARENT found_init_parent expresion_line . RIGHTPARENT found_end_parent

    RIGHTPARENT     shift and go to state 123


state 102

    (55) while -> WHILE while_appear LEFTPARENT . condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (69) condition_expresion -> . expresion_line condtion_appear
    (70) condition_expresion -> . expresion_line condition_signs expresion_line condtion_appear
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    condition_expresion            shift and go to state 124
    expresion_line                 shift and go to state 122
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 103

    (46) func_call -> AT ID func_call_ID . LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call

    LEFTPARENT      shift and go to state 125


state 104

    (39) write -> PRINTG LEFTPARENT write_found . RIGHTPARENT DOTCOMMA

    RIGHTPARENT     shift and go to state 126


state 105

    (40) write_found -> write_found_aux .
    (41) write_found -> write_found_aux . COMMA write_found

    RIGHTPARENT     reduce using rule 40 (write_found -> write_found_aux .)
    COMMA           shift and go to state 127


state 106

    (42) write_found_aux -> expresion_line . print_exp
    (44) print_exp -> .

    COMMA           reduce using rule 44 (print_exp -> .)
    RIGHTPARENT     reduce using rule 44 (print_exp -> .)

    print_exp                      shift and go to state 128

state 107

    (43) write_found_aux -> INI_STRING . string_appear print_exp
    (45) string_appear -> .

    COMMA           reduce using rule 45 (string_appear -> .)
    RIGHTPARENT     reduce using rule 45 (string_appear -> .)

    string_appear                  shift and go to state 129

state 108

    (37) return -> RETURN expresion_line return_aux . DOTCOMMA

    DOTCOMMA        shift and go to state 130


state 109

    (76) term -> fact factor_appear aux_term .

    ADD             reduce using rule 76 (term -> fact factor_appear aux_term .)
    LESS            reduce using rule 76 (term -> fact factor_appear aux_term .)
    IF              reduce using rule 76 (term -> fact factor_appear aux_term .)
    WHILE           reduce using rule 76 (term -> fact factor_appear aux_term .)
    AT              reduce using rule 76 (term -> fact factor_appear aux_term .)
    PRINTG          reduce using rule 76 (term -> fact factor_appear aux_term .)
    RETURN          reduce using rule 76 (term -> fact factor_appear aux_term .)
    ID              reduce using rule 76 (term -> fact factor_appear aux_term .)
    LEFTPARENT      reduce using rule 76 (term -> fact factor_appear aux_term .)
    INI_INT         reduce using rule 76 (term -> fact factor_appear aux_term .)
    INI_FLOAT       reduce using rule 76 (term -> fact factor_appear aux_term .)
    DOTCOMMA        reduce using rule 76 (term -> fact factor_appear aux_term .)
    RIGHTKEY        reduce using rule 76 (term -> fact factor_appear aux_term .)
    RIGHTPARENT     reduce using rule 76 (term -> fact factor_appear aux_term .)
    COMMA           reduce using rule 76 (term -> fact factor_appear aux_term .)
    GREATERTN       reduce using rule 76 (term -> fact factor_appear aux_term .)
    LESSTN          reduce using rule 76 (term -> fact factor_appear aux_term .)
    SAME            reduce using rule 76 (term -> fact factor_appear aux_term .)
    NOTSAME         reduce using rule 76 (term -> fact factor_appear aux_term .)


state 110

    (77) aux_term -> SPLIT_BY . add_operator term
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 131

state 111

    (78) aux_term -> MULT_BY . add_operator term
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 132

state 112

    (80) fact -> expo expo_appear aux_expo .

    SPLIT_BY        reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    MULT_BY         reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    ADD             reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    LESS            reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    IF              reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    WHILE           reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    AT              reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    PRINTG          reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    RETURN          reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    ID              reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    LEFTPARENT      reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    INI_INT         reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    INI_FLOAT       reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    DOTCOMMA        reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    RIGHTKEY        reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    RIGHTPARENT     reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    COMMA           reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    GREATERTN       reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    LESSTN          reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    SAME            reduce using rule 80 (fact -> expo expo_appear aux_expo .)
    NOTSAME         reduce using rule 80 (fact -> expo expo_appear aux_expo .)


state 113

    (88) aux_expo -> TIMES_BY_SAME . add_operator fact
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 133

state 114

    (89) assign -> call_let set_appear SET set_value .

    IF              reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    WHILE           reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    AT              reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    PRINTG          reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    RETURN          reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    ID              reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    LEFTPARENT      reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    INI_INT         reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    INI_FLOAT       reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    DOTCOMMA        reduce using rule 89 (assign -> call_let set_appear SET set_value .)
    RIGHTKEY        reduce using rule 89 (assign -> call_let set_appear SET set_value .)


state 115

    (90) assign -> call_let set_appear SET expresion_line . seen_final_asignacion DOTCOMMA
    (92) seen_final_asignacion -> .

    DOTCOMMA        reduce using rule 92 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 134

state 116

    (91) assign -> call_let set_appear SET func_call . DOTCOMMA

    DOTCOMMA        shift and go to state 135


state 117

    (105) set_value -> INI_INT . aux_int_check append_operand DOTCOMMA
    (100) call_lets -> INI_INT . check_global_const_exists
    (108) aux_int_check -> .
    (102) check_global_const_exists -> . add_operand_const
    (103) add_operand_const -> .

  ! reduce/reduce conflict for DOTCOMMA resolved using rule 103 (add_operand_const -> .)
    TIMES_BY_SAME   reduce using rule 103 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 103 (add_operand_const -> .)
    MULT_BY         reduce using rule 103 (add_operand_const -> .)
    ADD             reduce using rule 103 (add_operand_const -> .)
    LESS            reduce using rule 103 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 103 (add_operand_const -> .)

  ! DOTCOMMA        [ reduce using rule 108 (aux_int_check -> .) ]

    aux_int_check                  shift and go to state 136
    check_global_const_exists      shift and go to state 92
    add_operand_const              shift and go to state 93

state 118

    (106) set_value -> INI_FLOAT . aux_float_check append_operand DOTCOMMA
    (101) call_lets -> INI_FLOAT . check_global_const_exists
    (109) aux_float_check -> .
    (102) check_global_const_exists -> . add_operand_const
    (103) add_operand_const -> .

  ! reduce/reduce conflict for DOTCOMMA resolved using rule 103 (add_operand_const -> .)
    TIMES_BY_SAME   reduce using rule 103 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 103 (add_operand_const -> .)
    MULT_BY         reduce using rule 103 (add_operand_const -> .)
    ADD             reduce using rule 103 (add_operand_const -> .)
    LESS            reduce using rule 103 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 103 (add_operand_const -> .)

  ! DOTCOMMA        [ reduce using rule 109 (aux_float_check -> .) ]

    aux_float_check                shift and go to state 137
    check_global_const_exists      shift and go to state 94
    add_operand_const              shift and go to state 93

state 119

    (73) aux_expresion -> ADD add_operator . expresion_line
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    expresion_line                 shift and go to state 138
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 120

    (74) aux_expresion -> LESS add_operator . expresion_line
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    expresion_line                 shift and go to state 139
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 121

    (57) condition -> IF LEFTPARENT found_init_parent condition_expresion . right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (85) right_parent_condition -> .

    RIGHTPARENT     reduce using rule 85 (right_parent_condition -> .)

    right_parent_condition         shift and go to state 140

state 122

    (69) condition_expresion -> expresion_line . condtion_appear
    (70) condition_expresion -> expresion_line . condition_signs expresion_line condtion_appear
    (58) condtion_appear -> .
    (64) condition_signs -> . GREATERTN add_operator
    (65) condition_signs -> . LESSTN add_operator
    (66) condition_signs -> . SAME add_operator
    (67) condition_signs -> . NOTSAME add_operator
    (68) condition_signs -> .

    RIGHTPARENT     reduce using rule 58 (condtion_appear -> .)
    GREATERTN       shift and go to state 143
    LESSTN          shift and go to state 144
    SAME            shift and go to state 145
    NOTSAME         shift and go to state 146
    LEFTPARENT      reduce using rule 68 (condition_signs -> .)
    INI_INT         reduce using rule 68 (condition_signs -> .)
    INI_FLOAT       reduce using rule 68 (condition_signs -> .)
    ID              reduce using rule 68 (condition_signs -> .)

    condtion_appear                shift and go to state 141
    condition_signs                shift and go to state 142

state 123

    (84) parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT . found_end_parent
    (87) found_end_parent -> .

    TIMES_BY_SAME   reduce using rule 87 (found_end_parent -> .)
    SPLIT_BY        reduce using rule 87 (found_end_parent -> .)
    MULT_BY         reduce using rule 87 (found_end_parent -> .)
    ADD             reduce using rule 87 (found_end_parent -> .)
    LESS            reduce using rule 87 (found_end_parent -> .)
    IF              reduce using rule 87 (found_end_parent -> .)
    WHILE           reduce using rule 87 (found_end_parent -> .)
    AT              reduce using rule 87 (found_end_parent -> .)
    PRINTG          reduce using rule 87 (found_end_parent -> .)
    RETURN          reduce using rule 87 (found_end_parent -> .)
    ID              reduce using rule 87 (found_end_parent -> .)
    LEFTPARENT      reduce using rule 87 (found_end_parent -> .)
    INI_INT         reduce using rule 87 (found_end_parent -> .)
    INI_FLOAT       reduce using rule 87 (found_end_parent -> .)
    DOTCOMMA        reduce using rule 87 (found_end_parent -> .)
    RIGHTKEY        reduce using rule 87 (found_end_parent -> .)
    RIGHTPARENT     reduce using rule 87 (found_end_parent -> .)
    COMMA           reduce using rule 87 (found_end_parent -> .)
    GREATERTN       reduce using rule 87 (found_end_parent -> .)
    LESSTN          reduce using rule 87 (found_end_parent -> .)
    SAME            reduce using rule 87 (found_end_parent -> .)
    NOTSAME         reduce using rule 87 (found_end_parent -> .)

    found_end_parent               shift and go to state 147

state 124

    (55) while -> WHILE while_appear LEFTPARENT condition_expresion . right_parent_condition RIGHTPARENT condition_code end_cond
    (85) right_parent_condition -> .

    RIGHTPARENT     reduce using rule 85 (right_parent_condition -> .)

    right_parent_condition         shift and go to state 148

state 125

    (46) func_call -> AT ID func_call_ID LEFTPARENT . func_calls_params end_func_call_params RIGHTPARENT end_func_call
    (51) func_calls_params -> . expresion_line parameter_call COMMA add_parameter func_calls_params
    (52) func_calls_params -> . expresion_line parameter_call
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    func_calls_params              shift and go to state 149
    expresion_line                 shift and go to state 150
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 126

    (39) write -> PRINTG LEFTPARENT write_found RIGHTPARENT . DOTCOMMA

    DOTCOMMA        shift and go to state 151


state 127

    (41) write_found -> write_found_aux COMMA . write_found
    (40) write_found -> . write_found_aux
    (41) write_found -> . write_found_aux COMMA write_found
    (42) write_found_aux -> . expresion_line print_exp
    (43) write_found_aux -> . INI_STRING string_appear print_exp
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    INI_STRING      shift and go to state 107
    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    write_found_aux                shift and go to state 105
    write_found                    shift and go to state 152
    expresion_line                 shift and go to state 106
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 128

    (42) write_found_aux -> expresion_line print_exp .

    COMMA           reduce using rule 42 (write_found_aux -> expresion_line print_exp .)
    RIGHTPARENT     reduce using rule 42 (write_found_aux -> expresion_line print_exp .)


state 129

    (43) write_found_aux -> INI_STRING string_appear . print_exp
    (44) print_exp -> .

    COMMA           reduce using rule 44 (print_exp -> .)
    RIGHTPARENT     reduce using rule 44 (print_exp -> .)

    print_exp                      shift and go to state 153

state 130

    (37) return -> RETURN expresion_line return_aux DOTCOMMA .

    IF              reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    WHILE           reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    AT              reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    PRINTG          reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    RETURN          reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    ID              reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    LEFTPARENT      reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    INI_INT         reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    INI_FLOAT       reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    DOTCOMMA        reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    RIGHTKEY        reduce using rule 37 (return -> RETURN expresion_line return_aux DOTCOMMA .)


state 131

    (77) aux_term -> SPLIT_BY add_operator . term
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    term                           shift and go to state 154
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 132

    (78) aux_term -> MULT_BY add_operator . term
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    term                           shift and go to state 155
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 133

    (88) aux_expo -> TIMES_BY_SAME add_operator . fact
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    fact                           shift and go to state 156
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 134

    (90) assign -> call_let set_appear SET expresion_line seen_final_asignacion . DOTCOMMA

    DOTCOMMA        shift and go to state 157


state 135

    (91) assign -> call_let set_appear SET func_call DOTCOMMA .

    IF              reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    WHILE           reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    AT              reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    PRINTG          reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    RETURN          reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    ID              reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    LEFTPARENT      reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    INI_INT         reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    INI_FLOAT       reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    DOTCOMMA        reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)
    RIGHTKEY        reduce using rule 91 (assign -> call_let set_appear SET func_call DOTCOMMA .)


state 136

    (105) set_value -> INI_INT aux_int_check . append_operand DOTCOMMA
    (107) append_operand -> .

    DOTCOMMA        reduce using rule 107 (append_operand -> .)

    append_operand                 shift and go to state 158

state 137

    (106) set_value -> INI_FLOAT aux_float_check . append_operand DOTCOMMA
    (107) append_operand -> .

    DOTCOMMA        reduce using rule 107 (append_operand -> .)

    append_operand                 shift and go to state 159

state 138

    (73) aux_expresion -> ADD add_operator expresion_line .

    IF              reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    WHILE           reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    AT              reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    PRINTG          reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    RETURN          reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    ID              reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    LEFTPARENT      reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    INI_INT         reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    INI_FLOAT       reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    DOTCOMMA        reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTKEY        reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTPARENT     reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    COMMA           reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    GREATERTN       reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    LESSTN          reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    SAME            reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)
    NOTSAME         reduce using rule 73 (aux_expresion -> ADD add_operator expresion_line .)


state 139

    (74) aux_expresion -> LESS add_operator expresion_line .

    IF              reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    WHILE           reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    AT              reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    PRINTG          reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    RETURN          reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    ID              reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    LEFTPARENT      reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    INI_INT         reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    INI_FLOAT       reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    DOTCOMMA        reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTKEY        reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTPARENT     reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    COMMA           reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    GREATERTN       reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    LESSTN          reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    SAME            reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)
    NOTSAME         reduce using rule 74 (aux_expresion -> LESS add_operator expresion_line .)


state 140

    (57) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition . RIGHTPARENT condition_code end_cond condition_end_check

    RIGHTPARENT     shift and go to state 160


state 141

    (69) condition_expresion -> expresion_line condtion_appear .

    RIGHTPARENT     reduce using rule 69 (condition_expresion -> expresion_line condtion_appear .)


state 142

    (70) condition_expresion -> expresion_line condition_signs . expresion_line condtion_appear
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    expresion_line                 shift and go to state 161
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 143

    (64) condition_signs -> GREATERTN . add_operator
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 162

state 144

    (65) condition_signs -> LESSTN . add_operator
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 163

state 145

    (66) condition_signs -> SAME . add_operator
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 164

state 146

    (67) condition_signs -> NOTSAME . add_operator
    (94) add_operator -> .

    LEFTPARENT      reduce using rule 94 (add_operator -> .)
    INI_INT         reduce using rule 94 (add_operator -> .)
    INI_FLOAT       reduce using rule 94 (add_operator -> .)
    ID              reduce using rule 94 (add_operator -> .)

    add_operator                   shift and go to state 165

state 147

    (84) parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .

    TIMES_BY_SAME   reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    SPLIT_BY        reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    MULT_BY         reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    ADD             reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESS            reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    IF              reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    WHILE           reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    AT              reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    PRINTG          reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RETURN          reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    ID              reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LEFTPARENT      reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    INI_INT         reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    INI_FLOAT       reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    DOTCOMMA        reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTKEY        reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTPARENT     reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    COMMA           reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    GREATERTN       reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESSTN          reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    SAME            reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    NOTSAME         reduce using rule 84 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)


state 148

    (55) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition . RIGHTPARENT condition_code end_cond

    RIGHTPARENT     shift and go to state 166


state 149

    (46) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params . end_func_call_params RIGHTPARENT end_func_call
    (48) end_func_call_params -> .

    RIGHTPARENT     reduce using rule 48 (end_func_call_params -> .)

    end_func_call_params           shift and go to state 167

state 150

    (51) func_calls_params -> expresion_line . parameter_call COMMA add_parameter func_calls_params
    (52) func_calls_params -> expresion_line . parameter_call
    (53) parameter_call -> .

    COMMA           reduce using rule 53 (parameter_call -> .)
    RIGHTPARENT     reduce using rule 53 (parameter_call -> .)

    parameter_call                 shift and go to state 168

state 151

    (39) write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .

    IF              reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    WHILE           reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    AT              reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    PRINTG          reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    RETURN          reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    ID              reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    LEFTPARENT      reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    INI_INT         reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    INI_FLOAT       reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    DOTCOMMA        reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    RIGHTKEY        reduce using rule 39 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)


state 152

    (41) write_found -> write_found_aux COMMA write_found .

    RIGHTPARENT     reduce using rule 41 (write_found -> write_found_aux COMMA write_found .)


state 153

    (43) write_found_aux -> INI_STRING string_appear print_exp .

    COMMA           reduce using rule 43 (write_found_aux -> INI_STRING string_appear print_exp .)
    RIGHTPARENT     reduce using rule 43 (write_found_aux -> INI_STRING string_appear print_exp .)


state 154

    (77) aux_term -> SPLIT_BY add_operator term .

    ADD             reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    LESS            reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    IF              reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    WHILE           reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    AT              reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    PRINTG          reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    RETURN          reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    ID              reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    LEFTPARENT      reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    INI_INT         reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    INI_FLOAT       reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    DOTCOMMA        reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTKEY        reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTPARENT     reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    COMMA           reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    GREATERTN       reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    LESSTN          reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    SAME            reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)
    NOTSAME         reduce using rule 77 (aux_term -> SPLIT_BY add_operator term .)


state 155

    (78) aux_term -> MULT_BY add_operator term .

    ADD             reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    LESS            reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    IF              reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    WHILE           reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    AT              reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    PRINTG          reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    RETURN          reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    ID              reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    LEFTPARENT      reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    INI_INT         reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    INI_FLOAT       reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    DOTCOMMA        reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    RIGHTKEY        reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    RIGHTPARENT     reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    COMMA           reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    GREATERTN       reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    LESSTN          reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    SAME            reduce using rule 78 (aux_term -> MULT_BY add_operator term .)
    NOTSAME         reduce using rule 78 (aux_term -> MULT_BY add_operator term .)


state 156

    (88) aux_expo -> TIMES_BY_SAME add_operator fact .

    SPLIT_BY        reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    MULT_BY         reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    ADD             reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESS            reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    IF              reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    WHILE           reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    AT              reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    PRINTG          reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RETURN          reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    ID              reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LEFTPARENT      reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    INI_INT         reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    INI_FLOAT       reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    DOTCOMMA        reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTKEY        reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTPARENT     reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    COMMA           reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    GREATERTN       reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESSTN          reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    SAME            reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    NOTSAME         reduce using rule 88 (aux_expo -> TIMES_BY_SAME add_operator fact .)


state 157

    (90) assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .

    IF              reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    WHILE           reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    AT              reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    PRINTG          reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RETURN          reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    ID              reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    LEFTPARENT      reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_INT         reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_FLOAT       reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    DOTCOMMA        reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RIGHTKEY        reduce using rule 90 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)


state 158

    (105) set_value -> INI_INT aux_int_check append_operand . DOTCOMMA

    DOTCOMMA        shift and go to state 169


state 159

    (106) set_value -> INI_FLOAT aux_float_check append_operand . DOTCOMMA

    DOTCOMMA        shift and go to state 170


state 160

    (57) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT . condition_code end_cond condition_end_check
    (61) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 172

    condition_code                 shift and go to state 171

state 161

    (70) condition_expresion -> expresion_line condition_signs expresion_line . condtion_appear
    (58) condtion_appear -> .

    RIGHTPARENT     reduce using rule 58 (condtion_appear -> .)

    condtion_appear                shift and go to state 173

state 162

    (64) condition_signs -> GREATERTN add_operator .

    LEFTPARENT      reduce using rule 64 (condition_signs -> GREATERTN add_operator .)
    INI_INT         reduce using rule 64 (condition_signs -> GREATERTN add_operator .)
    INI_FLOAT       reduce using rule 64 (condition_signs -> GREATERTN add_operator .)
    ID              reduce using rule 64 (condition_signs -> GREATERTN add_operator .)


state 163

    (65) condition_signs -> LESSTN add_operator .

    LEFTPARENT      reduce using rule 65 (condition_signs -> LESSTN add_operator .)
    INI_INT         reduce using rule 65 (condition_signs -> LESSTN add_operator .)
    INI_FLOAT       reduce using rule 65 (condition_signs -> LESSTN add_operator .)
    ID              reduce using rule 65 (condition_signs -> LESSTN add_operator .)


state 164

    (66) condition_signs -> SAME add_operator .

    LEFTPARENT      reduce using rule 66 (condition_signs -> SAME add_operator .)
    INI_INT         reduce using rule 66 (condition_signs -> SAME add_operator .)
    INI_FLOAT       reduce using rule 66 (condition_signs -> SAME add_operator .)
    ID              reduce using rule 66 (condition_signs -> SAME add_operator .)


state 165

    (67) condition_signs -> NOTSAME add_operator .

    LEFTPARENT      reduce using rule 67 (condition_signs -> NOTSAME add_operator .)
    INI_INT         reduce using rule 67 (condition_signs -> NOTSAME add_operator .)
    INI_FLOAT       reduce using rule 67 (condition_signs -> NOTSAME add_operator .)
    ID              reduce using rule 67 (condition_signs -> NOTSAME add_operator .)


state 166

    (55) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT . condition_code end_cond
    (61) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 172

    condition_code                 shift and go to state 174

state 167

    (46) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params . RIGHTPARENT end_func_call

    RIGHTPARENT     shift and go to state 175


state 168

    (51) func_calls_params -> expresion_line parameter_call . COMMA add_parameter func_calls_params
    (52) func_calls_params -> expresion_line parameter_call .

    COMMA           shift and go to state 176
    RIGHTPARENT     reduce using rule 52 (func_calls_params -> expresion_line parameter_call .)


state 169

    (105) set_value -> INI_INT aux_int_check append_operand DOTCOMMA .

    IF              reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    WHILE           reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    AT              reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    PRINTG          reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    RETURN          reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    ID              reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    LEFTPARENT      reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    INI_INT         reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    INI_FLOAT       reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    DOTCOMMA        reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    RIGHTKEY        reduce using rule 105 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)


state 170

    (106) set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .

    IF              reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    WHILE           reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    AT              reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    PRINTG          reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    RETURN          reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    ID              reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    LEFTPARENT      reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    INI_INT         reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    INI_FLOAT       reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    DOTCOMMA        reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    RIGHTKEY        reduce using rule 106 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)


state 171

    (57) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code . end_cond condition_end_check
    (63) end_cond -> .

    ELSE            reduce using rule 63 (end_cond -> .)
    IF              reduce using rule 63 (end_cond -> .)
    WHILE           reduce using rule 63 (end_cond -> .)
    AT              reduce using rule 63 (end_cond -> .)
    PRINTG          reduce using rule 63 (end_cond -> .)
    RETURN          reduce using rule 63 (end_cond -> .)
    ID              reduce using rule 63 (end_cond -> .)
    LEFTPARENT      reduce using rule 63 (end_cond -> .)
    INI_INT         reduce using rule 63 (end_cond -> .)
    INI_FLOAT       reduce using rule 63 (end_cond -> .)
    DOTCOMMA        reduce using rule 63 (end_cond -> .)
    RIGHTKEY        reduce using rule 63 (end_cond -> .)

    end_cond                       shift and go to state 177

state 172

    (61) condition_code -> LEFTKEY . lets func_code_aux RIGHTKEY
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . empty
    (110) empty -> .

    LET             shift and go to state 7
    IF              reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    AT              reduce using rule 110 (empty -> .)
    PRINTG          reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    LEFTPARENT      reduce using rule 110 (empty -> .)
    INI_INT         reduce using rule 110 (empty -> .)
    INI_FLOAT       reduce using rule 110 (empty -> .)
    RIGHTKEY        reduce using rule 110 (empty -> .)
    DOTCOMMA        reduce using rule 110 (empty -> .)

    lets                           shift and go to state 178
    empty                          shift and go to state 8

state 173

    (70) condition_expresion -> expresion_line condition_signs expresion_line condtion_appear .

    RIGHTPARENT     reduce using rule 70 (condition_expresion -> expresion_line condition_signs expresion_line condtion_appear .)


state 174

    (55) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code . end_cond
    (63) end_cond -> .

    IF              reduce using rule 63 (end_cond -> .)
    WHILE           reduce using rule 63 (end_cond -> .)
    AT              reduce using rule 63 (end_cond -> .)
    PRINTG          reduce using rule 63 (end_cond -> .)
    RETURN          reduce using rule 63 (end_cond -> .)
    ID              reduce using rule 63 (end_cond -> .)
    LEFTPARENT      reduce using rule 63 (end_cond -> .)
    INI_INT         reduce using rule 63 (end_cond -> .)
    INI_FLOAT       reduce using rule 63 (end_cond -> .)
    DOTCOMMA        reduce using rule 63 (end_cond -> .)
    RIGHTKEY        reduce using rule 63 (end_cond -> .)

    end_cond                       shift and go to state 179

state 175

    (46) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT . end_func_call
    (50) end_func_call -> .

    DOTCOMMA        reduce using rule 50 (end_func_call -> .)

    end_func_call                  shift and go to state 180

state 176

    (51) func_calls_params -> expresion_line parameter_call COMMA . add_parameter func_calls_params
    (54) add_parameter -> .

    LEFTPARENT      reduce using rule 54 (add_parameter -> .)
    INI_INT         reduce using rule 54 (add_parameter -> .)
    INI_FLOAT       reduce using rule 54 (add_parameter -> .)
    ID              reduce using rule 54 (add_parameter -> .)

    add_parameter                  shift and go to state 181

state 177

    (57) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond . condition_end_check
    (59) condition_end_check -> . ELSE condition_code end_condition
    (60) condition_end_check -> . end_condition
    (62) end_condition -> .

    ELSE            shift and go to state 183
    IF              reduce using rule 62 (end_condition -> .)
    WHILE           reduce using rule 62 (end_condition -> .)
    AT              reduce using rule 62 (end_condition -> .)
    PRINTG          reduce using rule 62 (end_condition -> .)
    RETURN          reduce using rule 62 (end_condition -> .)
    ID              reduce using rule 62 (end_condition -> .)
    LEFTPARENT      reduce using rule 62 (end_condition -> .)
    INI_INT         reduce using rule 62 (end_condition -> .)
    INI_FLOAT       reduce using rule 62 (end_condition -> .)
    DOTCOMMA        reduce using rule 62 (end_condition -> .)
    RIGHTKEY        reduce using rule 62 (end_condition -> .)

    condition_end_check            shift and go to state 182
    end_condition                  shift and go to state 184

state 178

    (61) condition_code -> LEFTKEY lets . func_code_aux RIGHTKEY
    (28) func_code_aux -> . action func_code_aux
    (29) func_code_aux -> .
    (30) action -> . assign
    (31) action -> . expresion_line
    (32) action -> . condition
    (33) action -> . while
    (34) action -> . func_call DOTCOMMA
    (35) action -> . write
    (36) action -> . return
    (89) assign -> . call_let set_appear SET set_value
    (90) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (91) assign -> . call_let set_appear SET func_call DOTCOMMA
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (57) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check
    (55) while -> . WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond
    (46) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call
    (47) func_call -> .
    (39) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (37) return -> . RETURN expresion_line return_aux DOTCOMMA
    (99) call_let -> . ID check_let_exists
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists

    RIGHTKEY        reduce using rule 29 (func_code_aux -> .)
    IF              shift and go to state 64
    WHILE           shift and go to state 66
    AT              shift and go to state 67
    DOTCOMMA        reduce using rule 47 (func_call -> .)
    PRINTG          shift and go to state 69
    RETURN          shift and go to state 70
    ID              shift and go to state 68
    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76

    func_code_aux                  shift and go to state 185
    action                         shift and go to state 54
    assign                         shift and go to state 55
    expresion_line                 shift and go to state 56
    condition                      shift and go to state 57
    while                          shift and go to state 58
    func_call                      shift and go to state 59
    write                          shift and go to state 60
    return                         shift and go to state 61
    call_let                       shift and go to state 62
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74

state 179

    (55) while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .

    IF              reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    WHILE           reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    AT              reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    PRINTG          reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    RETURN          reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    ID              reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    LEFTPARENT      reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    INI_INT         reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    INI_FLOAT       reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    DOTCOMMA        reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)
    RIGHTKEY        reduce using rule 55 (while -> WHILE while_appear LEFTPARENT condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond .)


state 180

    (46) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call .

    DOTCOMMA        reduce using rule 46 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call .)


state 181

    (51) func_calls_params -> expresion_line parameter_call COMMA add_parameter . func_calls_params
    (51) func_calls_params -> . expresion_line parameter_call COMMA add_parameter func_calls_params
    (52) func_calls_params -> . expresion_line parameter_call
    (71) expresion_line -> . term term_appear
    (72) expresion_line -> . term term_appear aux_expresion
    (75) term -> . fact factor_appear
    (76) term -> . fact factor_appear aux_term
    (79) fact -> . expo expo_appear
    (80) fact -> . expo expo_appear aux_expo
    (81) expo -> . parent_aux
    (82) expo -> . call_lets
    (83) expo -> . call_let
    (84) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (100) call_lets -> . INI_INT check_global_const_exists
    (101) call_lets -> . INI_FLOAT check_global_const_exists
    (99) call_let -> . ID check_let_exists

    LEFTPARENT      shift and go to state 65
    INI_INT         shift and go to state 75
    INI_FLOAT       shift and go to state 76
    ID              shift and go to state 68

    expresion_line                 shift and go to state 150
    func_calls_params              shift and go to state 186
    term                           shift and go to state 63
    fact                           shift and go to state 71
    expo                           shift and go to state 72
    parent_aux                     shift and go to state 73
    call_lets                      shift and go to state 74
    call_let                       shift and go to state 89

state 182

    (57) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .

    IF              reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    WHILE           reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    AT              reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    PRINTG          reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    RETURN          reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    ID              reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    LEFTPARENT      reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    INI_INT         reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    INI_FLOAT       reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    DOTCOMMA        reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)
    RIGHTKEY        reduce using rule 57 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code end_cond condition_end_check .)


state 183

    (59) condition_end_check -> ELSE . condition_code end_condition
    (61) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 172

    condition_code                 shift and go to state 187

state 184

    (60) condition_end_check -> end_condition .

    IF              reduce using rule 60 (condition_end_check -> end_condition .)
    WHILE           reduce using rule 60 (condition_end_check -> end_condition .)
    AT              reduce using rule 60 (condition_end_check -> end_condition .)
    PRINTG          reduce using rule 60 (condition_end_check -> end_condition .)
    RETURN          reduce using rule 60 (condition_end_check -> end_condition .)
    ID              reduce using rule 60 (condition_end_check -> end_condition .)
    LEFTPARENT      reduce using rule 60 (condition_end_check -> end_condition .)
    INI_INT         reduce using rule 60 (condition_end_check -> end_condition .)
    INI_FLOAT       reduce using rule 60 (condition_end_check -> end_condition .)
    DOTCOMMA        reduce using rule 60 (condition_end_check -> end_condition .)
    RIGHTKEY        reduce using rule 60 (condition_end_check -> end_condition .)


state 185

    (61) condition_code -> LEFTKEY lets func_code_aux . RIGHTKEY

    RIGHTKEY        shift and go to state 188


state 186

    (51) func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params .

    RIGHTPARENT     reduce using rule 51 (func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params .)


state 187

    (59) condition_end_check -> ELSE condition_code . end_condition
    (62) end_condition -> .

    IF              reduce using rule 62 (end_condition -> .)
    WHILE           reduce using rule 62 (end_condition -> .)
    AT              reduce using rule 62 (end_condition -> .)
    PRINTG          reduce using rule 62 (end_condition -> .)
    RETURN          reduce using rule 62 (end_condition -> .)
    ID              reduce using rule 62 (end_condition -> .)
    LEFTPARENT      reduce using rule 62 (end_condition -> .)
    INI_INT         reduce using rule 62 (end_condition -> .)
    INI_FLOAT       reduce using rule 62 (end_condition -> .)
    DOTCOMMA        reduce using rule 62 (end_condition -> .)
    RIGHTKEY        reduce using rule 62 (end_condition -> .)

    end_condition                  shift and go to state 189

state 188

    (61) condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .

    ELSE            reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    IF              reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    WHILE           reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    AT              reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    PRINTG          reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    RETURN          reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    ID              reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    LEFTPARENT      reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    INI_INT         reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    INI_FLOAT       reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    DOTCOMMA        reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    RIGHTKEY        reduce using rule 61 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)


state 189

    (59) condition_end_check -> ELSE condition_code end_condition .

    IF              reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    WHILE           reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    AT              reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    PRINTG          reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    RETURN          reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    ID              reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    LEFTPARENT      reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    INI_INT         reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    INI_FLOAT       reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    DOTCOMMA        reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)
    RIGHTKEY        reduce using rule 59 (condition_end_check -> ELSE condition_code end_condition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 117 resolved using rule (add_operand_const -> <empty>)
WARNING: rejected rule (aux_int_check -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (add_operand_const -> <empty>)
WARNING: rejected rule (aux_float_check -> <empty>) in state 118
WARNING: Rule (aux_int_check -> <empty>) is never reduced
WARNING: Rule (aux_float_check -> <empty>) is never reduced
