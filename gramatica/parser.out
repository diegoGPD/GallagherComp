Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    ENDALL
    ENDFUNC
    GOTO
    GOTOF
    GOTOT
    IGNOREGOTOFUNC
    INI_BOOL
    MAIN
    PROM
    TOC
    TOCALLEDEND
    TOCP
    VERIFY

Grammar

Rule 0     S' -> compile
Rule 1     compile -> PROG ID seen_program DOTCOMMA lets modules
Rule 2     compile -> <empty>
Rule 3     modules -> func modules
Rule 4     modules -> <empty>
Rule 5     seen_program -> <empty>
Rule 6     lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
Rule 7     lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
Rule 8     lets -> empty
Rule 9     seen_lets -> <empty>
Rule 10    type -> INT seen_type
Rule 11    type -> FLOAT seen_type
Rule 12    type -> BOOL seen_type
Rule 13    seen_type -> <empty>
Rule 14    seen_ID_let -> <empty>
Rule 15    access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access
Rule 16    access_array_found -> <empty>
Rule 17    end_array_access -> <empty>
Rule 18    array_expresion -> array_expresion_line array_expresion_helper
Rule 19    array_expresion -> array_expresion_line array_expresion_helper COMMA array_comma_access array_expresion
Rule 20    array_expresion_line -> expresion_line
Rule 21    array_expresion_helper -> <empty>
Rule 22    array_comma_access -> <empty>
Rule 23    aux_let -> COMMA ID seen_ID_let aux_let
Rule 24    aux_let -> <empty>
Rule 25    func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code
Rule 26    seen_func_name -> <empty>
Rule 27    params -> LEFTPARENT param_table_init param_declare RIGHTPARENT
Rule 28    param_table_init -> <empty>
Rule 29    param_declare -> type ID seen_ID_let param_declare
Rule 30    param_declare -> COMMA param_declare
Rule 31    param_declare -> param_declare_empty
Rule 32    param_declare_empty -> empty
Rule 33    return_func_type -> type
Rule 34    return_func_type -> VOID void_detect
Rule 35    void_detect -> <empty>
Rule 36    func_code -> LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func
Rule 37    end_func -> <empty>
Rule 38    func_code_aux -> action func_code_aux
Rule 39    func_code_aux -> <empty>
Rule 40    action -> assign
Rule 41    action -> expresion_line
Rule 42    action -> condition
Rule 43    action -> while
Rule 44    action -> func_call DOTCOMMA
Rule 45    action -> write
Rule 46    action -> access_array
Rule 47    action -> return
Rule 48    return -> RETURN expresion_line return_aux DOTCOMMA
Rule 49    return -> <empty>
Rule 50    return_aux -> <empty>
Rule 51    write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
Rule 52    write_found -> write_found_aux
Rule 53    write_found -> write_found_aux COMMA write_found
Rule 54    write_found_aux -> expresion_line print_exp
Rule 55    write_found_aux -> INI_STRING string_appear print_exp
Rule 56    print_exp -> <empty>
Rule 57    string_appear -> <empty>
Rule 58    func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
Rule 59    func_call -> <empty>
Rule 60    func_call_ID -> <empty>
Rule 61    end_func_call -> <empty>
Rule 62    func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params
Rule 63    func_calls_params -> expresion_line parameter_call
Rule 64    parameter_call -> <empty>
Rule 65    add_parameter -> <empty>
Rule 66    while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end
Rule 67    while_end -> <empty>
Rule 68    while_appear -> <empty>
Rule 69    condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check
Rule 70    condtion_appear -> <empty>
Rule 71    condition_end_check -> ELSE else_appear condition_code end_condition
Rule 72    condition_end_check -> end_condition
Rule 73    else_appear -> <empty>
Rule 74    condition_code -> LEFTKEY lets func_code_aux RIGHTKEY
Rule 75    func_code_start -> <empty>
Rule 76    end_condition -> <empty>
Rule 77    condition_signs -> GREATERTN add_operator
Rule 78    condition_signs -> LESSTN add_operator
Rule 79    condition_signs -> SAME add_operator
Rule 80    condition_signs -> NOTSAME add_operator
Rule 81    condition_signs -> LESSSAME add_operator
Rule 82    condition_signs -> MORESAME add_operator
Rule 83    condition_expresion -> expresion_line condition_signs expresion_line condtion_appear
Rule 84    condition_expresion -> expresion_line condtion_appear
Rule 85    expresion_line -> term term_appear
Rule 86    expresion_line -> term term_appear aux_expresion
Rule 87    aux_expresion -> ADD add_operator expresion_line
Rule 88    aux_expresion -> LESS add_operator expresion_line
Rule 89    term -> fact factor_appear
Rule 90    term -> fact factor_appear aux_term
Rule 91    aux_term -> SPLIT_BY add_operator term
Rule 92    aux_term -> MULT_BY add_operator term
Rule 93    fact -> expo expo_appear
Rule 94    fact -> expo expo_appear aux_expo
Rule 95    expo -> parent_aux
Rule 96    expo -> call_lets
Rule 97    expo -> call_let
Rule 98    expo -> func_call
Rule 99    expo -> access_array
Rule 100   parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
Rule 101   right_parent_condition -> <empty>
Rule 102   found_init_parent -> <empty>
Rule 103   found_end_parent -> <empty>
Rule 104   aux_expo -> TIMES_BY_SAME add_operator fact
Rule 105   assign -> call_let set_appear SET set_value
Rule 106   assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
Rule 107   assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA
Rule 108   seen_final_asignacion -> <empty>
Rule 109   add_operand -> <empty>
Rule 110   add_operator -> <empty>
Rule 111   set_appear -> <empty>
Rule 112   term_appear -> <empty>
Rule 113   factor_appear -> <empty>
Rule 114   expo_appear -> <empty>
Rule 115   left_bracket_array -> <empty>
Rule 116   extra_dimension_found -> <empty>
Rule 117   add_dimension -> INI_INT array_start INI_INT array_end
Rule 118   add_dimension -> INI_INT array_start INI_INT array_end COMMA extra_dimension_found add_dimension
Rule 119   array_start -> <empty>
Rule 120   array_end -> <empty>
Rule 121   end_array_init -> <empty>
Rule 122   call_let -> ID check_let_exists
Rule 123   call_lets -> INI_INT check_global_const_exists
Rule 124   call_lets -> INI_FLOAT check_global_const_exists
Rule 125   check_global_const_exists -> add_operand_const
Rule 126   add_operand_const -> <empty>
Rule 127   check_let_exists -> <empty>
Rule 128   set_value -> INI_INT aux_int_check append_operand DOTCOMMA
Rule 129   set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA
Rule 130   append_operand -> <empty>
Rule 131   aux_int_check -> <empty>
Rule 132   aux_float_check -> <empty>
Rule 133   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 87
AT                   : 58
BOOL                 : 12
COMMA                : 19 23 30 53 62 118
DO                   : 
DOTCOMMA             : 1 6 7 44 48 51 106 107 128 129
ELSE                 : 71
ENDALL               : 
ENDFUNC              : 
FLOAT                : 11
FUNC                 : 25
GOTO                 : 
GOTOF                : 
GOTOT                : 
GREATERTN            : 77
ID                   : 1 6 7 15 23 25 29 58 122
IF                   : 69
IGNOREGOTOFUNC       : 
INI_BOOL             : 
INI_FLOAT            : 124 129
INI_INT              : 117 117 118 118 123 128
INI_STRING           : 55
INT                  : 10
LEFTBRACK            : 7 15
LEFTKEY              : 36 74
LEFTPARENT           : 27 51 58 66 69 100
LESS                 : 88
LESSSAME             : 81
LESSTN               : 78
LET                  : 6 7
MAIN                 : 
MORESAME             : 82
MULT_BY              : 92
NOTSAME              : 80
PRINTG               : 51
PROG                 : 1
PROM                 : 
RETURN               : 48
RIGHTBRACK           : 7 15
RIGHTKEY             : 36 74
RIGHTPARENT          : 27 51 58 66 69 100
SAME                 : 79
SET                  : 105 106 107
SPLIT_BY             : 91
TIMES_BY_SAME        : 104
TOC                  : 
TOCALLEDEND          : 
TOCP                 : 
TWOPOINTS            : 25 25
VERIFY               : 
VOID                 : 34
WHILE                : 66
error                : 

Nonterminals, with rules where they appear

access_array         : 46 99 107
access_array_found   : 15
action               : 38
add_dimension        : 7 118
add_operand          : 
add_operand_const    : 125
add_operator         : 77 78 79 80 81 82 87 88 91 92 104
add_parameter        : 62
append_operand       : 128 129
array_comma_access   : 19
array_end            : 117 118
array_expresion      : 15 19
array_expresion_helper : 18 19
array_expresion_line : 18 19
array_start          : 117 118
assign               : 40
aux_expo             : 94
aux_expresion        : 86
aux_float_check      : 129
aux_int_check        : 128
aux_let              : 6 23
aux_term             : 90
call_let             : 97 105 106
call_lets            : 96
check_global_const_exists : 123 124
check_let_exists     : 122
compile              : 0
condition            : 42
condition_code       : 66 69 71
condition_end_check  : 69
condition_expresion  : 66 69
condition_signs      : 83
condtion_appear      : 83 84
else_appear          : 71
empty                : 8 32
end_array_access     : 15
end_array_init       : 7
end_condition        : 71 72
end_func             : 36
end_func_call        : 58
expo                 : 93 94
expo_appear          : 93 94
expresion_line       : 20 41 48 54 62 63 83 83 84 87 88 100 106 107
extra_dimension_found : 118
fact                 : 89 90 104
factor_appear        : 89 90
found_end_parent     : 100
found_init_parent    : 69 100
func                 : 3
func_call            : 44 98
func_call_ID         : 58
func_calls_params    : 58 62
func_code            : 25
func_code_aux        : 36 38 74
func_code_start      : 36
left_bracket_array   : 7
lets                 : 1 6 7 36 74
modules              : 1 3
param_declare        : 27 29 30
param_declare_empty  : 31
param_table_init     : 27
parameter_call       : 62 63
params               : 25
parent_aux           : 95
print_exp            : 54 55
return               : 47
return_aux           : 48
return_func_type     : 25
right_parent_condition : 66 69
seen_ID_let          : 6 7 23 29
seen_final_asignacion : 106 107
seen_func_name       : 25
seen_lets            : 6 7
seen_program         : 1
seen_type            : 10 11 12
set_appear           : 105 106 107
set_value            : 105
string_appear        : 55
term                 : 85 86 91 92
term_appear          : 85 86
type                 : 6 7 29 33
void_detect          : 34
while                : 43
while_appear         : 66
while_end            : 66
write                : 45
write_found          : 51 53
write_found_aux      : 52 53

Parsing method: LALR

state 0

    (0) S' -> . compile
    (1) compile -> . PROG ID seen_program DOTCOMMA lets modules
    (2) compile -> .

    PROG            shift and go to state 2
    $end            reduce using rule 2 (compile -> .)

    compile                        shift and go to state 1

state 1

    (0) S' -> compile .



state 2

    (1) compile -> PROG . ID seen_program DOTCOMMA lets modules

    ID              shift and go to state 3


state 3

    (1) compile -> PROG ID . seen_program DOTCOMMA lets modules
    (5) seen_program -> .

    DOTCOMMA        reduce using rule 5 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) compile -> PROG ID seen_program . DOTCOMMA lets modules

    DOTCOMMA        shift and go to state 5


state 5

    (1) compile -> PROG ID seen_program DOTCOMMA . lets modules
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (8) lets -> . empty
    (133) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 133 (empty -> .)
    $end            reduce using rule 133 (empty -> .)

    lets                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) compile -> PROG ID seen_program DOTCOMMA lets . modules
    (3) modules -> . func modules
    (4) modules -> .
    (25) func -> . FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    $end            reduce using rule 4 (modules -> .)
    FUNC            shift and go to state 11

    modules                        shift and go to state 9
    func                           shift and go to state 10

state 7

    (6) lets -> LET . seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> LET . seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (9) seen_lets -> .

    INT             reduce using rule 9 (seen_lets -> .)
    FLOAT           reduce using rule 9 (seen_lets -> .)
    BOOL            reduce using rule 9 (seen_lets -> .)

    seen_lets                      shift and go to state 12

state 8

    (8) lets -> empty .

    FUNC            reduce using rule 8 (lets -> empty .)
    $end            reduce using rule 8 (lets -> empty .)
    IF              reduce using rule 8 (lets -> empty .)
    WHILE           reduce using rule 8 (lets -> empty .)
    AT              reduce using rule 8 (lets -> empty .)
    PRINTG          reduce using rule 8 (lets -> empty .)
    ID              reduce using rule 8 (lets -> empty .)
    RETURN          reduce using rule 8 (lets -> empty .)
    LEFTPARENT      reduce using rule 8 (lets -> empty .)
    INI_INT         reduce using rule 8 (lets -> empty .)
    INI_FLOAT       reduce using rule 8 (lets -> empty .)
    RIGHTKEY        reduce using rule 8 (lets -> empty .)
    DOTCOMMA        reduce using rule 8 (lets -> empty .)
    ADD             reduce using rule 8 (lets -> empty .)
    LESS            reduce using rule 8 (lets -> empty .)
    SPLIT_BY        reduce using rule 8 (lets -> empty .)
    MULT_BY         reduce using rule 8 (lets -> empty .)
    TIMES_BY_SAME   reduce using rule 8 (lets -> empty .)


state 9

    (1) compile -> PROG ID seen_program DOTCOMMA lets modules .

    $end            reduce using rule 1 (compile -> PROG ID seen_program DOTCOMMA lets modules .)


state 10

    (3) modules -> func . modules
    (3) modules -> . func modules
    (4) modules -> .
    (25) func -> . FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    $end            reduce using rule 4 (modules -> .)
    FUNC            shift and go to state 11

    func                           shift and go to state 10
    modules                        shift and go to state 13

state 11

    (25) func -> FUNC . ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code

    ID              shift and go to state 14


state 12

    (6) lets -> LET seen_lets . type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> LET seen_lets . type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (10) type -> . INT seen_type
    (11) type -> . FLOAT seen_type
    (12) type -> . BOOL seen_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18

    type                           shift and go to state 15

state 13

    (3) modules -> func modules .

    $end            reduce using rule 3 (modules -> func modules .)


state 14

    (25) func -> FUNC ID . seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code
    (26) seen_func_name -> .

    LEFTPARENT      reduce using rule 26 (seen_func_name -> .)

    seen_func_name                 shift and go to state 19

state 15

    (6) lets -> LET seen_lets type . ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> LET seen_lets type . ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets

    ID              shift and go to state 20


state 16

    (10) type -> INT . seen_type
    (13) seen_type -> .

    ID              reduce using rule 13 (seen_type -> .)
    TWOPOINTS       reduce using rule 13 (seen_type -> .)

    seen_type                      shift and go to state 21

state 17

    (11) type -> FLOAT . seen_type
    (13) seen_type -> .

    ID              reduce using rule 13 (seen_type -> .)
    TWOPOINTS       reduce using rule 13 (seen_type -> .)

    seen_type                      shift and go to state 22

state 18

    (12) type -> BOOL . seen_type
    (13) seen_type -> .

    ID              reduce using rule 13 (seen_type -> .)
    TWOPOINTS       reduce using rule 13 (seen_type -> .)

    seen_type                      shift and go to state 23

state 19

    (25) func -> FUNC ID seen_func_name . params TWOPOINTS return_func_type TWOPOINTS func_code
    (27) params -> . LEFTPARENT param_table_init param_declare RIGHTPARENT

    LEFTPARENT      shift and go to state 25

    params                         shift and go to state 24

state 20

    (6) lets -> LET seen_lets type ID . seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> LET seen_lets type ID . seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (14) seen_ID_let -> .

    LEFTBRACK       reduce using rule 14 (seen_ID_let -> .)
    COMMA           reduce using rule 14 (seen_ID_let -> .)
    DOTCOMMA        reduce using rule 14 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 26

state 21

    (10) type -> INT seen_type .

    ID              reduce using rule 10 (type -> INT seen_type .)
    TWOPOINTS       reduce using rule 10 (type -> INT seen_type .)


state 22

    (11) type -> FLOAT seen_type .

    ID              reduce using rule 11 (type -> FLOAT seen_type .)
    TWOPOINTS       reduce using rule 11 (type -> FLOAT seen_type .)


state 23

    (12) type -> BOOL seen_type .

    ID              reduce using rule 12 (type -> BOOL seen_type .)
    TWOPOINTS       reduce using rule 12 (type -> BOOL seen_type .)


state 24

    (25) func -> FUNC ID seen_func_name params . TWOPOINTS return_func_type TWOPOINTS func_code

    TWOPOINTS       shift and go to state 27


state 25

    (27) params -> LEFTPARENT . param_table_init param_declare RIGHTPARENT
    (28) param_table_init -> .

    COMMA           reduce using rule 28 (param_table_init -> .)
    INT             reduce using rule 28 (param_table_init -> .)
    FLOAT           reduce using rule 28 (param_table_init -> .)
    BOOL            reduce using rule 28 (param_table_init -> .)
    RIGHTPARENT     reduce using rule 28 (param_table_init -> .)

    param_table_init               shift and go to state 28

state 26

    (6) lets -> LET seen_lets type ID seen_ID_let . aux_let DOTCOMMA lets
    (7) lets -> LET seen_lets type ID seen_ID_let . LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (23) aux_let -> . COMMA ID seen_ID_let aux_let
    (24) aux_let -> .

    LEFTBRACK       shift and go to state 30
    COMMA           shift and go to state 31
    DOTCOMMA        reduce using rule 24 (aux_let -> .)

    aux_let                        shift and go to state 29

state 27

    (25) func -> FUNC ID seen_func_name params TWOPOINTS . return_func_type TWOPOINTS func_code
    (33) return_func_type -> . type
    (34) return_func_type -> . VOID void_detect
    (10) type -> . INT seen_type
    (11) type -> . FLOAT seen_type
    (12) type -> . BOOL seen_type

    VOID            shift and go to state 34
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18

    return_func_type               shift and go to state 32
    type                           shift and go to state 33

state 28

    (27) params -> LEFTPARENT param_table_init . param_declare RIGHTPARENT
    (29) param_declare -> . type ID seen_ID_let param_declare
    (30) param_declare -> . COMMA param_declare
    (31) param_declare -> . param_declare_empty
    (10) type -> . INT seen_type
    (11) type -> . FLOAT seen_type
    (12) type -> . BOOL seen_type
    (32) param_declare_empty -> . empty
    (133) empty -> .

    COMMA           shift and go to state 37
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 133 (empty -> .)

    param_declare                  shift and go to state 35
    type                           shift and go to state 36
    param_declare_empty            shift and go to state 38
    empty                          shift and go to state 39

state 29

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let . DOTCOMMA lets

    DOTCOMMA        shift and go to state 40


state 30

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK . left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (115) left_bracket_array -> .

    INI_INT         reduce using rule 115 (left_bracket_array -> .)

    left_bracket_array             shift and go to state 41

state 31

    (23) aux_let -> COMMA . ID seen_ID_let aux_let

    ID              shift and go to state 42


state 32

    (25) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type . TWOPOINTS func_code

    TWOPOINTS       shift and go to state 43


state 33

    (33) return_func_type -> type .

    TWOPOINTS       reduce using rule 33 (return_func_type -> type .)


state 34

    (34) return_func_type -> VOID . void_detect
    (35) void_detect -> .

    TWOPOINTS       reduce using rule 35 (void_detect -> .)

    void_detect                    shift and go to state 44

state 35

    (27) params -> LEFTPARENT param_table_init param_declare . RIGHTPARENT

    RIGHTPARENT     shift and go to state 45


state 36

    (29) param_declare -> type . ID seen_ID_let param_declare

    ID              shift and go to state 46


state 37

    (30) param_declare -> COMMA . param_declare
    (29) param_declare -> . type ID seen_ID_let param_declare
    (30) param_declare -> . COMMA param_declare
    (31) param_declare -> . param_declare_empty
    (10) type -> . INT seen_type
    (11) type -> . FLOAT seen_type
    (12) type -> . BOOL seen_type
    (32) param_declare_empty -> . empty
    (133) empty -> .

    COMMA           shift and go to state 37
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 133 (empty -> .)

    param_declare                  shift and go to state 47
    type                           shift and go to state 36
    param_declare_empty            shift and go to state 38
    empty                          shift and go to state 39

state 38

    (31) param_declare -> param_declare_empty .

    RIGHTPARENT     reduce using rule 31 (param_declare -> param_declare_empty .)


state 39

    (32) param_declare_empty -> empty .

    RIGHTPARENT     reduce using rule 32 (param_declare_empty -> empty .)


state 40

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA . lets
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (8) lets -> . empty
    (133) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 133 (empty -> .)
    $end            reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    AT              reduce using rule 133 (empty -> .)
    PRINTG          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    LEFTPARENT      reduce using rule 133 (empty -> .)
    INI_INT         reduce using rule 133 (empty -> .)
    INI_FLOAT       reduce using rule 133 (empty -> .)
    RIGHTKEY        reduce using rule 133 (empty -> .)
    DOTCOMMA        reduce using rule 133 (empty -> .)
    ADD             reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    SPLIT_BY        reduce using rule 133 (empty -> .)
    MULT_BY         reduce using rule 133 (empty -> .)
    TIMES_BY_SAME   reduce using rule 133 (empty -> .)

    lets                           shift and go to state 48
    empty                          shift and go to state 8

state 41

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array . add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (117) add_dimension -> . INI_INT array_start INI_INT array_end
    (118) add_dimension -> . INI_INT array_start INI_INT array_end COMMA extra_dimension_found add_dimension

    INI_INT         shift and go to state 50

    add_dimension                  shift and go to state 49

state 42

    (23) aux_let -> COMMA ID . seen_ID_let aux_let
    (14) seen_ID_let -> .

    COMMA           reduce using rule 14 (seen_ID_let -> .)
    DOTCOMMA        reduce using rule 14 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 51

state 43

    (25) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS . func_code
    (36) func_code -> . LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func

    LEFTKEY         shift and go to state 53

    func_code                      shift and go to state 52

state 44

    (34) return_func_type -> VOID void_detect .

    TWOPOINTS       reduce using rule 34 (return_func_type -> VOID void_detect .)


state 45

    (27) params -> LEFTPARENT param_table_init param_declare RIGHTPARENT .

    TWOPOINTS       reduce using rule 27 (params -> LEFTPARENT param_table_init param_declare RIGHTPARENT .)


state 46

    (29) param_declare -> type ID . seen_ID_let param_declare
    (14) seen_ID_let -> .

    COMMA           reduce using rule 14 (seen_ID_let -> .)
    INT             reduce using rule 14 (seen_ID_let -> .)
    FLOAT           reduce using rule 14 (seen_ID_let -> .)
    BOOL            reduce using rule 14 (seen_ID_let -> .)
    RIGHTPARENT     reduce using rule 14 (seen_ID_let -> .)

    seen_ID_let                    shift and go to state 54

state 47

    (30) param_declare -> COMMA param_declare .

    RIGHTPARENT     reduce using rule 30 (param_declare -> COMMA param_declare .)


state 48

    (6) lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .

    FUNC            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    $end            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    IF              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    WHILE           reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    AT              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    PRINTG          reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    ID              reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    RETURN          reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    LEFTPARENT      reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    INI_INT         reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    INI_FLOAT       reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    RIGHTKEY        reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    DOTCOMMA        reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    ADD             reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    LESS            reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    SPLIT_BY        reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    MULT_BY         reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)
    TIMES_BY_SAME   reduce using rule 6 (lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets .)


state 49

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension . RIGHTBRACK end_array_init DOTCOMMA lets

    RIGHTBRACK      shift and go to state 55


state 50

    (117) add_dimension -> INI_INT . array_start INI_INT array_end
    (118) add_dimension -> INI_INT . array_start INI_INT array_end COMMA extra_dimension_found add_dimension
    (119) array_start -> .

    INI_INT         reduce using rule 119 (array_start -> .)

    array_start                    shift and go to state 56

state 51

    (23) aux_let -> COMMA ID seen_ID_let . aux_let
    (23) aux_let -> . COMMA ID seen_ID_let aux_let
    (24) aux_let -> .

    COMMA           shift and go to state 31
    DOTCOMMA        reduce using rule 24 (aux_let -> .)

    aux_let                        shift and go to state 57

state 52

    (25) func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .

    FUNC            reduce using rule 25 (func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .)
    $end            reduce using rule 25 (func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code .)


state 53

    (36) func_code -> LEFTKEY . func_code_start lets func_code_aux RIGHTKEY end_func
    (75) func_code_start -> .

    LET             reduce using rule 75 (func_code_start -> .)
    IF              reduce using rule 75 (func_code_start -> .)
    WHILE           reduce using rule 75 (func_code_start -> .)
    AT              reduce using rule 75 (func_code_start -> .)
    PRINTG          reduce using rule 75 (func_code_start -> .)
    ID              reduce using rule 75 (func_code_start -> .)
    RETURN          reduce using rule 75 (func_code_start -> .)
    LEFTPARENT      reduce using rule 75 (func_code_start -> .)
    INI_INT         reduce using rule 75 (func_code_start -> .)
    INI_FLOAT       reduce using rule 75 (func_code_start -> .)
    RIGHTKEY        reduce using rule 75 (func_code_start -> .)
    DOTCOMMA        reduce using rule 75 (func_code_start -> .)
    ADD             reduce using rule 75 (func_code_start -> .)
    LESS            reduce using rule 75 (func_code_start -> .)
    SPLIT_BY        reduce using rule 75 (func_code_start -> .)
    MULT_BY         reduce using rule 75 (func_code_start -> .)
    TIMES_BY_SAME   reduce using rule 75 (func_code_start -> .)

    func_code_start                shift and go to state 58

state 54

    (29) param_declare -> type ID seen_ID_let . param_declare
    (29) param_declare -> . type ID seen_ID_let param_declare
    (30) param_declare -> . COMMA param_declare
    (31) param_declare -> . param_declare_empty
    (10) type -> . INT seen_type
    (11) type -> . FLOAT seen_type
    (12) type -> . BOOL seen_type
    (32) param_declare_empty -> . empty
    (133) empty -> .

    COMMA           shift and go to state 37
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    RIGHTPARENT     reduce using rule 133 (empty -> .)

    type                           shift and go to state 36
    param_declare                  shift and go to state 59
    param_declare_empty            shift and go to state 38
    empty                          shift and go to state 39

state 55

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK . end_array_init DOTCOMMA lets
    (121) end_array_init -> .

    DOTCOMMA        reduce using rule 121 (end_array_init -> .)

    end_array_init                 shift and go to state 60

state 56

    (117) add_dimension -> INI_INT array_start . INI_INT array_end
    (118) add_dimension -> INI_INT array_start . INI_INT array_end COMMA extra_dimension_found add_dimension

    INI_INT         shift and go to state 61


state 57

    (23) aux_let -> COMMA ID seen_ID_let aux_let .

    DOTCOMMA        reduce using rule 23 (aux_let -> COMMA ID seen_ID_let aux_let .)


state 58

    (36) func_code -> LEFTKEY func_code_start . lets func_code_aux RIGHTKEY end_func
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (8) lets -> . empty
    (133) empty -> .

    LET             shift and go to state 7
    IF              reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    AT              reduce using rule 133 (empty -> .)
    PRINTG          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    LEFTPARENT      reduce using rule 133 (empty -> .)
    INI_INT         reduce using rule 133 (empty -> .)
    INI_FLOAT       reduce using rule 133 (empty -> .)
    RIGHTKEY        reduce using rule 133 (empty -> .)
    DOTCOMMA        reduce using rule 133 (empty -> .)
    ADD             reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    SPLIT_BY        reduce using rule 133 (empty -> .)
    MULT_BY         reduce using rule 133 (empty -> .)
    TIMES_BY_SAME   reduce using rule 133 (empty -> .)

    lets                           shift and go to state 62
    empty                          shift and go to state 8

state 59

    (29) param_declare -> type ID seen_ID_let param_declare .

    RIGHTPARENT     reduce using rule 29 (param_declare -> type ID seen_ID_let param_declare .)


state 60

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init . DOTCOMMA lets

    DOTCOMMA        shift and go to state 63


state 61

    (117) add_dimension -> INI_INT array_start INI_INT . array_end
    (118) add_dimension -> INI_INT array_start INI_INT . array_end COMMA extra_dimension_found add_dimension
    (120) array_end -> .

    COMMA           reduce using rule 120 (array_end -> .)
    RIGHTBRACK      reduce using rule 120 (array_end -> .)

    array_end                      shift and go to state 64

state 62

    (36) func_code -> LEFTKEY func_code_start lets . func_code_aux RIGHTKEY end_func
    (38) func_code_aux -> . action func_code_aux
    (39) func_code_aux -> .
    (40) action -> . assign
    (41) action -> . expresion_line
    (42) action -> . condition
    (43) action -> . while
    (44) action -> . func_call DOTCOMMA
    (45) action -> . write
    (46) action -> . access_array
    (47) action -> . return
    (105) assign -> . call_let set_appear SET set_value
    (106) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (107) assign -> . access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (69) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check
    (66) while -> . WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (51) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access
    (48) return -> . RETURN expresion_line return_aux DOTCOMMA
    (49) return -> .
    (122) call_let -> . ID check_let_exists
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 39 (func_code_aux -> .)
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! reduce/reduce conflict for LEFTPARENT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for INI_INT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for INI_FLOAT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for DOTCOMMA resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for ADD resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for SPLIT_BY resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for MULT_BY resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for TIMES_BY_SAME resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 39 (func_code_aux -> .)
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    RIGHTKEY        reduce using rule 39 (func_code_aux -> .)
    IF              shift and go to state 77
    WHILE           shift and go to state 79
    AT              shift and go to state 80
    PRINTG          shift and go to state 82
    ID              shift and go to state 81
    RETURN          shift and go to state 83
    DOTCOMMA        reduce using rule 49 (return -> .)
    ADD             reduce using rule 49 (return -> .)
    LESS            reduce using rule 49 (return -> .)
    SPLIT_BY        reduce using rule 49 (return -> .)
    MULT_BY         reduce using rule 49 (return -> .)
    TIMES_BY_SAME   reduce using rule 49 (return -> .)
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89

  ! DOTCOMMA        [ reduce using rule 59 (func_call -> .) ]
  ! TIMES_BY_SAME   [ reduce using rule 59 (func_call -> .) ]
  ! SPLIT_BY        [ reduce using rule 59 (func_call -> .) ]
  ! MULT_BY         [ reduce using rule 59 (func_call -> .) ]
  ! ADD             [ reduce using rule 59 (func_call -> .) ]
  ! LESS            [ reduce using rule 59 (func_call -> .) ]
  ! IF              [ reduce using rule 59 (func_call -> .) ]
  ! WHILE           [ reduce using rule 59 (func_call -> .) ]
  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! PRINTG          [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! RETURN          [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]
  ! RIGHTKEY        [ reduce using rule 59 (func_call -> .) ]
  ! IF              [ reduce using rule 49 (return -> .) ]
  ! WHILE           [ reduce using rule 49 (return -> .) ]
  ! AT              [ reduce using rule 49 (return -> .) ]
  ! PRINTG          [ reduce using rule 49 (return -> .) ]
  ! ID              [ reduce using rule 49 (return -> .) ]
  ! RETURN          [ reduce using rule 49 (return -> .) ]
  ! LEFTPARENT      [ reduce using rule 49 (return -> .) ]
  ! INI_INT         [ reduce using rule 49 (return -> .) ]
  ! INI_FLOAT       [ reduce using rule 49 (return -> .) ]
  ! RIGHTKEY        [ reduce using rule 49 (return -> .) ]

    func_code_aux                  shift and go to state 65
    action                         shift and go to state 66
    assign                         shift and go to state 67
    expresion_line                 shift and go to state 68
    condition                      shift and go to state 69
    while                          shift and go to state 70
    func_call                      shift and go to state 71
    write                          shift and go to state 72
    access_array                   shift and go to state 73
    return                         shift and go to state 74
    call_let                       shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87

state 63

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA . lets
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (8) lets -> . empty
    (133) empty -> .

    LET             shift and go to state 7
    FUNC            reduce using rule 133 (empty -> .)
    $end            reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    AT              reduce using rule 133 (empty -> .)
    PRINTG          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    LEFTPARENT      reduce using rule 133 (empty -> .)
    INI_INT         reduce using rule 133 (empty -> .)
    INI_FLOAT       reduce using rule 133 (empty -> .)
    RIGHTKEY        reduce using rule 133 (empty -> .)
    DOTCOMMA        reduce using rule 133 (empty -> .)
    ADD             reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    SPLIT_BY        reduce using rule 133 (empty -> .)
    MULT_BY         reduce using rule 133 (empty -> .)
    TIMES_BY_SAME   reduce using rule 133 (empty -> .)

    lets                           shift and go to state 90
    empty                          shift and go to state 8

state 64

    (117) add_dimension -> INI_INT array_start INI_INT array_end .
    (118) add_dimension -> INI_INT array_start INI_INT array_end . COMMA extra_dimension_found add_dimension

    RIGHTBRACK      reduce using rule 117 (add_dimension -> INI_INT array_start INI_INT array_end .)
    COMMA           shift and go to state 91


state 65

    (36) func_code -> LEFTKEY func_code_start lets func_code_aux . RIGHTKEY end_func

    RIGHTKEY        shift and go to state 92


state 66

    (38) func_code_aux -> action . func_code_aux
    (38) func_code_aux -> . action func_code_aux
    (39) func_code_aux -> .
    (40) action -> . assign
    (41) action -> . expresion_line
    (42) action -> . condition
    (43) action -> . while
    (44) action -> . func_call DOTCOMMA
    (45) action -> . write
    (46) action -> . access_array
    (47) action -> . return
    (105) assign -> . call_let set_appear SET set_value
    (106) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (107) assign -> . access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (69) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check
    (66) while -> . WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (51) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access
    (48) return -> . RETURN expresion_line return_aux DOTCOMMA
    (49) return -> .
    (122) call_let -> . ID check_let_exists
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 39 (func_code_aux -> .)
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! reduce/reduce conflict for LEFTPARENT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for INI_INT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for INI_FLOAT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for DOTCOMMA resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for ADD resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for SPLIT_BY resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for MULT_BY resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for TIMES_BY_SAME resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 39 (func_code_aux -> .)
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    RIGHTKEY        reduce using rule 39 (func_code_aux -> .)
    IF              shift and go to state 77
    WHILE           shift and go to state 79
    AT              shift and go to state 80
    PRINTG          shift and go to state 82
    ID              shift and go to state 81
    RETURN          shift and go to state 83
    DOTCOMMA        reduce using rule 49 (return -> .)
    ADD             reduce using rule 49 (return -> .)
    LESS            reduce using rule 49 (return -> .)
    SPLIT_BY        reduce using rule 49 (return -> .)
    MULT_BY         reduce using rule 49 (return -> .)
    TIMES_BY_SAME   reduce using rule 49 (return -> .)
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89

  ! DOTCOMMA        [ reduce using rule 59 (func_call -> .) ]
  ! TIMES_BY_SAME   [ reduce using rule 59 (func_call -> .) ]
  ! SPLIT_BY        [ reduce using rule 59 (func_call -> .) ]
  ! MULT_BY         [ reduce using rule 59 (func_call -> .) ]
  ! ADD             [ reduce using rule 59 (func_call -> .) ]
  ! LESS            [ reduce using rule 59 (func_call -> .) ]
  ! IF              [ reduce using rule 59 (func_call -> .) ]
  ! WHILE           [ reduce using rule 59 (func_call -> .) ]
  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! PRINTG          [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! RETURN          [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]
  ! RIGHTKEY        [ reduce using rule 59 (func_call -> .) ]
  ! IF              [ reduce using rule 49 (return -> .) ]
  ! WHILE           [ reduce using rule 49 (return -> .) ]
  ! AT              [ reduce using rule 49 (return -> .) ]
  ! PRINTG          [ reduce using rule 49 (return -> .) ]
  ! ID              [ reduce using rule 49 (return -> .) ]
  ! RETURN          [ reduce using rule 49 (return -> .) ]
  ! LEFTPARENT      [ reduce using rule 49 (return -> .) ]
  ! INI_INT         [ reduce using rule 49 (return -> .) ]
  ! INI_FLOAT       [ reduce using rule 49 (return -> .) ]
  ! RIGHTKEY        [ reduce using rule 49 (return -> .) ]

    action                         shift and go to state 66
    func_code_aux                  shift and go to state 93
    assign                         shift and go to state 67
    expresion_line                 shift and go to state 68
    condition                      shift and go to state 69
    while                          shift and go to state 70
    func_call                      shift and go to state 71
    write                          shift and go to state 72
    access_array                   shift and go to state 73
    return                         shift and go to state 74
    call_let                       shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87

state 67

    (40) action -> assign .

    IF              reduce using rule 40 (action -> assign .)
    WHILE           reduce using rule 40 (action -> assign .)
    AT              reduce using rule 40 (action -> assign .)
    PRINTG          reduce using rule 40 (action -> assign .)
    ID              reduce using rule 40 (action -> assign .)
    RETURN          reduce using rule 40 (action -> assign .)
    LEFTPARENT      reduce using rule 40 (action -> assign .)
    INI_INT         reduce using rule 40 (action -> assign .)
    INI_FLOAT       reduce using rule 40 (action -> assign .)
    DOTCOMMA        reduce using rule 40 (action -> assign .)
    ADD             reduce using rule 40 (action -> assign .)
    LESS            reduce using rule 40 (action -> assign .)
    SPLIT_BY        reduce using rule 40 (action -> assign .)
    MULT_BY         reduce using rule 40 (action -> assign .)
    TIMES_BY_SAME   reduce using rule 40 (action -> assign .)
    RIGHTKEY        reduce using rule 40 (action -> assign .)


state 68

    (41) action -> expresion_line .

    IF              reduce using rule 41 (action -> expresion_line .)
    WHILE           reduce using rule 41 (action -> expresion_line .)
    AT              reduce using rule 41 (action -> expresion_line .)
    PRINTG          reduce using rule 41 (action -> expresion_line .)
    ID              reduce using rule 41 (action -> expresion_line .)
    RETURN          reduce using rule 41 (action -> expresion_line .)
    LEFTPARENT      reduce using rule 41 (action -> expresion_line .)
    INI_INT         reduce using rule 41 (action -> expresion_line .)
    INI_FLOAT       reduce using rule 41 (action -> expresion_line .)
    DOTCOMMA        reduce using rule 41 (action -> expresion_line .)
    ADD             reduce using rule 41 (action -> expresion_line .)
    LESS            reduce using rule 41 (action -> expresion_line .)
    SPLIT_BY        reduce using rule 41 (action -> expresion_line .)
    MULT_BY         reduce using rule 41 (action -> expresion_line .)
    TIMES_BY_SAME   reduce using rule 41 (action -> expresion_line .)
    RIGHTKEY        reduce using rule 41 (action -> expresion_line .)


state 69

    (42) action -> condition .

    IF              reduce using rule 42 (action -> condition .)
    WHILE           reduce using rule 42 (action -> condition .)
    AT              reduce using rule 42 (action -> condition .)
    PRINTG          reduce using rule 42 (action -> condition .)
    ID              reduce using rule 42 (action -> condition .)
    RETURN          reduce using rule 42 (action -> condition .)
    LEFTPARENT      reduce using rule 42 (action -> condition .)
    INI_INT         reduce using rule 42 (action -> condition .)
    INI_FLOAT       reduce using rule 42 (action -> condition .)
    DOTCOMMA        reduce using rule 42 (action -> condition .)
    ADD             reduce using rule 42 (action -> condition .)
    LESS            reduce using rule 42 (action -> condition .)
    SPLIT_BY        reduce using rule 42 (action -> condition .)
    MULT_BY         reduce using rule 42 (action -> condition .)
    TIMES_BY_SAME   reduce using rule 42 (action -> condition .)
    RIGHTKEY        reduce using rule 42 (action -> condition .)


state 70

    (43) action -> while .

    IF              reduce using rule 43 (action -> while .)
    WHILE           reduce using rule 43 (action -> while .)
    AT              reduce using rule 43 (action -> while .)
    PRINTG          reduce using rule 43 (action -> while .)
    ID              reduce using rule 43 (action -> while .)
    RETURN          reduce using rule 43 (action -> while .)
    LEFTPARENT      reduce using rule 43 (action -> while .)
    INI_INT         reduce using rule 43 (action -> while .)
    INI_FLOAT       reduce using rule 43 (action -> while .)
    DOTCOMMA        reduce using rule 43 (action -> while .)
    ADD             reduce using rule 43 (action -> while .)
    LESS            reduce using rule 43 (action -> while .)
    SPLIT_BY        reduce using rule 43 (action -> while .)
    MULT_BY         reduce using rule 43 (action -> while .)
    TIMES_BY_SAME   reduce using rule 43 (action -> while .)
    RIGHTKEY        reduce using rule 43 (action -> while .)


state 71

    (44) action -> func_call . DOTCOMMA
    (98) expo -> func_call .

  ! shift/reduce conflict for DOTCOMMA resolved as shift
    DOTCOMMA        shift and go to state 94
    TIMES_BY_SAME   reduce using rule 98 (expo -> func_call .)
    SPLIT_BY        reduce using rule 98 (expo -> func_call .)
    MULT_BY         reduce using rule 98 (expo -> func_call .)
    ADD             reduce using rule 98 (expo -> func_call .)
    LESS            reduce using rule 98 (expo -> func_call .)
    IF              reduce using rule 98 (expo -> func_call .)
    WHILE           reduce using rule 98 (expo -> func_call .)
    AT              reduce using rule 98 (expo -> func_call .)
    PRINTG          reduce using rule 98 (expo -> func_call .)
    ID              reduce using rule 98 (expo -> func_call .)
    RETURN          reduce using rule 98 (expo -> func_call .)
    LEFTPARENT      reduce using rule 98 (expo -> func_call .)
    INI_INT         reduce using rule 98 (expo -> func_call .)
    INI_FLOAT       reduce using rule 98 (expo -> func_call .)
    RIGHTKEY        reduce using rule 98 (expo -> func_call .)

  ! DOTCOMMA        [ reduce using rule 98 (expo -> func_call .) ]


state 72

    (45) action -> write .

    IF              reduce using rule 45 (action -> write .)
    WHILE           reduce using rule 45 (action -> write .)
    AT              reduce using rule 45 (action -> write .)
    PRINTG          reduce using rule 45 (action -> write .)
    ID              reduce using rule 45 (action -> write .)
    RETURN          reduce using rule 45 (action -> write .)
    LEFTPARENT      reduce using rule 45 (action -> write .)
    INI_INT         reduce using rule 45 (action -> write .)
    INI_FLOAT       reduce using rule 45 (action -> write .)
    DOTCOMMA        reduce using rule 45 (action -> write .)
    ADD             reduce using rule 45 (action -> write .)
    LESS            reduce using rule 45 (action -> write .)
    SPLIT_BY        reduce using rule 45 (action -> write .)
    MULT_BY         reduce using rule 45 (action -> write .)
    TIMES_BY_SAME   reduce using rule 45 (action -> write .)
    RIGHTKEY        reduce using rule 45 (action -> write .)


state 73

    (46) action -> access_array .
    (107) assign -> access_array . set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (99) expo -> access_array .
    (111) set_appear -> .

  ! reduce/reduce conflict for TIMES_BY_SAME resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for SPLIT_BY resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for MULT_BY resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for ADD resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for LESS resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for IF resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for WHILE resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for AT resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for PRINTG resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for ID resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for RETURN resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for LEFTPARENT resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for INI_INT resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for INI_FLOAT resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for DOTCOMMA resolved using rule 46 (action -> access_array .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 46 (action -> access_array .)
    IF              reduce using rule 46 (action -> access_array .)
    WHILE           reduce using rule 46 (action -> access_array .)
    AT              reduce using rule 46 (action -> access_array .)
    PRINTG          reduce using rule 46 (action -> access_array .)
    ID              reduce using rule 46 (action -> access_array .)
    RETURN          reduce using rule 46 (action -> access_array .)
    LEFTPARENT      reduce using rule 46 (action -> access_array .)
    INI_INT         reduce using rule 46 (action -> access_array .)
    INI_FLOAT       reduce using rule 46 (action -> access_array .)
    DOTCOMMA        reduce using rule 46 (action -> access_array .)
    ADD             reduce using rule 46 (action -> access_array .)
    LESS            reduce using rule 46 (action -> access_array .)
    SPLIT_BY        reduce using rule 46 (action -> access_array .)
    MULT_BY         reduce using rule 46 (action -> access_array .)
    TIMES_BY_SAME   reduce using rule 46 (action -> access_array .)
    RIGHTKEY        reduce using rule 46 (action -> access_array .)
    SET             reduce using rule 111 (set_appear -> .)

  ! TIMES_BY_SAME   [ reduce using rule 99 (expo -> access_array .) ]
  ! SPLIT_BY        [ reduce using rule 99 (expo -> access_array .) ]
  ! MULT_BY         [ reduce using rule 99 (expo -> access_array .) ]
  ! ADD             [ reduce using rule 99 (expo -> access_array .) ]
  ! LESS            [ reduce using rule 99 (expo -> access_array .) ]
  ! IF              [ reduce using rule 99 (expo -> access_array .) ]
  ! WHILE           [ reduce using rule 99 (expo -> access_array .) ]
  ! AT              [ reduce using rule 99 (expo -> access_array .) ]
  ! PRINTG          [ reduce using rule 99 (expo -> access_array .) ]
  ! ID              [ reduce using rule 99 (expo -> access_array .) ]
  ! RETURN          [ reduce using rule 99 (expo -> access_array .) ]
  ! LEFTPARENT      [ reduce using rule 99 (expo -> access_array .) ]
  ! INI_INT         [ reduce using rule 99 (expo -> access_array .) ]
  ! INI_FLOAT       [ reduce using rule 99 (expo -> access_array .) ]
  ! DOTCOMMA        [ reduce using rule 99 (expo -> access_array .) ]
  ! RIGHTKEY        [ reduce using rule 99 (expo -> access_array .) ]

    set_appear                     shift and go to state 95

state 74

    (47) action -> return .

    IF              reduce using rule 47 (action -> return .)
    WHILE           reduce using rule 47 (action -> return .)
    AT              reduce using rule 47 (action -> return .)
    PRINTG          reduce using rule 47 (action -> return .)
    ID              reduce using rule 47 (action -> return .)
    RETURN          reduce using rule 47 (action -> return .)
    LEFTPARENT      reduce using rule 47 (action -> return .)
    INI_INT         reduce using rule 47 (action -> return .)
    INI_FLOAT       reduce using rule 47 (action -> return .)
    DOTCOMMA        reduce using rule 47 (action -> return .)
    ADD             reduce using rule 47 (action -> return .)
    LESS            reduce using rule 47 (action -> return .)
    SPLIT_BY        reduce using rule 47 (action -> return .)
    MULT_BY         reduce using rule 47 (action -> return .)
    TIMES_BY_SAME   reduce using rule 47 (action -> return .)
    RIGHTKEY        reduce using rule 47 (action -> return .)


state 75

    (105) assign -> call_let . set_appear SET set_value
    (106) assign -> call_let . set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (97) expo -> call_let .
    (111) set_appear -> .

    TIMES_BY_SAME   reduce using rule 97 (expo -> call_let .)
    SPLIT_BY        reduce using rule 97 (expo -> call_let .)
    MULT_BY         reduce using rule 97 (expo -> call_let .)
    ADD             reduce using rule 97 (expo -> call_let .)
    LESS            reduce using rule 97 (expo -> call_let .)
    IF              reduce using rule 97 (expo -> call_let .)
    WHILE           reduce using rule 97 (expo -> call_let .)
    AT              reduce using rule 97 (expo -> call_let .)
    PRINTG          reduce using rule 97 (expo -> call_let .)
    ID              reduce using rule 97 (expo -> call_let .)
    RETURN          reduce using rule 97 (expo -> call_let .)
    LEFTPARENT      reduce using rule 97 (expo -> call_let .)
    INI_INT         reduce using rule 97 (expo -> call_let .)
    INI_FLOAT       reduce using rule 97 (expo -> call_let .)
    DOTCOMMA        reduce using rule 97 (expo -> call_let .)
    RIGHTKEY        reduce using rule 97 (expo -> call_let .)
    SET             reduce using rule 111 (set_appear -> .)

    set_appear                     shift and go to state 96

state 76

    (85) expresion_line -> term . term_appear
    (86) expresion_line -> term . term_appear aux_expresion
    (112) term_appear -> .

    ADD             reduce using rule 112 (term_appear -> .)
    LESS            reduce using rule 112 (term_appear -> .)
    IF              reduce using rule 112 (term_appear -> .)
    WHILE           reduce using rule 112 (term_appear -> .)
    AT              reduce using rule 112 (term_appear -> .)
    PRINTG          reduce using rule 112 (term_appear -> .)
    ID              reduce using rule 112 (term_appear -> .)
    RETURN          reduce using rule 112 (term_appear -> .)
    LEFTPARENT      reduce using rule 112 (term_appear -> .)
    INI_INT         reduce using rule 112 (term_appear -> .)
    INI_FLOAT       reduce using rule 112 (term_appear -> .)
    DOTCOMMA        reduce using rule 112 (term_appear -> .)
    SPLIT_BY        reduce using rule 112 (term_appear -> .)
    MULT_BY         reduce using rule 112 (term_appear -> .)
    TIMES_BY_SAME   reduce using rule 112 (term_appear -> .)
    RIGHTKEY        reduce using rule 112 (term_appear -> .)
    RIGHTPARENT     reduce using rule 112 (term_appear -> .)
    COMMA           reduce using rule 112 (term_appear -> .)
    GREATERTN       reduce using rule 112 (term_appear -> .)
    LESSTN          reduce using rule 112 (term_appear -> .)
    SAME            reduce using rule 112 (term_appear -> .)
    NOTSAME         reduce using rule 112 (term_appear -> .)
    LESSSAME        reduce using rule 112 (term_appear -> .)
    MORESAME        reduce using rule 112 (term_appear -> .)
    RIGHTBRACK      reduce using rule 112 (term_appear -> .)

    term_appear                    shift and go to state 97

state 77

    (69) condition -> IF . LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check

    LEFTPARENT      shift and go to state 98


state 78

    (100) parent_aux -> LEFTPARENT . found_init_parent expresion_line RIGHTPARENT found_end_parent
    (102) found_init_parent -> .

    LEFTPARENT      reduce using rule 102 (found_init_parent -> .)
    INI_INT         reduce using rule 102 (found_init_parent -> .)
    INI_FLOAT       reduce using rule 102 (found_init_parent -> .)
    ID              reduce using rule 102 (found_init_parent -> .)
    AT              reduce using rule 102 (found_init_parent -> .)
    RIGHTPARENT     reduce using rule 102 (found_init_parent -> .)
    ADD             reduce using rule 102 (found_init_parent -> .)
    LESS            reduce using rule 102 (found_init_parent -> .)
    SPLIT_BY        reduce using rule 102 (found_init_parent -> .)
    MULT_BY         reduce using rule 102 (found_init_parent -> .)
    TIMES_BY_SAME   reduce using rule 102 (found_init_parent -> .)

    found_init_parent              shift and go to state 99

state 79

    (66) while -> WHILE . while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end
    (68) while_appear -> .

    LEFTPARENT      reduce using rule 68 (while_appear -> .)

    while_appear                   shift and go to state 100

state 80

    (58) func_call -> AT . ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call

    ID              shift and go to state 101


state 81

    (15) access_array -> ID . LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access
    (122) call_let -> ID . check_let_exists
    (127) check_let_exists -> .

    LEFTBRACK       shift and go to state 102
    SET             reduce using rule 127 (check_let_exists -> .)
    TIMES_BY_SAME   reduce using rule 127 (check_let_exists -> .)
    SPLIT_BY        reduce using rule 127 (check_let_exists -> .)
    MULT_BY         reduce using rule 127 (check_let_exists -> .)
    ADD             reduce using rule 127 (check_let_exists -> .)
    LESS            reduce using rule 127 (check_let_exists -> .)
    IF              reduce using rule 127 (check_let_exists -> .)
    WHILE           reduce using rule 127 (check_let_exists -> .)
    AT              reduce using rule 127 (check_let_exists -> .)
    PRINTG          reduce using rule 127 (check_let_exists -> .)
    ID              reduce using rule 127 (check_let_exists -> .)
    RETURN          reduce using rule 127 (check_let_exists -> .)
    LEFTPARENT      reduce using rule 127 (check_let_exists -> .)
    INI_INT         reduce using rule 127 (check_let_exists -> .)
    INI_FLOAT       reduce using rule 127 (check_let_exists -> .)
    DOTCOMMA        reduce using rule 127 (check_let_exists -> .)
    RIGHTKEY        reduce using rule 127 (check_let_exists -> .)

    check_let_exists               shift and go to state 103

state 82

    (51) write -> PRINTG . LEFTPARENT write_found RIGHTPARENT DOTCOMMA

    LEFTPARENT      shift and go to state 104


state 83

    (48) return -> RETURN . expresion_line return_aux DOTCOMMA
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)

    expresion_line                 shift and go to state 105
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 84

    (89) term -> fact . factor_appear
    (90) term -> fact . factor_appear aux_term
    (113) factor_appear -> .

    SPLIT_BY        reduce using rule 113 (factor_appear -> .)
    MULT_BY         reduce using rule 113 (factor_appear -> .)
    ADD             reduce using rule 113 (factor_appear -> .)
    LESS            reduce using rule 113 (factor_appear -> .)
    IF              reduce using rule 113 (factor_appear -> .)
    WHILE           reduce using rule 113 (factor_appear -> .)
    AT              reduce using rule 113 (factor_appear -> .)
    PRINTG          reduce using rule 113 (factor_appear -> .)
    ID              reduce using rule 113 (factor_appear -> .)
    RETURN          reduce using rule 113 (factor_appear -> .)
    LEFTPARENT      reduce using rule 113 (factor_appear -> .)
    INI_INT         reduce using rule 113 (factor_appear -> .)
    INI_FLOAT       reduce using rule 113 (factor_appear -> .)
    DOTCOMMA        reduce using rule 113 (factor_appear -> .)
    TIMES_BY_SAME   reduce using rule 113 (factor_appear -> .)
    RIGHTKEY        reduce using rule 113 (factor_appear -> .)
    RIGHTPARENT     reduce using rule 113 (factor_appear -> .)
    COMMA           reduce using rule 113 (factor_appear -> .)
    GREATERTN       reduce using rule 113 (factor_appear -> .)
    LESSTN          reduce using rule 113 (factor_appear -> .)
    SAME            reduce using rule 113 (factor_appear -> .)
    NOTSAME         reduce using rule 113 (factor_appear -> .)
    LESSSAME        reduce using rule 113 (factor_appear -> .)
    MORESAME        reduce using rule 113 (factor_appear -> .)
    RIGHTBRACK      reduce using rule 113 (factor_appear -> .)

    factor_appear                  shift and go to state 110

state 85

    (93) fact -> expo . expo_appear
    (94) fact -> expo . expo_appear aux_expo
    (114) expo_appear -> .

    TIMES_BY_SAME   reduce using rule 114 (expo_appear -> .)
    SPLIT_BY        reduce using rule 114 (expo_appear -> .)
    MULT_BY         reduce using rule 114 (expo_appear -> .)
    ADD             reduce using rule 114 (expo_appear -> .)
    LESS            reduce using rule 114 (expo_appear -> .)
    IF              reduce using rule 114 (expo_appear -> .)
    WHILE           reduce using rule 114 (expo_appear -> .)
    AT              reduce using rule 114 (expo_appear -> .)
    PRINTG          reduce using rule 114 (expo_appear -> .)
    ID              reduce using rule 114 (expo_appear -> .)
    RETURN          reduce using rule 114 (expo_appear -> .)
    LEFTPARENT      reduce using rule 114 (expo_appear -> .)
    INI_INT         reduce using rule 114 (expo_appear -> .)
    INI_FLOAT       reduce using rule 114 (expo_appear -> .)
    DOTCOMMA        reduce using rule 114 (expo_appear -> .)
    RIGHTKEY        reduce using rule 114 (expo_appear -> .)
    RIGHTPARENT     reduce using rule 114 (expo_appear -> .)
    COMMA           reduce using rule 114 (expo_appear -> .)
    GREATERTN       reduce using rule 114 (expo_appear -> .)
    LESSTN          reduce using rule 114 (expo_appear -> .)
    SAME            reduce using rule 114 (expo_appear -> .)
    NOTSAME         reduce using rule 114 (expo_appear -> .)
    LESSSAME        reduce using rule 114 (expo_appear -> .)
    MORESAME        reduce using rule 114 (expo_appear -> .)
    RIGHTBRACK      reduce using rule 114 (expo_appear -> .)

    expo_appear                    shift and go to state 111

state 86

    (95) expo -> parent_aux .

    TIMES_BY_SAME   reduce using rule 95 (expo -> parent_aux .)
    SPLIT_BY        reduce using rule 95 (expo -> parent_aux .)
    MULT_BY         reduce using rule 95 (expo -> parent_aux .)
    ADD             reduce using rule 95 (expo -> parent_aux .)
    LESS            reduce using rule 95 (expo -> parent_aux .)
    IF              reduce using rule 95 (expo -> parent_aux .)
    WHILE           reduce using rule 95 (expo -> parent_aux .)
    AT              reduce using rule 95 (expo -> parent_aux .)
    PRINTG          reduce using rule 95 (expo -> parent_aux .)
    ID              reduce using rule 95 (expo -> parent_aux .)
    RETURN          reduce using rule 95 (expo -> parent_aux .)
    LEFTPARENT      reduce using rule 95 (expo -> parent_aux .)
    INI_INT         reduce using rule 95 (expo -> parent_aux .)
    INI_FLOAT       reduce using rule 95 (expo -> parent_aux .)
    DOTCOMMA        reduce using rule 95 (expo -> parent_aux .)
    RIGHTKEY        reduce using rule 95 (expo -> parent_aux .)
    RIGHTPARENT     reduce using rule 95 (expo -> parent_aux .)
    COMMA           reduce using rule 95 (expo -> parent_aux .)
    GREATERTN       reduce using rule 95 (expo -> parent_aux .)
    LESSTN          reduce using rule 95 (expo -> parent_aux .)
    SAME            reduce using rule 95 (expo -> parent_aux .)
    NOTSAME         reduce using rule 95 (expo -> parent_aux .)
    LESSSAME        reduce using rule 95 (expo -> parent_aux .)
    MORESAME        reduce using rule 95 (expo -> parent_aux .)
    RIGHTBRACK      reduce using rule 95 (expo -> parent_aux .)


state 87

    (96) expo -> call_lets .

    TIMES_BY_SAME   reduce using rule 96 (expo -> call_lets .)
    SPLIT_BY        reduce using rule 96 (expo -> call_lets .)
    MULT_BY         reduce using rule 96 (expo -> call_lets .)
    ADD             reduce using rule 96 (expo -> call_lets .)
    LESS            reduce using rule 96 (expo -> call_lets .)
    IF              reduce using rule 96 (expo -> call_lets .)
    WHILE           reduce using rule 96 (expo -> call_lets .)
    AT              reduce using rule 96 (expo -> call_lets .)
    PRINTG          reduce using rule 96 (expo -> call_lets .)
    ID              reduce using rule 96 (expo -> call_lets .)
    RETURN          reduce using rule 96 (expo -> call_lets .)
    LEFTPARENT      reduce using rule 96 (expo -> call_lets .)
    INI_INT         reduce using rule 96 (expo -> call_lets .)
    INI_FLOAT       reduce using rule 96 (expo -> call_lets .)
    DOTCOMMA        reduce using rule 96 (expo -> call_lets .)
    RIGHTKEY        reduce using rule 96 (expo -> call_lets .)
    RIGHTPARENT     reduce using rule 96 (expo -> call_lets .)
    COMMA           reduce using rule 96 (expo -> call_lets .)
    GREATERTN       reduce using rule 96 (expo -> call_lets .)
    LESSTN          reduce using rule 96 (expo -> call_lets .)
    SAME            reduce using rule 96 (expo -> call_lets .)
    NOTSAME         reduce using rule 96 (expo -> call_lets .)
    LESSSAME        reduce using rule 96 (expo -> call_lets .)
    MORESAME        reduce using rule 96 (expo -> call_lets .)
    RIGHTBRACK      reduce using rule 96 (expo -> call_lets .)


state 88

    (123) call_lets -> INI_INT . check_global_const_exists
    (125) check_global_const_exists -> . add_operand_const
    (126) add_operand_const -> .

    TIMES_BY_SAME   reduce using rule 126 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 126 (add_operand_const -> .)
    MULT_BY         reduce using rule 126 (add_operand_const -> .)
    ADD             reduce using rule 126 (add_operand_const -> .)
    LESS            reduce using rule 126 (add_operand_const -> .)
    IF              reduce using rule 126 (add_operand_const -> .)
    WHILE           reduce using rule 126 (add_operand_const -> .)
    AT              reduce using rule 126 (add_operand_const -> .)
    PRINTG          reduce using rule 126 (add_operand_const -> .)
    ID              reduce using rule 126 (add_operand_const -> .)
    RETURN          reduce using rule 126 (add_operand_const -> .)
    LEFTPARENT      reduce using rule 126 (add_operand_const -> .)
    INI_INT         reduce using rule 126 (add_operand_const -> .)
    INI_FLOAT       reduce using rule 126 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 126 (add_operand_const -> .)
    RIGHTKEY        reduce using rule 126 (add_operand_const -> .)
    RIGHTPARENT     reduce using rule 126 (add_operand_const -> .)
    COMMA           reduce using rule 126 (add_operand_const -> .)
    GREATERTN       reduce using rule 126 (add_operand_const -> .)
    LESSTN          reduce using rule 126 (add_operand_const -> .)
    SAME            reduce using rule 126 (add_operand_const -> .)
    NOTSAME         reduce using rule 126 (add_operand_const -> .)
    LESSSAME        reduce using rule 126 (add_operand_const -> .)
    MORESAME        reduce using rule 126 (add_operand_const -> .)
    RIGHTBRACK      reduce using rule 126 (add_operand_const -> .)

    check_global_const_exists      shift and go to state 112
    add_operand_const              shift and go to state 113

state 89

    (124) call_lets -> INI_FLOAT . check_global_const_exists
    (125) check_global_const_exists -> . add_operand_const
    (126) add_operand_const -> .

    TIMES_BY_SAME   reduce using rule 126 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 126 (add_operand_const -> .)
    MULT_BY         reduce using rule 126 (add_operand_const -> .)
    ADD             reduce using rule 126 (add_operand_const -> .)
    LESS            reduce using rule 126 (add_operand_const -> .)
    IF              reduce using rule 126 (add_operand_const -> .)
    WHILE           reduce using rule 126 (add_operand_const -> .)
    AT              reduce using rule 126 (add_operand_const -> .)
    PRINTG          reduce using rule 126 (add_operand_const -> .)
    ID              reduce using rule 126 (add_operand_const -> .)
    RETURN          reduce using rule 126 (add_operand_const -> .)
    LEFTPARENT      reduce using rule 126 (add_operand_const -> .)
    INI_INT         reduce using rule 126 (add_operand_const -> .)
    INI_FLOAT       reduce using rule 126 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 126 (add_operand_const -> .)
    RIGHTKEY        reduce using rule 126 (add_operand_const -> .)
    RIGHTPARENT     reduce using rule 126 (add_operand_const -> .)
    COMMA           reduce using rule 126 (add_operand_const -> .)
    GREATERTN       reduce using rule 126 (add_operand_const -> .)
    LESSTN          reduce using rule 126 (add_operand_const -> .)
    SAME            reduce using rule 126 (add_operand_const -> .)
    NOTSAME         reduce using rule 126 (add_operand_const -> .)
    LESSSAME        reduce using rule 126 (add_operand_const -> .)
    MORESAME        reduce using rule 126 (add_operand_const -> .)
    RIGHTBRACK      reduce using rule 126 (add_operand_const -> .)

    check_global_const_exists      shift and go to state 114
    add_operand_const              shift and go to state 113

state 90

    (7) lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .

    FUNC            reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    $end            reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    IF              reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    WHILE           reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    AT              reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    PRINTG          reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    ID              reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    RETURN          reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    LEFTPARENT      reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    INI_INT         reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    INI_FLOAT       reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    RIGHTKEY        reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    DOTCOMMA        reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    ADD             reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    LESS            reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    SPLIT_BY        reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    MULT_BY         reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)
    TIMES_BY_SAME   reduce using rule 7 (lets -> LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets .)


state 91

    (118) add_dimension -> INI_INT array_start INI_INT array_end COMMA . extra_dimension_found add_dimension
    (116) extra_dimension_found -> .

    INI_INT         reduce using rule 116 (extra_dimension_found -> .)

    extra_dimension_found          shift and go to state 115

state 92

    (36) func_code -> LEFTKEY func_code_start lets func_code_aux RIGHTKEY . end_func
    (37) end_func -> .

    FUNC            reduce using rule 37 (end_func -> .)
    $end            reduce using rule 37 (end_func -> .)

    end_func                       shift and go to state 116

state 93

    (38) func_code_aux -> action func_code_aux .

    RIGHTKEY        reduce using rule 38 (func_code_aux -> action func_code_aux .)


state 94

    (44) action -> func_call DOTCOMMA .

    IF              reduce using rule 44 (action -> func_call DOTCOMMA .)
    WHILE           reduce using rule 44 (action -> func_call DOTCOMMA .)
    AT              reduce using rule 44 (action -> func_call DOTCOMMA .)
    PRINTG          reduce using rule 44 (action -> func_call DOTCOMMA .)
    ID              reduce using rule 44 (action -> func_call DOTCOMMA .)
    RETURN          reduce using rule 44 (action -> func_call DOTCOMMA .)
    LEFTPARENT      reduce using rule 44 (action -> func_call DOTCOMMA .)
    INI_INT         reduce using rule 44 (action -> func_call DOTCOMMA .)
    INI_FLOAT       reduce using rule 44 (action -> func_call DOTCOMMA .)
    DOTCOMMA        reduce using rule 44 (action -> func_call DOTCOMMA .)
    ADD             reduce using rule 44 (action -> func_call DOTCOMMA .)
    LESS            reduce using rule 44 (action -> func_call DOTCOMMA .)
    SPLIT_BY        reduce using rule 44 (action -> func_call DOTCOMMA .)
    MULT_BY         reduce using rule 44 (action -> func_call DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 44 (action -> func_call DOTCOMMA .)
    RIGHTKEY        reduce using rule 44 (action -> func_call DOTCOMMA .)


state 95

    (107) assign -> access_array set_appear . SET expresion_line seen_final_asignacion DOTCOMMA

    SET             shift and go to state 117


state 96

    (105) assign -> call_let set_appear . SET set_value
    (106) assign -> call_let set_appear . SET expresion_line seen_final_asignacion DOTCOMMA

    SET             shift and go to state 118


state 97

    (85) expresion_line -> term term_appear .
    (86) expresion_line -> term term_appear . aux_expresion
    (87) aux_expresion -> . ADD add_operator expresion_line
    (88) aux_expresion -> . LESS add_operator expresion_line

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    IF              reduce using rule 85 (expresion_line -> term term_appear .)
    WHILE           reduce using rule 85 (expresion_line -> term term_appear .)
    AT              reduce using rule 85 (expresion_line -> term term_appear .)
    PRINTG          reduce using rule 85 (expresion_line -> term term_appear .)
    ID              reduce using rule 85 (expresion_line -> term term_appear .)
    RETURN          reduce using rule 85 (expresion_line -> term term_appear .)
    LEFTPARENT      reduce using rule 85 (expresion_line -> term term_appear .)
    INI_INT         reduce using rule 85 (expresion_line -> term term_appear .)
    INI_FLOAT       reduce using rule 85 (expresion_line -> term term_appear .)
    DOTCOMMA        reduce using rule 85 (expresion_line -> term term_appear .)
    SPLIT_BY        reduce using rule 85 (expresion_line -> term term_appear .)
    MULT_BY         reduce using rule 85 (expresion_line -> term term_appear .)
    TIMES_BY_SAME   reduce using rule 85 (expresion_line -> term term_appear .)
    RIGHTKEY        reduce using rule 85 (expresion_line -> term term_appear .)
    RIGHTPARENT     reduce using rule 85 (expresion_line -> term term_appear .)
    COMMA           reduce using rule 85 (expresion_line -> term term_appear .)
    GREATERTN       reduce using rule 85 (expresion_line -> term term_appear .)
    LESSTN          reduce using rule 85 (expresion_line -> term term_appear .)
    SAME            reduce using rule 85 (expresion_line -> term term_appear .)
    NOTSAME         reduce using rule 85 (expresion_line -> term term_appear .)
    LESSSAME        reduce using rule 85 (expresion_line -> term term_appear .)
    MORESAME        reduce using rule 85 (expresion_line -> term term_appear .)
    RIGHTBRACK      reduce using rule 85 (expresion_line -> term term_appear .)
    ADD             shift and go to state 120
    LESS            shift and go to state 121

  ! ADD             [ reduce using rule 85 (expresion_line -> term term_appear .) ]
  ! LESS            [ reduce using rule 85 (expresion_line -> term term_appear .) ]

    aux_expresion                  shift and go to state 119

state 98

    (69) condition -> IF LEFTPARENT . found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check
    (102) found_init_parent -> .

    LEFTPARENT      reduce using rule 102 (found_init_parent -> .)
    INI_INT         reduce using rule 102 (found_init_parent -> .)
    INI_FLOAT       reduce using rule 102 (found_init_parent -> .)
    ID              reduce using rule 102 (found_init_parent -> .)
    AT              reduce using rule 102 (found_init_parent -> .)
    RIGHTPARENT     reduce using rule 102 (found_init_parent -> .)
    GREATERTN       reduce using rule 102 (found_init_parent -> .)
    LESSTN          reduce using rule 102 (found_init_parent -> .)
    SAME            reduce using rule 102 (found_init_parent -> .)
    NOTSAME         reduce using rule 102 (found_init_parent -> .)
    LESSSAME        reduce using rule 102 (found_init_parent -> .)
    MORESAME        reduce using rule 102 (found_init_parent -> .)
    ADD             reduce using rule 102 (found_init_parent -> .)
    LESS            reduce using rule 102 (found_init_parent -> .)
    SPLIT_BY        reduce using rule 102 (found_init_parent -> .)
    MULT_BY         reduce using rule 102 (found_init_parent -> .)
    TIMES_BY_SAME   reduce using rule 102 (found_init_parent -> .)

    found_init_parent              shift and go to state 122

state 99

    (100) parent_aux -> LEFTPARENT found_init_parent . expresion_line RIGHTPARENT found_end_parent
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    expresion_line                 shift and go to state 123
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 100

    (66) while -> WHILE while_appear . LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end

    LEFTPARENT      shift and go to state 124


state 101

    (58) func_call -> AT ID . func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (60) func_call_ID -> .

    LEFTPARENT      reduce using rule 60 (func_call_ID -> .)

    func_call_ID                   shift and go to state 125

state 102

    (15) access_array -> ID LEFTBRACK . access_array_found array_expresion RIGHTBRACK end_array_access
    (16) access_array_found -> .

    LEFTPARENT      reduce using rule 16 (access_array_found -> .)
    INI_INT         reduce using rule 16 (access_array_found -> .)
    INI_FLOAT       reduce using rule 16 (access_array_found -> .)
    ID              reduce using rule 16 (access_array_found -> .)
    AT              reduce using rule 16 (access_array_found -> .)
    RIGHTBRACK      reduce using rule 16 (access_array_found -> .)
    COMMA           reduce using rule 16 (access_array_found -> .)
    ADD             reduce using rule 16 (access_array_found -> .)
    LESS            reduce using rule 16 (access_array_found -> .)
    SPLIT_BY        reduce using rule 16 (access_array_found -> .)
    MULT_BY         reduce using rule 16 (access_array_found -> .)
    TIMES_BY_SAME   reduce using rule 16 (access_array_found -> .)

    access_array_found             shift and go to state 126

state 103

    (122) call_let -> ID check_let_exists .

    SET             reduce using rule 122 (call_let -> ID check_let_exists .)
    TIMES_BY_SAME   reduce using rule 122 (call_let -> ID check_let_exists .)
    SPLIT_BY        reduce using rule 122 (call_let -> ID check_let_exists .)
    MULT_BY         reduce using rule 122 (call_let -> ID check_let_exists .)
    ADD             reduce using rule 122 (call_let -> ID check_let_exists .)
    LESS            reduce using rule 122 (call_let -> ID check_let_exists .)
    IF              reduce using rule 122 (call_let -> ID check_let_exists .)
    WHILE           reduce using rule 122 (call_let -> ID check_let_exists .)
    AT              reduce using rule 122 (call_let -> ID check_let_exists .)
    PRINTG          reduce using rule 122 (call_let -> ID check_let_exists .)
    ID              reduce using rule 122 (call_let -> ID check_let_exists .)
    RETURN          reduce using rule 122 (call_let -> ID check_let_exists .)
    LEFTPARENT      reduce using rule 122 (call_let -> ID check_let_exists .)
    INI_INT         reduce using rule 122 (call_let -> ID check_let_exists .)
    INI_FLOAT       reduce using rule 122 (call_let -> ID check_let_exists .)
    DOTCOMMA        reduce using rule 122 (call_let -> ID check_let_exists .)
    RIGHTKEY        reduce using rule 122 (call_let -> ID check_let_exists .)
    RIGHTPARENT     reduce using rule 122 (call_let -> ID check_let_exists .)
    COMMA           reduce using rule 122 (call_let -> ID check_let_exists .)
    GREATERTN       reduce using rule 122 (call_let -> ID check_let_exists .)
    LESSTN          reduce using rule 122 (call_let -> ID check_let_exists .)
    SAME            reduce using rule 122 (call_let -> ID check_let_exists .)
    NOTSAME         reduce using rule 122 (call_let -> ID check_let_exists .)
    LESSSAME        reduce using rule 122 (call_let -> ID check_let_exists .)
    MORESAME        reduce using rule 122 (call_let -> ID check_let_exists .)
    RIGHTBRACK      reduce using rule 122 (call_let -> ID check_let_exists .)


state 104

    (51) write -> PRINTG LEFTPARENT . write_found RIGHTPARENT DOTCOMMA
    (52) write_found -> . write_found_aux
    (53) write_found -> . write_found_aux COMMA write_found
    (54) write_found_aux -> . expresion_line print_exp
    (55) write_found_aux -> . INI_STRING string_appear print_exp
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    INI_STRING      shift and go to state 130
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    write_found                    shift and go to state 127
    write_found_aux                shift and go to state 128
    expresion_line                 shift and go to state 129
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 105

    (48) return -> RETURN expresion_line . return_aux DOTCOMMA
    (50) return_aux -> .

    DOTCOMMA        reduce using rule 50 (return_aux -> .)

    return_aux                     shift and go to state 131

state 106

    (97) expo -> call_let .

    TIMES_BY_SAME   reduce using rule 97 (expo -> call_let .)
    SPLIT_BY        reduce using rule 97 (expo -> call_let .)
    MULT_BY         reduce using rule 97 (expo -> call_let .)
    ADD             reduce using rule 97 (expo -> call_let .)
    LESS            reduce using rule 97 (expo -> call_let .)
    DOTCOMMA        reduce using rule 97 (expo -> call_let .)
    RIGHTPARENT     reduce using rule 97 (expo -> call_let .)
    COMMA           reduce using rule 97 (expo -> call_let .)
    GREATERTN       reduce using rule 97 (expo -> call_let .)
    LESSTN          reduce using rule 97 (expo -> call_let .)
    SAME            reduce using rule 97 (expo -> call_let .)
    NOTSAME         reduce using rule 97 (expo -> call_let .)
    LESSSAME        reduce using rule 97 (expo -> call_let .)
    MORESAME        reduce using rule 97 (expo -> call_let .)
    RIGHTBRACK      reduce using rule 97 (expo -> call_let .)
    IF              reduce using rule 97 (expo -> call_let .)
    WHILE           reduce using rule 97 (expo -> call_let .)
    AT              reduce using rule 97 (expo -> call_let .)
    PRINTG          reduce using rule 97 (expo -> call_let .)
    ID              reduce using rule 97 (expo -> call_let .)
    RETURN          reduce using rule 97 (expo -> call_let .)
    LEFTPARENT      reduce using rule 97 (expo -> call_let .)
    INI_INT         reduce using rule 97 (expo -> call_let .)
    INI_FLOAT       reduce using rule 97 (expo -> call_let .)
    RIGHTKEY        reduce using rule 97 (expo -> call_let .)


state 107

    (98) expo -> func_call .

    TIMES_BY_SAME   reduce using rule 98 (expo -> func_call .)
    SPLIT_BY        reduce using rule 98 (expo -> func_call .)
    MULT_BY         reduce using rule 98 (expo -> func_call .)
    ADD             reduce using rule 98 (expo -> func_call .)
    LESS            reduce using rule 98 (expo -> func_call .)
    DOTCOMMA        reduce using rule 98 (expo -> func_call .)
    RIGHTPARENT     reduce using rule 98 (expo -> func_call .)
    COMMA           reduce using rule 98 (expo -> func_call .)
    GREATERTN       reduce using rule 98 (expo -> func_call .)
    LESSTN          reduce using rule 98 (expo -> func_call .)
    SAME            reduce using rule 98 (expo -> func_call .)
    NOTSAME         reduce using rule 98 (expo -> func_call .)
    LESSSAME        reduce using rule 98 (expo -> func_call .)
    MORESAME        reduce using rule 98 (expo -> func_call .)
    RIGHTBRACK      reduce using rule 98 (expo -> func_call .)
    IF              reduce using rule 98 (expo -> func_call .)
    WHILE           reduce using rule 98 (expo -> func_call .)
    AT              reduce using rule 98 (expo -> func_call .)
    PRINTG          reduce using rule 98 (expo -> func_call .)
    ID              reduce using rule 98 (expo -> func_call .)
    RETURN          reduce using rule 98 (expo -> func_call .)
    LEFTPARENT      reduce using rule 98 (expo -> func_call .)
    INI_INT         reduce using rule 98 (expo -> func_call .)
    INI_FLOAT       reduce using rule 98 (expo -> func_call .)
    RIGHTKEY        reduce using rule 98 (expo -> func_call .)


state 108

    (99) expo -> access_array .

    TIMES_BY_SAME   reduce using rule 99 (expo -> access_array .)
    SPLIT_BY        reduce using rule 99 (expo -> access_array .)
    MULT_BY         reduce using rule 99 (expo -> access_array .)
    ADD             reduce using rule 99 (expo -> access_array .)
    LESS            reduce using rule 99 (expo -> access_array .)
    DOTCOMMA        reduce using rule 99 (expo -> access_array .)
    RIGHTPARENT     reduce using rule 99 (expo -> access_array .)
    COMMA           reduce using rule 99 (expo -> access_array .)
    GREATERTN       reduce using rule 99 (expo -> access_array .)
    LESSTN          reduce using rule 99 (expo -> access_array .)
    SAME            reduce using rule 99 (expo -> access_array .)
    NOTSAME         reduce using rule 99 (expo -> access_array .)
    LESSSAME        reduce using rule 99 (expo -> access_array .)
    MORESAME        reduce using rule 99 (expo -> access_array .)
    RIGHTBRACK      reduce using rule 99 (expo -> access_array .)
    IF              reduce using rule 99 (expo -> access_array .)
    WHILE           reduce using rule 99 (expo -> access_array .)
    AT              reduce using rule 99 (expo -> access_array .)
    PRINTG          reduce using rule 99 (expo -> access_array .)
    ID              reduce using rule 99 (expo -> access_array .)
    RETURN          reduce using rule 99 (expo -> access_array .)
    LEFTPARENT      reduce using rule 99 (expo -> access_array .)
    INI_INT         reduce using rule 99 (expo -> access_array .)
    INI_FLOAT       reduce using rule 99 (expo -> access_array .)
    RIGHTKEY        reduce using rule 99 (expo -> access_array .)


state 109

    (122) call_let -> ID . check_let_exists
    (15) access_array -> ID . LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access
    (127) check_let_exists -> .

    LEFTBRACK       shift and go to state 102
    TIMES_BY_SAME   reduce using rule 127 (check_let_exists -> .)
    SPLIT_BY        reduce using rule 127 (check_let_exists -> .)
    MULT_BY         reduce using rule 127 (check_let_exists -> .)
    ADD             reduce using rule 127 (check_let_exists -> .)
    LESS            reduce using rule 127 (check_let_exists -> .)
    DOTCOMMA        reduce using rule 127 (check_let_exists -> .)
    RIGHTPARENT     reduce using rule 127 (check_let_exists -> .)
    COMMA           reduce using rule 127 (check_let_exists -> .)
    GREATERTN       reduce using rule 127 (check_let_exists -> .)
    LESSTN          reduce using rule 127 (check_let_exists -> .)
    SAME            reduce using rule 127 (check_let_exists -> .)
    NOTSAME         reduce using rule 127 (check_let_exists -> .)
    LESSSAME        reduce using rule 127 (check_let_exists -> .)
    MORESAME        reduce using rule 127 (check_let_exists -> .)
    RIGHTBRACK      reduce using rule 127 (check_let_exists -> .)
    IF              reduce using rule 127 (check_let_exists -> .)
    WHILE           reduce using rule 127 (check_let_exists -> .)
    AT              reduce using rule 127 (check_let_exists -> .)
    PRINTG          reduce using rule 127 (check_let_exists -> .)
    ID              reduce using rule 127 (check_let_exists -> .)
    RETURN          reduce using rule 127 (check_let_exists -> .)
    LEFTPARENT      reduce using rule 127 (check_let_exists -> .)
    INI_INT         reduce using rule 127 (check_let_exists -> .)
    INI_FLOAT       reduce using rule 127 (check_let_exists -> .)
    RIGHTKEY        reduce using rule 127 (check_let_exists -> .)

    check_let_exists               shift and go to state 103

state 110

    (89) term -> fact factor_appear .
    (90) term -> fact factor_appear . aux_term
    (91) aux_term -> . SPLIT_BY add_operator term
    (92) aux_term -> . MULT_BY add_operator term

  ! shift/reduce conflict for SPLIT_BY resolved as shift
  ! shift/reduce conflict for MULT_BY resolved as shift
    ADD             reduce using rule 89 (term -> fact factor_appear .)
    LESS            reduce using rule 89 (term -> fact factor_appear .)
    IF              reduce using rule 89 (term -> fact factor_appear .)
    WHILE           reduce using rule 89 (term -> fact factor_appear .)
    AT              reduce using rule 89 (term -> fact factor_appear .)
    PRINTG          reduce using rule 89 (term -> fact factor_appear .)
    ID              reduce using rule 89 (term -> fact factor_appear .)
    RETURN          reduce using rule 89 (term -> fact factor_appear .)
    LEFTPARENT      reduce using rule 89 (term -> fact factor_appear .)
    INI_INT         reduce using rule 89 (term -> fact factor_appear .)
    INI_FLOAT       reduce using rule 89 (term -> fact factor_appear .)
    DOTCOMMA        reduce using rule 89 (term -> fact factor_appear .)
    TIMES_BY_SAME   reduce using rule 89 (term -> fact factor_appear .)
    RIGHTKEY        reduce using rule 89 (term -> fact factor_appear .)
    RIGHTPARENT     reduce using rule 89 (term -> fact factor_appear .)
    COMMA           reduce using rule 89 (term -> fact factor_appear .)
    GREATERTN       reduce using rule 89 (term -> fact factor_appear .)
    LESSTN          reduce using rule 89 (term -> fact factor_appear .)
    SAME            reduce using rule 89 (term -> fact factor_appear .)
    NOTSAME         reduce using rule 89 (term -> fact factor_appear .)
    LESSSAME        reduce using rule 89 (term -> fact factor_appear .)
    MORESAME        reduce using rule 89 (term -> fact factor_appear .)
    RIGHTBRACK      reduce using rule 89 (term -> fact factor_appear .)
    SPLIT_BY        shift and go to state 133
    MULT_BY         shift and go to state 134

  ! SPLIT_BY        [ reduce using rule 89 (term -> fact factor_appear .) ]
  ! MULT_BY         [ reduce using rule 89 (term -> fact factor_appear .) ]

    aux_term                       shift and go to state 132

state 111

    (93) fact -> expo expo_appear .
    (94) fact -> expo expo_appear . aux_expo
    (104) aux_expo -> . TIMES_BY_SAME add_operator fact

  ! shift/reduce conflict for TIMES_BY_SAME resolved as shift
    SPLIT_BY        reduce using rule 93 (fact -> expo expo_appear .)
    MULT_BY         reduce using rule 93 (fact -> expo expo_appear .)
    ADD             reduce using rule 93 (fact -> expo expo_appear .)
    LESS            reduce using rule 93 (fact -> expo expo_appear .)
    IF              reduce using rule 93 (fact -> expo expo_appear .)
    WHILE           reduce using rule 93 (fact -> expo expo_appear .)
    AT              reduce using rule 93 (fact -> expo expo_appear .)
    PRINTG          reduce using rule 93 (fact -> expo expo_appear .)
    ID              reduce using rule 93 (fact -> expo expo_appear .)
    RETURN          reduce using rule 93 (fact -> expo expo_appear .)
    LEFTPARENT      reduce using rule 93 (fact -> expo expo_appear .)
    INI_INT         reduce using rule 93 (fact -> expo expo_appear .)
    INI_FLOAT       reduce using rule 93 (fact -> expo expo_appear .)
    DOTCOMMA        reduce using rule 93 (fact -> expo expo_appear .)
    RIGHTKEY        reduce using rule 93 (fact -> expo expo_appear .)
    RIGHTPARENT     reduce using rule 93 (fact -> expo expo_appear .)
    COMMA           reduce using rule 93 (fact -> expo expo_appear .)
    GREATERTN       reduce using rule 93 (fact -> expo expo_appear .)
    LESSTN          reduce using rule 93 (fact -> expo expo_appear .)
    SAME            reduce using rule 93 (fact -> expo expo_appear .)
    NOTSAME         reduce using rule 93 (fact -> expo expo_appear .)
    LESSSAME        reduce using rule 93 (fact -> expo expo_appear .)
    MORESAME        reduce using rule 93 (fact -> expo expo_appear .)
    RIGHTBRACK      reduce using rule 93 (fact -> expo expo_appear .)
    TIMES_BY_SAME   shift and go to state 136

  ! TIMES_BY_SAME   [ reduce using rule 93 (fact -> expo expo_appear .) ]

    aux_expo                       shift and go to state 135

state 112

    (123) call_lets -> INI_INT check_global_const_exists .

    TIMES_BY_SAME   reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    SPLIT_BY        reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    MULT_BY         reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    ADD             reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    LESS            reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    IF              reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    WHILE           reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    AT              reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    PRINTG          reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    ID              reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    RETURN          reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    LEFTPARENT      reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    INI_INT         reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    INI_FLOAT       reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    DOTCOMMA        reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTKEY        reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTPARENT     reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    COMMA           reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    GREATERTN       reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    LESSTN          reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    SAME            reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    NOTSAME         reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    LESSSAME        reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    MORESAME        reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)
    RIGHTBRACK      reduce using rule 123 (call_lets -> INI_INT check_global_const_exists .)


state 113

    (125) check_global_const_exists -> add_operand_const .

    TIMES_BY_SAME   reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    SPLIT_BY        reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    MULT_BY         reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    ADD             reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    LESS            reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    IF              reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    WHILE           reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    AT              reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    PRINTG          reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    ID              reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    RETURN          reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    LEFTPARENT      reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    INI_INT         reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    INI_FLOAT       reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    DOTCOMMA        reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    RIGHTKEY        reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    RIGHTPARENT     reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    COMMA           reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    GREATERTN       reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    LESSTN          reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    SAME            reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    NOTSAME         reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    LESSSAME        reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    MORESAME        reduce using rule 125 (check_global_const_exists -> add_operand_const .)
    RIGHTBRACK      reduce using rule 125 (check_global_const_exists -> add_operand_const .)


state 114

    (124) call_lets -> INI_FLOAT check_global_const_exists .

    TIMES_BY_SAME   reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    SPLIT_BY        reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    MULT_BY         reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    ADD             reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESS            reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    IF              reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    WHILE           reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    AT              reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    PRINTG          reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    ID              reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    RETURN          reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    LEFTPARENT      reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    INI_INT         reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    INI_FLOAT       reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    DOTCOMMA        reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTKEY        reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTPARENT     reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    COMMA           reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    GREATERTN       reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESSTN          reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    SAME            reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    NOTSAME         reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    LESSSAME        reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    MORESAME        reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)
    RIGHTBRACK      reduce using rule 124 (call_lets -> INI_FLOAT check_global_const_exists .)


state 115

    (118) add_dimension -> INI_INT array_start INI_INT array_end COMMA extra_dimension_found . add_dimension
    (117) add_dimension -> . INI_INT array_start INI_INT array_end
    (118) add_dimension -> . INI_INT array_start INI_INT array_end COMMA extra_dimension_found add_dimension

    INI_INT         shift and go to state 50

    add_dimension                  shift and go to state 137

state 116

    (36) func_code -> LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func .

    FUNC            reduce using rule 36 (func_code -> LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func .)
    $end            reduce using rule 36 (func_code -> LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func .)


state 117

    (107) assign -> access_array set_appear SET . expresion_line seen_final_asignacion DOTCOMMA
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)

    access_array                   shift and go to state 108
    expresion_line                 shift and go to state 138
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107

state 118

    (105) assign -> call_let set_appear SET . set_value
    (106) assign -> call_let set_appear SET . expresion_line seen_final_asignacion DOTCOMMA
    (128) set_value -> . INI_INT aux_int_check append_operand DOTCOMMA
    (129) set_value -> . INI_FLOAT aux_float_check append_operand DOTCOMMA
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    INI_INT         shift and go to state 141
    INI_FLOAT       shift and go to state 142
    LEFTPARENT      shift and go to state 78
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)

    call_let                       shift and go to state 106
    set_value                      shift and go to state 139
    expresion_line                 shift and go to state 140
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 119

    (86) expresion_line -> term term_appear aux_expresion .

    IF              reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    WHILE           reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    AT              reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    PRINTG          reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    ID              reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    RETURN          reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    LEFTPARENT      reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    INI_INT         reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    INI_FLOAT       reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    DOTCOMMA        reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    ADD             reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    LESS            reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    SPLIT_BY        reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    MULT_BY         reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    TIMES_BY_SAME   reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    RIGHTKEY        reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    RIGHTPARENT     reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    COMMA           reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    GREATERTN       reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    LESSTN          reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    SAME            reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    NOTSAME         reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    LESSSAME        reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    MORESAME        reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)
    RIGHTBRACK      reduce using rule 86 (expresion_line -> term term_appear aux_expresion .)


state 120

    (87) aux_expresion -> ADD . add_operator expresion_line
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    IF              reduce using rule 110 (add_operator -> .)
    WHILE           reduce using rule 110 (add_operator -> .)
    PRINTG          reduce using rule 110 (add_operator -> .)
    RETURN          reduce using rule 110 (add_operator -> .)
    DOTCOMMA        reduce using rule 110 (add_operator -> .)
    RIGHTKEY        reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)
    COMMA           reduce using rule 110 (add_operator -> .)
    GREATERTN       reduce using rule 110 (add_operator -> .)
    LESSTN          reduce using rule 110 (add_operator -> .)
    SAME            reduce using rule 110 (add_operator -> .)
    NOTSAME         reduce using rule 110 (add_operator -> .)
    LESSSAME        reduce using rule 110 (add_operator -> .)
    MORESAME        reduce using rule 110 (add_operator -> .)
    RIGHTBRACK      reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 143

state 121

    (88) aux_expresion -> LESS . add_operator expresion_line
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    IF              reduce using rule 110 (add_operator -> .)
    WHILE           reduce using rule 110 (add_operator -> .)
    PRINTG          reduce using rule 110 (add_operator -> .)
    RETURN          reduce using rule 110 (add_operator -> .)
    DOTCOMMA        reduce using rule 110 (add_operator -> .)
    RIGHTKEY        reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)
    COMMA           reduce using rule 110 (add_operator -> .)
    GREATERTN       reduce using rule 110 (add_operator -> .)
    LESSTN          reduce using rule 110 (add_operator -> .)
    SAME            reduce using rule 110 (add_operator -> .)
    NOTSAME         reduce using rule 110 (add_operator -> .)
    LESSSAME        reduce using rule 110 (add_operator -> .)
    MORESAME        reduce using rule 110 (add_operator -> .)
    RIGHTBRACK      reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 144

state 122

    (69) condition -> IF LEFTPARENT found_init_parent . condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check
    (83) condition_expresion -> . expresion_line condition_signs expresion_line condtion_appear
    (84) condition_expresion -> . expresion_line condtion_appear
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    condition_expresion            shift and go to state 145
    expresion_line                 shift and go to state 146
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 123

    (100) parent_aux -> LEFTPARENT found_init_parent expresion_line . RIGHTPARENT found_end_parent

    RIGHTPARENT     shift and go to state 147


state 124

    (66) while -> WHILE while_appear LEFTPARENT . condition_expresion RIGHTPARENT right_parent_condition condition_code while_end
    (83) condition_expresion -> . expresion_line condition_signs expresion_line condtion_appear
    (84) condition_expresion -> . expresion_line condtion_appear
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    condition_expresion            shift and go to state 148
    expresion_line                 shift and go to state 146
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 125

    (58) func_call -> AT ID func_call_ID . LEFTPARENT func_calls_params RIGHTPARENT end_func_call

    LEFTPARENT      shift and go to state 149


state 126

    (15) access_array -> ID LEFTBRACK access_array_found . array_expresion RIGHTBRACK end_array_access
    (18) array_expresion -> . array_expresion_line array_expresion_helper
    (19) array_expresion -> . array_expresion_line array_expresion_helper COMMA array_comma_access array_expresion
    (20) array_expresion_line -> . expresion_line
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

    array_expresion                shift and go to state 150
    array_expresion_line           shift and go to state 151
    expresion_line                 shift and go to state 152
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 127

    (51) write -> PRINTG LEFTPARENT write_found . RIGHTPARENT DOTCOMMA

    RIGHTPARENT     shift and go to state 153


state 128

    (52) write_found -> write_found_aux .
    (53) write_found -> write_found_aux . COMMA write_found

    RIGHTPARENT     reduce using rule 52 (write_found -> write_found_aux .)
    COMMA           shift and go to state 154


state 129

    (54) write_found_aux -> expresion_line . print_exp
    (56) print_exp -> .

    COMMA           reduce using rule 56 (print_exp -> .)
    RIGHTPARENT     reduce using rule 56 (print_exp -> .)

    print_exp                      shift and go to state 155

state 130

    (55) write_found_aux -> INI_STRING . string_appear print_exp
    (57) string_appear -> .

    COMMA           reduce using rule 57 (string_appear -> .)
    RIGHTPARENT     reduce using rule 57 (string_appear -> .)

    string_appear                  shift and go to state 156

state 131

    (48) return -> RETURN expresion_line return_aux . DOTCOMMA

    DOTCOMMA        shift and go to state 157


state 132

    (90) term -> fact factor_appear aux_term .

    ADD             reduce using rule 90 (term -> fact factor_appear aux_term .)
    LESS            reduce using rule 90 (term -> fact factor_appear aux_term .)
    IF              reduce using rule 90 (term -> fact factor_appear aux_term .)
    WHILE           reduce using rule 90 (term -> fact factor_appear aux_term .)
    AT              reduce using rule 90 (term -> fact factor_appear aux_term .)
    PRINTG          reduce using rule 90 (term -> fact factor_appear aux_term .)
    ID              reduce using rule 90 (term -> fact factor_appear aux_term .)
    RETURN          reduce using rule 90 (term -> fact factor_appear aux_term .)
    LEFTPARENT      reduce using rule 90 (term -> fact factor_appear aux_term .)
    INI_INT         reduce using rule 90 (term -> fact factor_appear aux_term .)
    INI_FLOAT       reduce using rule 90 (term -> fact factor_appear aux_term .)
    DOTCOMMA        reduce using rule 90 (term -> fact factor_appear aux_term .)
    SPLIT_BY        reduce using rule 90 (term -> fact factor_appear aux_term .)
    MULT_BY         reduce using rule 90 (term -> fact factor_appear aux_term .)
    TIMES_BY_SAME   reduce using rule 90 (term -> fact factor_appear aux_term .)
    RIGHTKEY        reduce using rule 90 (term -> fact factor_appear aux_term .)
    RIGHTPARENT     reduce using rule 90 (term -> fact factor_appear aux_term .)
    COMMA           reduce using rule 90 (term -> fact factor_appear aux_term .)
    GREATERTN       reduce using rule 90 (term -> fact factor_appear aux_term .)
    LESSTN          reduce using rule 90 (term -> fact factor_appear aux_term .)
    SAME            reduce using rule 90 (term -> fact factor_appear aux_term .)
    NOTSAME         reduce using rule 90 (term -> fact factor_appear aux_term .)
    LESSSAME        reduce using rule 90 (term -> fact factor_appear aux_term .)
    MORESAME        reduce using rule 90 (term -> fact factor_appear aux_term .)
    RIGHTBRACK      reduce using rule 90 (term -> fact factor_appear aux_term .)


state 133

    (91) aux_term -> SPLIT_BY . add_operator term
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    IF              reduce using rule 110 (add_operator -> .)
    WHILE           reduce using rule 110 (add_operator -> .)
    PRINTG          reduce using rule 110 (add_operator -> .)
    RETURN          reduce using rule 110 (add_operator -> .)
    DOTCOMMA        reduce using rule 110 (add_operator -> .)
    RIGHTKEY        reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)
    COMMA           reduce using rule 110 (add_operator -> .)
    GREATERTN       reduce using rule 110 (add_operator -> .)
    LESSTN          reduce using rule 110 (add_operator -> .)
    SAME            reduce using rule 110 (add_operator -> .)
    NOTSAME         reduce using rule 110 (add_operator -> .)
    LESSSAME        reduce using rule 110 (add_operator -> .)
    MORESAME        reduce using rule 110 (add_operator -> .)
    RIGHTBRACK      reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 158

state 134

    (92) aux_term -> MULT_BY . add_operator term
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    IF              reduce using rule 110 (add_operator -> .)
    WHILE           reduce using rule 110 (add_operator -> .)
    PRINTG          reduce using rule 110 (add_operator -> .)
    RETURN          reduce using rule 110 (add_operator -> .)
    DOTCOMMA        reduce using rule 110 (add_operator -> .)
    RIGHTKEY        reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)
    COMMA           reduce using rule 110 (add_operator -> .)
    GREATERTN       reduce using rule 110 (add_operator -> .)
    LESSTN          reduce using rule 110 (add_operator -> .)
    SAME            reduce using rule 110 (add_operator -> .)
    NOTSAME         reduce using rule 110 (add_operator -> .)
    LESSSAME        reduce using rule 110 (add_operator -> .)
    MORESAME        reduce using rule 110 (add_operator -> .)
    RIGHTBRACK      reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 159

state 135

    (94) fact -> expo expo_appear aux_expo .

    SPLIT_BY        reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    MULT_BY         reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    ADD             reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    LESS            reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    IF              reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    WHILE           reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    AT              reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    PRINTG          reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    ID              reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    RETURN          reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    LEFTPARENT      reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    INI_INT         reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    INI_FLOAT       reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    DOTCOMMA        reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    TIMES_BY_SAME   reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    RIGHTKEY        reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    RIGHTPARENT     reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    COMMA           reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    GREATERTN       reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    LESSTN          reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    SAME            reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    NOTSAME         reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    LESSSAME        reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    MORESAME        reduce using rule 94 (fact -> expo expo_appear aux_expo .)
    RIGHTBRACK      reduce using rule 94 (fact -> expo expo_appear aux_expo .)


state 136

    (104) aux_expo -> TIMES_BY_SAME . add_operator fact
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    IF              reduce using rule 110 (add_operator -> .)
    WHILE           reduce using rule 110 (add_operator -> .)
    PRINTG          reduce using rule 110 (add_operator -> .)
    RETURN          reduce using rule 110 (add_operator -> .)
    DOTCOMMA        reduce using rule 110 (add_operator -> .)
    RIGHTKEY        reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)
    COMMA           reduce using rule 110 (add_operator -> .)
    GREATERTN       reduce using rule 110 (add_operator -> .)
    LESSTN          reduce using rule 110 (add_operator -> .)
    SAME            reduce using rule 110 (add_operator -> .)
    NOTSAME         reduce using rule 110 (add_operator -> .)
    LESSSAME        reduce using rule 110 (add_operator -> .)
    MORESAME        reduce using rule 110 (add_operator -> .)
    RIGHTBRACK      reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 160

state 137

    (118) add_dimension -> INI_INT array_start INI_INT array_end COMMA extra_dimension_found add_dimension .

    RIGHTBRACK      reduce using rule 118 (add_dimension -> INI_INT array_start INI_INT array_end COMMA extra_dimension_found add_dimension .)


state 138

    (107) assign -> access_array set_appear SET expresion_line . seen_final_asignacion DOTCOMMA
    (108) seen_final_asignacion -> .

    DOTCOMMA        reduce using rule 108 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 161

state 139

    (105) assign -> call_let set_appear SET set_value .

    IF              reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    WHILE           reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    AT              reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    PRINTG          reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    ID              reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    RETURN          reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    LEFTPARENT      reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    INI_INT         reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    INI_FLOAT       reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    DOTCOMMA        reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    ADD             reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    LESS            reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    SPLIT_BY        reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    MULT_BY         reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    TIMES_BY_SAME   reduce using rule 105 (assign -> call_let set_appear SET set_value .)
    RIGHTKEY        reduce using rule 105 (assign -> call_let set_appear SET set_value .)


state 140

    (106) assign -> call_let set_appear SET expresion_line . seen_final_asignacion DOTCOMMA
    (108) seen_final_asignacion -> .

    DOTCOMMA        reduce using rule 108 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 162

state 141

    (128) set_value -> INI_INT . aux_int_check append_operand DOTCOMMA
    (123) call_lets -> INI_INT . check_global_const_exists
    (131) aux_int_check -> .
    (125) check_global_const_exists -> . add_operand_const
    (126) add_operand_const -> .

  ! reduce/reduce conflict for DOTCOMMA resolved using rule 126 (add_operand_const -> .)
    TIMES_BY_SAME   reduce using rule 126 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 126 (add_operand_const -> .)
    MULT_BY         reduce using rule 126 (add_operand_const -> .)
    ADD             reduce using rule 126 (add_operand_const -> .)
    LESS            reduce using rule 126 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 126 (add_operand_const -> .)

  ! DOTCOMMA        [ reduce using rule 131 (aux_int_check -> .) ]

    aux_int_check                  shift and go to state 163
    check_global_const_exists      shift and go to state 112
    add_operand_const              shift and go to state 113

state 142

    (129) set_value -> INI_FLOAT . aux_float_check append_operand DOTCOMMA
    (124) call_lets -> INI_FLOAT . check_global_const_exists
    (132) aux_float_check -> .
    (125) check_global_const_exists -> . add_operand_const
    (126) add_operand_const -> .

  ! reduce/reduce conflict for DOTCOMMA resolved using rule 126 (add_operand_const -> .)
    TIMES_BY_SAME   reduce using rule 126 (add_operand_const -> .)
    SPLIT_BY        reduce using rule 126 (add_operand_const -> .)
    MULT_BY         reduce using rule 126 (add_operand_const -> .)
    ADD             reduce using rule 126 (add_operand_const -> .)
    LESS            reduce using rule 126 (add_operand_const -> .)
    DOTCOMMA        reduce using rule 126 (add_operand_const -> .)

  ! DOTCOMMA        [ reduce using rule 132 (aux_float_check -> .) ]

    aux_float_check                shift and go to state 164
    check_global_const_exists      shift and go to state 114
    add_operand_const              shift and go to state 113

state 143

    (87) aux_expresion -> ADD add_operator . expresion_line
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    IF              reduce using rule 59 (func_call -> .)
    WHILE           reduce using rule 59 (func_call -> .)
    PRINTG          reduce using rule 59 (func_call -> .)
    RETURN          reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)
    RIGHTKEY        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]

    expresion_line                 shift and go to state 165
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 144

    (88) aux_expresion -> LESS add_operator . expresion_line
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    IF              reduce using rule 59 (func_call -> .)
    WHILE           reduce using rule 59 (func_call -> .)
    PRINTG          reduce using rule 59 (func_call -> .)
    RETURN          reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)
    RIGHTKEY        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]

    expresion_line                 shift and go to state 166
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 145

    (69) condition -> IF LEFTPARENT found_init_parent condition_expresion . right_parent_condition RIGHTPARENT condition_code condition_end_check
    (101) right_parent_condition -> .

    RIGHTPARENT     reduce using rule 101 (right_parent_condition -> .)

    right_parent_condition         shift and go to state 167

state 146

    (83) condition_expresion -> expresion_line . condition_signs expresion_line condtion_appear
    (84) condition_expresion -> expresion_line . condtion_appear
    (77) condition_signs -> . GREATERTN add_operator
    (78) condition_signs -> . LESSTN add_operator
    (79) condition_signs -> . SAME add_operator
    (80) condition_signs -> . NOTSAME add_operator
    (81) condition_signs -> . LESSSAME add_operator
    (82) condition_signs -> . MORESAME add_operator
    (70) condtion_appear -> .

    GREATERTN       shift and go to state 170
    LESSTN          shift and go to state 171
    SAME            shift and go to state 172
    NOTSAME         shift and go to state 173
    LESSSAME        shift and go to state 174
    MORESAME        shift and go to state 175
    RIGHTPARENT     reduce using rule 70 (condtion_appear -> .)

    condition_signs                shift and go to state 168
    condtion_appear                shift and go to state 169

state 147

    (100) parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT . found_end_parent
    (103) found_end_parent -> .

    TIMES_BY_SAME   reduce using rule 103 (found_end_parent -> .)
    SPLIT_BY        reduce using rule 103 (found_end_parent -> .)
    MULT_BY         reduce using rule 103 (found_end_parent -> .)
    ADD             reduce using rule 103 (found_end_parent -> .)
    LESS            reduce using rule 103 (found_end_parent -> .)
    IF              reduce using rule 103 (found_end_parent -> .)
    WHILE           reduce using rule 103 (found_end_parent -> .)
    AT              reduce using rule 103 (found_end_parent -> .)
    PRINTG          reduce using rule 103 (found_end_parent -> .)
    ID              reduce using rule 103 (found_end_parent -> .)
    RETURN          reduce using rule 103 (found_end_parent -> .)
    LEFTPARENT      reduce using rule 103 (found_end_parent -> .)
    INI_INT         reduce using rule 103 (found_end_parent -> .)
    INI_FLOAT       reduce using rule 103 (found_end_parent -> .)
    DOTCOMMA        reduce using rule 103 (found_end_parent -> .)
    RIGHTKEY        reduce using rule 103 (found_end_parent -> .)
    RIGHTPARENT     reduce using rule 103 (found_end_parent -> .)
    COMMA           reduce using rule 103 (found_end_parent -> .)
    GREATERTN       reduce using rule 103 (found_end_parent -> .)
    LESSTN          reduce using rule 103 (found_end_parent -> .)
    SAME            reduce using rule 103 (found_end_parent -> .)
    NOTSAME         reduce using rule 103 (found_end_parent -> .)
    LESSSAME        reduce using rule 103 (found_end_parent -> .)
    MORESAME        reduce using rule 103 (found_end_parent -> .)
    RIGHTBRACK      reduce using rule 103 (found_end_parent -> .)

    found_end_parent               shift and go to state 176

state 148

    (66) while -> WHILE while_appear LEFTPARENT condition_expresion . RIGHTPARENT right_parent_condition condition_code while_end

    RIGHTPARENT     shift and go to state 177


state 149

    (58) func_call -> AT ID func_call_ID LEFTPARENT . func_calls_params RIGHTPARENT end_func_call
    (62) func_calls_params -> . expresion_line parameter_call COMMA add_parameter func_calls_params
    (63) func_calls_params -> . expresion_line parameter_call
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    func_calls_params              shift and go to state 178
    expresion_line                 shift and go to state 179
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 150

    (15) access_array -> ID LEFTBRACK access_array_found array_expresion . RIGHTBRACK end_array_access

    RIGHTBRACK      shift and go to state 180


state 151

    (18) array_expresion -> array_expresion_line . array_expresion_helper
    (19) array_expresion -> array_expresion_line . array_expresion_helper COMMA array_comma_access array_expresion
    (21) array_expresion_helper -> .

    COMMA           reduce using rule 21 (array_expresion_helper -> .)
    RIGHTBRACK      reduce using rule 21 (array_expresion_helper -> .)

    array_expresion_helper         shift and go to state 181

state 152

    (20) array_expresion_line -> expresion_line .

    COMMA           reduce using rule 20 (array_expresion_line -> expresion_line .)
    RIGHTBRACK      reduce using rule 20 (array_expresion_line -> expresion_line .)


state 153

    (51) write -> PRINTG LEFTPARENT write_found RIGHTPARENT . DOTCOMMA

    DOTCOMMA        shift and go to state 182


state 154

    (53) write_found -> write_found_aux COMMA . write_found
    (52) write_found -> . write_found_aux
    (53) write_found -> . write_found_aux COMMA write_found
    (54) write_found_aux -> . expresion_line print_exp
    (55) write_found_aux -> . INI_STRING string_appear print_exp
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    INI_STRING      shift and go to state 130
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    write_found_aux                shift and go to state 128
    write_found                    shift and go to state 183
    expresion_line                 shift and go to state 129
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 155

    (54) write_found_aux -> expresion_line print_exp .

    COMMA           reduce using rule 54 (write_found_aux -> expresion_line print_exp .)
    RIGHTPARENT     reduce using rule 54 (write_found_aux -> expresion_line print_exp .)


state 156

    (55) write_found_aux -> INI_STRING string_appear . print_exp
    (56) print_exp -> .

    COMMA           reduce using rule 56 (print_exp -> .)
    RIGHTPARENT     reduce using rule 56 (print_exp -> .)

    print_exp                      shift and go to state 184

state 157

    (48) return -> RETURN expresion_line return_aux DOTCOMMA .

    IF              reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    WHILE           reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    AT              reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    PRINTG          reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    ID              reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    RETURN          reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    LEFTPARENT      reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    INI_INT         reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    INI_FLOAT       reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    DOTCOMMA        reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    ADD             reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    LESS            reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    SPLIT_BY        reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    MULT_BY         reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)
    RIGHTKEY        reduce using rule 48 (return -> RETURN expresion_line return_aux DOTCOMMA .)


state 158

    (91) aux_term -> SPLIT_BY add_operator . term
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    IF              reduce using rule 59 (func_call -> .)
    WHILE           reduce using rule 59 (func_call -> .)
    PRINTG          reduce using rule 59 (func_call -> .)
    RETURN          reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)
    RIGHTKEY        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]

    term                           shift and go to state 185
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 159

    (92) aux_term -> MULT_BY add_operator . term
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    IF              reduce using rule 59 (func_call -> .)
    WHILE           reduce using rule 59 (func_call -> .)
    PRINTG          reduce using rule 59 (func_call -> .)
    RETURN          reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)
    RIGHTKEY        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]

    term                           shift and go to state 186
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 160

    (104) aux_expo -> TIMES_BY_SAME add_operator . fact
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    IF              reduce using rule 59 (func_call -> .)
    WHILE           reduce using rule 59 (func_call -> .)
    PRINTG          reduce using rule 59 (func_call -> .)
    RETURN          reduce using rule 59 (func_call -> .)
    DOTCOMMA        reduce using rule 59 (func_call -> .)
    RIGHTKEY        reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    GREATERTN       reduce using rule 59 (func_call -> .)
    LESSTN          reduce using rule 59 (func_call -> .)
    SAME            reduce using rule 59 (func_call -> .)
    NOTSAME         reduce using rule 59 (func_call -> .)
    LESSSAME        reduce using rule 59 (func_call -> .)
    MORESAME        reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]

    fact                           shift and go to state 187
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 161

    (107) assign -> access_array set_appear SET expresion_line seen_final_asignacion . DOTCOMMA

    DOTCOMMA        shift and go to state 188


state 162

    (106) assign -> call_let set_appear SET expresion_line seen_final_asignacion . DOTCOMMA

    DOTCOMMA        shift and go to state 189


state 163

    (128) set_value -> INI_INT aux_int_check . append_operand DOTCOMMA
    (130) append_operand -> .

    DOTCOMMA        reduce using rule 130 (append_operand -> .)

    append_operand                 shift and go to state 190

state 164

    (129) set_value -> INI_FLOAT aux_float_check . append_operand DOTCOMMA
    (130) append_operand -> .

    DOTCOMMA        reduce using rule 130 (append_operand -> .)

    append_operand                 shift and go to state 191

state 165

    (87) aux_expresion -> ADD add_operator expresion_line .

    IF              reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    WHILE           reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    AT              reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    PRINTG          reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    ID              reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    RETURN          reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    LEFTPARENT      reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    INI_INT         reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    INI_FLOAT       reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    DOTCOMMA        reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    ADD             reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    LESS            reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    SPLIT_BY        reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    MULT_BY         reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    TIMES_BY_SAME   reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTKEY        reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTPARENT     reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    COMMA           reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    GREATERTN       reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    LESSTN          reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    SAME            reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    NOTSAME         reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    LESSSAME        reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    MORESAME        reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)
    RIGHTBRACK      reduce using rule 87 (aux_expresion -> ADD add_operator expresion_line .)


state 166

    (88) aux_expresion -> LESS add_operator expresion_line .

    IF              reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    WHILE           reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    AT              reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    PRINTG          reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    ID              reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    RETURN          reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    LEFTPARENT      reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    INI_INT         reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    INI_FLOAT       reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    DOTCOMMA        reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    ADD             reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    LESS            reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    SPLIT_BY        reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    MULT_BY         reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    TIMES_BY_SAME   reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTKEY        reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTPARENT     reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    COMMA           reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    GREATERTN       reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    LESSTN          reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    SAME            reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    NOTSAME         reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    LESSSAME        reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    MORESAME        reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)
    RIGHTBRACK      reduce using rule 88 (aux_expresion -> LESS add_operator expresion_line .)


state 167

    (69) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition . RIGHTPARENT condition_code condition_end_check

    RIGHTPARENT     shift and go to state 192


state 168

    (83) condition_expresion -> expresion_line condition_signs . expresion_line condtion_appear
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    expresion_line                 shift and go to state 193
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 169

    (84) condition_expresion -> expresion_line condtion_appear .

    RIGHTPARENT     reduce using rule 84 (condition_expresion -> expresion_line condtion_appear .)


state 170

    (77) condition_signs -> GREATERTN . add_operator
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 194

state 171

    (78) condition_signs -> LESSTN . add_operator
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 195

state 172

    (79) condition_signs -> SAME . add_operator
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 196

state 173

    (80) condition_signs -> NOTSAME . add_operator
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 197

state 174

    (81) condition_signs -> LESSSAME . add_operator
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 198

state 175

    (82) condition_signs -> MORESAME . add_operator
    (110) add_operator -> .

    LEFTPARENT      reduce using rule 110 (add_operator -> .)
    INI_INT         reduce using rule 110 (add_operator -> .)
    INI_FLOAT       reduce using rule 110 (add_operator -> .)
    ID              reduce using rule 110 (add_operator -> .)
    AT              reduce using rule 110 (add_operator -> .)
    ADD             reduce using rule 110 (add_operator -> .)
    LESS            reduce using rule 110 (add_operator -> .)
    SPLIT_BY        reduce using rule 110 (add_operator -> .)
    MULT_BY         reduce using rule 110 (add_operator -> .)
    TIMES_BY_SAME   reduce using rule 110 (add_operator -> .)
    RIGHTPARENT     reduce using rule 110 (add_operator -> .)

    add_operator                   shift and go to state 199

state 176

    (100) parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .

    TIMES_BY_SAME   reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    SPLIT_BY        reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    MULT_BY         reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    ADD             reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESS            reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    IF              reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    WHILE           reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    AT              reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    PRINTG          reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    ID              reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RETURN          reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LEFTPARENT      reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    INI_INT         reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    INI_FLOAT       reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    DOTCOMMA        reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTKEY        reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTPARENT     reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    COMMA           reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    GREATERTN       reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESSTN          reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    SAME            reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    NOTSAME         reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    LESSSAME        reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    MORESAME        reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)
    RIGHTBRACK      reduce using rule 100 (parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent .)


state 177

    (66) while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT . right_parent_condition condition_code while_end
    (101) right_parent_condition -> .

    LEFTKEY         reduce using rule 101 (right_parent_condition -> .)

    right_parent_condition         shift and go to state 200

state 178

    (58) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params . RIGHTPARENT end_func_call

    RIGHTPARENT     shift and go to state 201


state 179

    (62) func_calls_params -> expresion_line . parameter_call COMMA add_parameter func_calls_params
    (63) func_calls_params -> expresion_line . parameter_call
    (64) parameter_call -> .

    COMMA           reduce using rule 64 (parameter_call -> .)
    RIGHTPARENT     reduce using rule 64 (parameter_call -> .)

    parameter_call                 shift and go to state 202

state 180

    (15) access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK . end_array_access
    (17) end_array_access -> .

    SET             reduce using rule 17 (end_array_access -> .)
    IF              reduce using rule 17 (end_array_access -> .)
    WHILE           reduce using rule 17 (end_array_access -> .)
    AT              reduce using rule 17 (end_array_access -> .)
    PRINTG          reduce using rule 17 (end_array_access -> .)
    ID              reduce using rule 17 (end_array_access -> .)
    RETURN          reduce using rule 17 (end_array_access -> .)
    LEFTPARENT      reduce using rule 17 (end_array_access -> .)
    INI_INT         reduce using rule 17 (end_array_access -> .)
    INI_FLOAT       reduce using rule 17 (end_array_access -> .)
    DOTCOMMA        reduce using rule 17 (end_array_access -> .)
    ADD             reduce using rule 17 (end_array_access -> .)
    LESS            reduce using rule 17 (end_array_access -> .)
    SPLIT_BY        reduce using rule 17 (end_array_access -> .)
    MULT_BY         reduce using rule 17 (end_array_access -> .)
    TIMES_BY_SAME   reduce using rule 17 (end_array_access -> .)
    RIGHTKEY        reduce using rule 17 (end_array_access -> .)
    RIGHTPARENT     reduce using rule 17 (end_array_access -> .)
    COMMA           reduce using rule 17 (end_array_access -> .)
    GREATERTN       reduce using rule 17 (end_array_access -> .)
    LESSTN          reduce using rule 17 (end_array_access -> .)
    SAME            reduce using rule 17 (end_array_access -> .)
    NOTSAME         reduce using rule 17 (end_array_access -> .)
    LESSSAME        reduce using rule 17 (end_array_access -> .)
    MORESAME        reduce using rule 17 (end_array_access -> .)
    RIGHTBRACK      reduce using rule 17 (end_array_access -> .)

    end_array_access               shift and go to state 203

state 181

    (18) array_expresion -> array_expresion_line array_expresion_helper .
    (19) array_expresion -> array_expresion_line array_expresion_helper . COMMA array_comma_access array_expresion

    RIGHTBRACK      reduce using rule 18 (array_expresion -> array_expresion_line array_expresion_helper .)
    COMMA           shift and go to state 204


state 182

    (51) write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .

    IF              reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    WHILE           reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    AT              reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    PRINTG          reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    ID              reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    RETURN          reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    LEFTPARENT      reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    INI_INT         reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    INI_FLOAT       reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    DOTCOMMA        reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    ADD             reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    LESS            reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    SPLIT_BY        reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    MULT_BY         reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)
    RIGHTKEY        reduce using rule 51 (write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA .)


state 183

    (53) write_found -> write_found_aux COMMA write_found .

    RIGHTPARENT     reduce using rule 53 (write_found -> write_found_aux COMMA write_found .)


state 184

    (55) write_found_aux -> INI_STRING string_appear print_exp .

    COMMA           reduce using rule 55 (write_found_aux -> INI_STRING string_appear print_exp .)
    RIGHTPARENT     reduce using rule 55 (write_found_aux -> INI_STRING string_appear print_exp .)


state 185

    (91) aux_term -> SPLIT_BY add_operator term .

    ADD             reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    LESS            reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    IF              reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    WHILE           reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    AT              reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    PRINTG          reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    ID              reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    RETURN          reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    LEFTPARENT      reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    INI_INT         reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    INI_FLOAT       reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    DOTCOMMA        reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    SPLIT_BY        reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    MULT_BY         reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    TIMES_BY_SAME   reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTKEY        reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTPARENT     reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    COMMA           reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    GREATERTN       reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    LESSTN          reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    SAME            reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    NOTSAME         reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    LESSSAME        reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    MORESAME        reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)
    RIGHTBRACK      reduce using rule 91 (aux_term -> SPLIT_BY add_operator term .)


state 186

    (92) aux_term -> MULT_BY add_operator term .

    ADD             reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    LESS            reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    IF              reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    WHILE           reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    AT              reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    PRINTG          reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    ID              reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    RETURN          reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    LEFTPARENT      reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    INI_INT         reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    INI_FLOAT       reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    DOTCOMMA        reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    SPLIT_BY        reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    MULT_BY         reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    TIMES_BY_SAME   reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    RIGHTKEY        reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    RIGHTPARENT     reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    COMMA           reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    GREATERTN       reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    LESSTN          reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    SAME            reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    NOTSAME         reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    LESSSAME        reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    MORESAME        reduce using rule 92 (aux_term -> MULT_BY add_operator term .)
    RIGHTBRACK      reduce using rule 92 (aux_term -> MULT_BY add_operator term .)


state 187

    (104) aux_expo -> TIMES_BY_SAME add_operator fact .

    SPLIT_BY        reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    MULT_BY         reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    ADD             reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESS            reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    IF              reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    WHILE           reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    AT              reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    PRINTG          reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    ID              reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RETURN          reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LEFTPARENT      reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    INI_INT         reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    INI_FLOAT       reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    DOTCOMMA        reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    TIMES_BY_SAME   reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTKEY        reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTPARENT     reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    COMMA           reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    GREATERTN       reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESSTN          reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    SAME            reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    NOTSAME         reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    LESSSAME        reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    MORESAME        reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)
    RIGHTBRACK      reduce using rule 104 (aux_expo -> TIMES_BY_SAME add_operator fact .)


state 188

    (107) assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .

    IF              reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    WHILE           reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    AT              reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    PRINTG          reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    ID              reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RETURN          reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    LEFTPARENT      reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_INT         reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_FLOAT       reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    DOTCOMMA        reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    ADD             reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    LESS            reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    SPLIT_BY        reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    MULT_BY         reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RIGHTKEY        reduce using rule 107 (assign -> access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)


state 189

    (106) assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .

    IF              reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    WHILE           reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    AT              reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    PRINTG          reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    ID              reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RETURN          reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    LEFTPARENT      reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_INT         reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    INI_FLOAT       reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    DOTCOMMA        reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    ADD             reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    LESS            reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    SPLIT_BY        reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    MULT_BY         reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)
    RIGHTKEY        reduce using rule 106 (assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA .)


state 190

    (128) set_value -> INI_INT aux_int_check append_operand . DOTCOMMA

    DOTCOMMA        shift and go to state 205


state 191

    (129) set_value -> INI_FLOAT aux_float_check append_operand . DOTCOMMA

    DOTCOMMA        shift and go to state 206


state 192

    (69) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT . condition_code condition_end_check
    (74) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 208

    condition_code                 shift and go to state 207

state 193

    (83) condition_expresion -> expresion_line condition_signs expresion_line . condtion_appear
    (70) condtion_appear -> .

    RIGHTPARENT     reduce using rule 70 (condtion_appear -> .)

    condtion_appear                shift and go to state 209

state 194

    (77) condition_signs -> GREATERTN add_operator .

    LEFTPARENT      reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    INI_INT         reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    INI_FLOAT       reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    ID              reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    AT              reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    ADD             reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    LESS            reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    SPLIT_BY        reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    MULT_BY         reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    TIMES_BY_SAME   reduce using rule 77 (condition_signs -> GREATERTN add_operator .)
    RIGHTPARENT     reduce using rule 77 (condition_signs -> GREATERTN add_operator .)


state 195

    (78) condition_signs -> LESSTN add_operator .

    LEFTPARENT      reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    INI_INT         reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    INI_FLOAT       reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    ID              reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    AT              reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    ADD             reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    LESS            reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    SPLIT_BY        reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    MULT_BY         reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    TIMES_BY_SAME   reduce using rule 78 (condition_signs -> LESSTN add_operator .)
    RIGHTPARENT     reduce using rule 78 (condition_signs -> LESSTN add_operator .)


state 196

    (79) condition_signs -> SAME add_operator .

    LEFTPARENT      reduce using rule 79 (condition_signs -> SAME add_operator .)
    INI_INT         reduce using rule 79 (condition_signs -> SAME add_operator .)
    INI_FLOAT       reduce using rule 79 (condition_signs -> SAME add_operator .)
    ID              reduce using rule 79 (condition_signs -> SAME add_operator .)
    AT              reduce using rule 79 (condition_signs -> SAME add_operator .)
    ADD             reduce using rule 79 (condition_signs -> SAME add_operator .)
    LESS            reduce using rule 79 (condition_signs -> SAME add_operator .)
    SPLIT_BY        reduce using rule 79 (condition_signs -> SAME add_operator .)
    MULT_BY         reduce using rule 79 (condition_signs -> SAME add_operator .)
    TIMES_BY_SAME   reduce using rule 79 (condition_signs -> SAME add_operator .)
    RIGHTPARENT     reduce using rule 79 (condition_signs -> SAME add_operator .)


state 197

    (80) condition_signs -> NOTSAME add_operator .

    LEFTPARENT      reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    INI_INT         reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    INI_FLOAT       reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    ID              reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    AT              reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    ADD             reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    LESS            reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    SPLIT_BY        reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    MULT_BY         reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    TIMES_BY_SAME   reduce using rule 80 (condition_signs -> NOTSAME add_operator .)
    RIGHTPARENT     reduce using rule 80 (condition_signs -> NOTSAME add_operator .)


state 198

    (81) condition_signs -> LESSSAME add_operator .

    LEFTPARENT      reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    INI_INT         reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    INI_FLOAT       reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    ID              reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    AT              reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    ADD             reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    LESS            reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    SPLIT_BY        reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    MULT_BY         reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    TIMES_BY_SAME   reduce using rule 81 (condition_signs -> LESSSAME add_operator .)
    RIGHTPARENT     reduce using rule 81 (condition_signs -> LESSSAME add_operator .)


state 199

    (82) condition_signs -> MORESAME add_operator .

    LEFTPARENT      reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    INI_INT         reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    INI_FLOAT       reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    ID              reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    AT              reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    ADD             reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    LESS            reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    SPLIT_BY        reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    MULT_BY         reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    TIMES_BY_SAME   reduce using rule 82 (condition_signs -> MORESAME add_operator .)
    RIGHTPARENT     reduce using rule 82 (condition_signs -> MORESAME add_operator .)


state 200

    (66) while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition . condition_code while_end
    (74) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 208

    condition_code                 shift and go to state 210

state 201

    (58) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT . end_func_call
    (61) end_func_call -> .

    DOTCOMMA        reduce using rule 61 (end_func_call -> .)
    TIMES_BY_SAME   reduce using rule 61 (end_func_call -> .)
    SPLIT_BY        reduce using rule 61 (end_func_call -> .)
    MULT_BY         reduce using rule 61 (end_func_call -> .)
    ADD             reduce using rule 61 (end_func_call -> .)
    LESS            reduce using rule 61 (end_func_call -> .)
    IF              reduce using rule 61 (end_func_call -> .)
    WHILE           reduce using rule 61 (end_func_call -> .)
    AT              reduce using rule 61 (end_func_call -> .)
    PRINTG          reduce using rule 61 (end_func_call -> .)
    ID              reduce using rule 61 (end_func_call -> .)
    RETURN          reduce using rule 61 (end_func_call -> .)
    LEFTPARENT      reduce using rule 61 (end_func_call -> .)
    INI_INT         reduce using rule 61 (end_func_call -> .)
    INI_FLOAT       reduce using rule 61 (end_func_call -> .)
    RIGHTKEY        reduce using rule 61 (end_func_call -> .)
    RIGHTPARENT     reduce using rule 61 (end_func_call -> .)
    COMMA           reduce using rule 61 (end_func_call -> .)
    GREATERTN       reduce using rule 61 (end_func_call -> .)
    LESSTN          reduce using rule 61 (end_func_call -> .)
    SAME            reduce using rule 61 (end_func_call -> .)
    NOTSAME         reduce using rule 61 (end_func_call -> .)
    LESSSAME        reduce using rule 61 (end_func_call -> .)
    MORESAME        reduce using rule 61 (end_func_call -> .)
    RIGHTBRACK      reduce using rule 61 (end_func_call -> .)

    end_func_call                  shift and go to state 211

state 202

    (62) func_calls_params -> expresion_line parameter_call . COMMA add_parameter func_calls_params
    (63) func_calls_params -> expresion_line parameter_call .

    COMMA           shift and go to state 212
    RIGHTPARENT     reduce using rule 63 (func_calls_params -> expresion_line parameter_call .)


state 203

    (15) access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .

    SET             reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    IF              reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    WHILE           reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    AT              reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    PRINTG          reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    ID              reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    RETURN          reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    LEFTPARENT      reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    INI_INT         reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    INI_FLOAT       reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    DOTCOMMA        reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    ADD             reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    LESS            reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    SPLIT_BY        reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    MULT_BY         reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    TIMES_BY_SAME   reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    RIGHTKEY        reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    RIGHTPARENT     reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    COMMA           reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    GREATERTN       reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    LESSTN          reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    SAME            reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    NOTSAME         reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    LESSSAME        reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    MORESAME        reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)
    RIGHTBRACK      reduce using rule 15 (access_array -> ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access .)


state 204

    (19) array_expresion -> array_expresion_line array_expresion_helper COMMA . array_comma_access array_expresion
    (22) array_comma_access -> .

    LEFTPARENT      reduce using rule 22 (array_comma_access -> .)
    INI_INT         reduce using rule 22 (array_comma_access -> .)
    INI_FLOAT       reduce using rule 22 (array_comma_access -> .)
    ID              reduce using rule 22 (array_comma_access -> .)
    AT              reduce using rule 22 (array_comma_access -> .)
    COMMA           reduce using rule 22 (array_comma_access -> .)
    ADD             reduce using rule 22 (array_comma_access -> .)
    LESS            reduce using rule 22 (array_comma_access -> .)
    SPLIT_BY        reduce using rule 22 (array_comma_access -> .)
    MULT_BY         reduce using rule 22 (array_comma_access -> .)
    TIMES_BY_SAME   reduce using rule 22 (array_comma_access -> .)
    RIGHTBRACK      reduce using rule 22 (array_comma_access -> .)

    array_comma_access             shift and go to state 213

state 205

    (128) set_value -> INI_INT aux_int_check append_operand DOTCOMMA .

    IF              reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    WHILE           reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    AT              reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    PRINTG          reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    ID              reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    RETURN          reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    LEFTPARENT      reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    INI_INT         reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    INI_FLOAT       reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    DOTCOMMA        reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    ADD             reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    LESS            reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    SPLIT_BY        reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    MULT_BY         reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)
    RIGHTKEY        reduce using rule 128 (set_value -> INI_INT aux_int_check append_operand DOTCOMMA .)


state 206

    (129) set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .

    IF              reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    WHILE           reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    AT              reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    PRINTG          reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    ID              reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    RETURN          reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    LEFTPARENT      reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    INI_INT         reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    INI_FLOAT       reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    DOTCOMMA        reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    ADD             reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    LESS            reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    SPLIT_BY        reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    MULT_BY         reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    TIMES_BY_SAME   reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)
    RIGHTKEY        reduce using rule 129 (set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA .)


state 207

    (69) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code . condition_end_check
    (71) condition_end_check -> . ELSE else_appear condition_code end_condition
    (72) condition_end_check -> . end_condition
    (76) end_condition -> .

    ELSE            shift and go to state 215
    IF              reduce using rule 76 (end_condition -> .)
    WHILE           reduce using rule 76 (end_condition -> .)
    AT              reduce using rule 76 (end_condition -> .)
    PRINTG          reduce using rule 76 (end_condition -> .)
    ID              reduce using rule 76 (end_condition -> .)
    RETURN          reduce using rule 76 (end_condition -> .)
    LEFTPARENT      reduce using rule 76 (end_condition -> .)
    INI_INT         reduce using rule 76 (end_condition -> .)
    INI_FLOAT       reduce using rule 76 (end_condition -> .)
    DOTCOMMA        reduce using rule 76 (end_condition -> .)
    ADD             reduce using rule 76 (end_condition -> .)
    LESS            reduce using rule 76 (end_condition -> .)
    SPLIT_BY        reduce using rule 76 (end_condition -> .)
    MULT_BY         reduce using rule 76 (end_condition -> .)
    TIMES_BY_SAME   reduce using rule 76 (end_condition -> .)
    RIGHTKEY        reduce using rule 76 (end_condition -> .)

    condition_end_check            shift and go to state 214
    end_condition                  shift and go to state 216

state 208

    (74) condition_code -> LEFTKEY . lets func_code_aux RIGHTKEY
    (6) lets -> . LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets
    (7) lets -> . LET seen_lets type ID seen_ID_let LEFTBRACK left_bracket_array add_dimension RIGHTBRACK end_array_init DOTCOMMA lets
    (8) lets -> . empty
    (133) empty -> .

    LET             shift and go to state 7
    IF              reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    AT              reduce using rule 133 (empty -> .)
    PRINTG          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    LEFTPARENT      reduce using rule 133 (empty -> .)
    INI_INT         reduce using rule 133 (empty -> .)
    INI_FLOAT       reduce using rule 133 (empty -> .)
    RIGHTKEY        reduce using rule 133 (empty -> .)
    DOTCOMMA        reduce using rule 133 (empty -> .)
    ADD             reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    SPLIT_BY        reduce using rule 133 (empty -> .)
    MULT_BY         reduce using rule 133 (empty -> .)
    TIMES_BY_SAME   reduce using rule 133 (empty -> .)

    lets                           shift and go to state 217
    empty                          shift and go to state 8

state 209

    (83) condition_expresion -> expresion_line condition_signs expresion_line condtion_appear .

    RIGHTPARENT     reduce using rule 83 (condition_expresion -> expresion_line condition_signs expresion_line condtion_appear .)


state 210

    (66) while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code . while_end
    (67) while_end -> .

    IF              reduce using rule 67 (while_end -> .)
    WHILE           reduce using rule 67 (while_end -> .)
    AT              reduce using rule 67 (while_end -> .)
    PRINTG          reduce using rule 67 (while_end -> .)
    ID              reduce using rule 67 (while_end -> .)
    RETURN          reduce using rule 67 (while_end -> .)
    LEFTPARENT      reduce using rule 67 (while_end -> .)
    INI_INT         reduce using rule 67 (while_end -> .)
    INI_FLOAT       reduce using rule 67 (while_end -> .)
    DOTCOMMA        reduce using rule 67 (while_end -> .)
    ADD             reduce using rule 67 (while_end -> .)
    LESS            reduce using rule 67 (while_end -> .)
    SPLIT_BY        reduce using rule 67 (while_end -> .)
    MULT_BY         reduce using rule 67 (while_end -> .)
    TIMES_BY_SAME   reduce using rule 67 (while_end -> .)
    RIGHTKEY        reduce using rule 67 (while_end -> .)

    while_end                      shift and go to state 218

state 211

    (58) func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .

    DOTCOMMA        reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    TIMES_BY_SAME   reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    SPLIT_BY        reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    MULT_BY         reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    ADD             reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    LESS            reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    IF              reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    WHILE           reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    AT              reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    PRINTG          reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    ID              reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    RETURN          reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    LEFTPARENT      reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    INI_INT         reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    INI_FLOAT       reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    RIGHTKEY        reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    RIGHTPARENT     reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    COMMA           reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    GREATERTN       reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    LESSTN          reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    SAME            reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    NOTSAME         reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    LESSSAME        reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    MORESAME        reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)
    RIGHTBRACK      reduce using rule 58 (func_call -> AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call .)


state 212

    (62) func_calls_params -> expresion_line parameter_call COMMA . add_parameter func_calls_params
    (65) add_parameter -> .

    LEFTPARENT      reduce using rule 65 (add_parameter -> .)
    INI_INT         reduce using rule 65 (add_parameter -> .)
    INI_FLOAT       reduce using rule 65 (add_parameter -> .)
    ID              reduce using rule 65 (add_parameter -> .)
    AT              reduce using rule 65 (add_parameter -> .)
    COMMA           reduce using rule 65 (add_parameter -> .)
    ADD             reduce using rule 65 (add_parameter -> .)
    LESS            reduce using rule 65 (add_parameter -> .)
    SPLIT_BY        reduce using rule 65 (add_parameter -> .)
    MULT_BY         reduce using rule 65 (add_parameter -> .)
    TIMES_BY_SAME   reduce using rule 65 (add_parameter -> .)
    RIGHTPARENT     reduce using rule 65 (add_parameter -> .)

    add_parameter                  shift and go to state 219

state 213

    (19) array_expresion -> array_expresion_line array_expresion_helper COMMA array_comma_access . array_expresion
    (18) array_expresion -> . array_expresion_line array_expresion_helper
    (19) array_expresion -> . array_expresion_line array_expresion_helper COMMA array_comma_access array_expresion
    (20) array_expresion_line -> . expresion_line
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    RIGHTBRACK      reduce using rule 59 (func_call -> .)

    array_expresion_line           shift and go to state 151
    array_expresion                shift and go to state 220
    expresion_line                 shift and go to state 152
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 214

    (69) condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .

    IF              reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    WHILE           reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    AT              reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    PRINTG          reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    ID              reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    RETURN          reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    LEFTPARENT      reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    INI_INT         reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    INI_FLOAT       reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    DOTCOMMA        reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    ADD             reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    LESS            reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    SPLIT_BY        reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    MULT_BY         reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    TIMES_BY_SAME   reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)
    RIGHTKEY        reduce using rule 69 (condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check .)


state 215

    (71) condition_end_check -> ELSE . else_appear condition_code end_condition
    (73) else_appear -> .

    LEFTKEY         reduce using rule 73 (else_appear -> .)

    else_appear                    shift and go to state 221

state 216

    (72) condition_end_check -> end_condition .

    IF              reduce using rule 72 (condition_end_check -> end_condition .)
    WHILE           reduce using rule 72 (condition_end_check -> end_condition .)
    AT              reduce using rule 72 (condition_end_check -> end_condition .)
    PRINTG          reduce using rule 72 (condition_end_check -> end_condition .)
    ID              reduce using rule 72 (condition_end_check -> end_condition .)
    RETURN          reduce using rule 72 (condition_end_check -> end_condition .)
    LEFTPARENT      reduce using rule 72 (condition_end_check -> end_condition .)
    INI_INT         reduce using rule 72 (condition_end_check -> end_condition .)
    INI_FLOAT       reduce using rule 72 (condition_end_check -> end_condition .)
    DOTCOMMA        reduce using rule 72 (condition_end_check -> end_condition .)
    ADD             reduce using rule 72 (condition_end_check -> end_condition .)
    LESS            reduce using rule 72 (condition_end_check -> end_condition .)
    SPLIT_BY        reduce using rule 72 (condition_end_check -> end_condition .)
    MULT_BY         reduce using rule 72 (condition_end_check -> end_condition .)
    TIMES_BY_SAME   reduce using rule 72 (condition_end_check -> end_condition .)
    RIGHTKEY        reduce using rule 72 (condition_end_check -> end_condition .)


state 217

    (74) condition_code -> LEFTKEY lets . func_code_aux RIGHTKEY
    (38) func_code_aux -> . action func_code_aux
    (39) func_code_aux -> .
    (40) action -> . assign
    (41) action -> . expresion_line
    (42) action -> . condition
    (43) action -> . while
    (44) action -> . func_call DOTCOMMA
    (45) action -> . write
    (46) action -> . access_array
    (47) action -> . return
    (105) assign -> . call_let set_appear SET set_value
    (106) assign -> . call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (107) assign -> . access_array set_appear SET expresion_line seen_final_asignacion DOTCOMMA
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (69) condition -> . IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check
    (66) while -> . WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (51) write -> . PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access
    (48) return -> . RETURN expresion_line return_aux DOTCOMMA
    (49) return -> .
    (122) call_let -> . ID check_let_exists
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 39 (func_code_aux -> .)
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PRINTG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! reduce/reduce conflict for LEFTPARENT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for INI_INT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for INI_FLOAT resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for DOTCOMMA resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for ADD resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for SPLIT_BY resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for MULT_BY resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for TIMES_BY_SAME resolved using rule 49 (return -> .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 39 (func_code_aux -> .)
  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for INI_INT resolved as shift
  ! shift/reduce conflict for INI_FLOAT resolved as shift
    RIGHTKEY        reduce using rule 39 (func_code_aux -> .)
    IF              shift and go to state 77
    WHILE           shift and go to state 79
    AT              shift and go to state 80
    PRINTG          shift and go to state 82
    ID              shift and go to state 81
    RETURN          shift and go to state 83
    DOTCOMMA        reduce using rule 49 (return -> .)
    ADD             reduce using rule 49 (return -> .)
    LESS            reduce using rule 49 (return -> .)
    SPLIT_BY        reduce using rule 49 (return -> .)
    MULT_BY         reduce using rule 49 (return -> .)
    TIMES_BY_SAME   reduce using rule 49 (return -> .)
    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89

  ! DOTCOMMA        [ reduce using rule 59 (func_call -> .) ]
  ! TIMES_BY_SAME   [ reduce using rule 59 (func_call -> .) ]
  ! SPLIT_BY        [ reduce using rule 59 (func_call -> .) ]
  ! MULT_BY         [ reduce using rule 59 (func_call -> .) ]
  ! ADD             [ reduce using rule 59 (func_call -> .) ]
  ! LESS            [ reduce using rule 59 (func_call -> .) ]
  ! IF              [ reduce using rule 59 (func_call -> .) ]
  ! WHILE           [ reduce using rule 59 (func_call -> .) ]
  ! AT              [ reduce using rule 59 (func_call -> .) ]
  ! PRINTG          [ reduce using rule 59 (func_call -> .) ]
  ! ID              [ reduce using rule 59 (func_call -> .) ]
  ! RETURN          [ reduce using rule 59 (func_call -> .) ]
  ! LEFTPARENT      [ reduce using rule 59 (func_call -> .) ]
  ! INI_INT         [ reduce using rule 59 (func_call -> .) ]
  ! INI_FLOAT       [ reduce using rule 59 (func_call -> .) ]
  ! RIGHTKEY        [ reduce using rule 59 (func_call -> .) ]
  ! IF              [ reduce using rule 49 (return -> .) ]
  ! WHILE           [ reduce using rule 49 (return -> .) ]
  ! AT              [ reduce using rule 49 (return -> .) ]
  ! PRINTG          [ reduce using rule 49 (return -> .) ]
  ! ID              [ reduce using rule 49 (return -> .) ]
  ! RETURN          [ reduce using rule 49 (return -> .) ]
  ! LEFTPARENT      [ reduce using rule 49 (return -> .) ]
  ! INI_INT         [ reduce using rule 49 (return -> .) ]
  ! INI_FLOAT       [ reduce using rule 49 (return -> .) ]
  ! RIGHTKEY        [ reduce using rule 49 (return -> .) ]

    func_code_aux                  shift and go to state 222
    action                         shift and go to state 66
    assign                         shift and go to state 67
    expresion_line                 shift and go to state 68
    condition                      shift and go to state 69
    while                          shift and go to state 70
    func_call                      shift and go to state 71
    write                          shift and go to state 72
    access_array                   shift and go to state 73
    return                         shift and go to state 74
    call_let                       shift and go to state 75
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87

state 218

    (66) while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .

    IF              reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    WHILE           reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    AT              reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    PRINTG          reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    ID              reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    RETURN          reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    LEFTPARENT      reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    INI_INT         reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    INI_FLOAT       reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    DOTCOMMA        reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    ADD             reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    LESS            reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    SPLIT_BY        reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    MULT_BY         reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    TIMES_BY_SAME   reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)
    RIGHTKEY        reduce using rule 66 (while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end .)


state 219

    (62) func_calls_params -> expresion_line parameter_call COMMA add_parameter . func_calls_params
    (62) func_calls_params -> . expresion_line parameter_call COMMA add_parameter func_calls_params
    (63) func_calls_params -> . expresion_line parameter_call
    (85) expresion_line -> . term term_appear
    (86) expresion_line -> . term term_appear aux_expresion
    (89) term -> . fact factor_appear
    (90) term -> . fact factor_appear aux_term
    (93) fact -> . expo expo_appear
    (94) fact -> . expo expo_appear aux_expo
    (95) expo -> . parent_aux
    (96) expo -> . call_lets
    (97) expo -> . call_let
    (98) expo -> . func_call
    (99) expo -> . access_array
    (100) parent_aux -> . LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent
    (123) call_lets -> . INI_INT check_global_const_exists
    (124) call_lets -> . INI_FLOAT check_global_const_exists
    (122) call_let -> . ID check_let_exists
    (58) func_call -> . AT ID func_call_ID LEFTPARENT func_calls_params RIGHTPARENT end_func_call
    (59) func_call -> .
    (15) access_array -> . ID LEFTBRACK access_array_found array_expresion RIGHTBRACK end_array_access

    LEFTPARENT      shift and go to state 78
    INI_INT         shift and go to state 88
    INI_FLOAT       shift and go to state 89
    ID              shift and go to state 109
    AT              shift and go to state 80
    TIMES_BY_SAME   reduce using rule 59 (func_call -> .)
    SPLIT_BY        reduce using rule 59 (func_call -> .)
    MULT_BY         reduce using rule 59 (func_call -> .)
    ADD             reduce using rule 59 (func_call -> .)
    LESS            reduce using rule 59 (func_call -> .)
    COMMA           reduce using rule 59 (func_call -> .)
    RIGHTPARENT     reduce using rule 59 (func_call -> .)

    expresion_line                 shift and go to state 179
    func_calls_params              shift and go to state 223
    term                           shift and go to state 76
    fact                           shift and go to state 84
    expo                           shift and go to state 85
    parent_aux                     shift and go to state 86
    call_lets                      shift and go to state 87
    call_let                       shift and go to state 106
    func_call                      shift and go to state 107
    access_array                   shift and go to state 108

state 220

    (19) array_expresion -> array_expresion_line array_expresion_helper COMMA array_comma_access array_expresion .

    RIGHTBRACK      reduce using rule 19 (array_expresion -> array_expresion_line array_expresion_helper COMMA array_comma_access array_expresion .)


state 221

    (71) condition_end_check -> ELSE else_appear . condition_code end_condition
    (74) condition_code -> . LEFTKEY lets func_code_aux RIGHTKEY

    LEFTKEY         shift and go to state 208

    condition_code                 shift and go to state 224

state 222

    (74) condition_code -> LEFTKEY lets func_code_aux . RIGHTKEY

    RIGHTKEY        shift and go to state 225


state 223

    (62) func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params .

    RIGHTPARENT     reduce using rule 62 (func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params .)


state 224

    (71) condition_end_check -> ELSE else_appear condition_code . end_condition
    (76) end_condition -> .

    IF              reduce using rule 76 (end_condition -> .)
    WHILE           reduce using rule 76 (end_condition -> .)
    AT              reduce using rule 76 (end_condition -> .)
    PRINTG          reduce using rule 76 (end_condition -> .)
    ID              reduce using rule 76 (end_condition -> .)
    RETURN          reduce using rule 76 (end_condition -> .)
    LEFTPARENT      reduce using rule 76 (end_condition -> .)
    INI_INT         reduce using rule 76 (end_condition -> .)
    INI_FLOAT       reduce using rule 76 (end_condition -> .)
    DOTCOMMA        reduce using rule 76 (end_condition -> .)
    ADD             reduce using rule 76 (end_condition -> .)
    LESS            reduce using rule 76 (end_condition -> .)
    SPLIT_BY        reduce using rule 76 (end_condition -> .)
    MULT_BY         reduce using rule 76 (end_condition -> .)
    TIMES_BY_SAME   reduce using rule 76 (end_condition -> .)
    RIGHTKEY        reduce using rule 76 (end_condition -> .)

    end_condition                  shift and go to state 226

state 225

    (74) condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .

    ELSE            reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    IF              reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    WHILE           reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    AT              reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    PRINTG          reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    ID              reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    RETURN          reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    LEFTPARENT      reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    INI_INT         reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    INI_FLOAT       reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    DOTCOMMA        reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    ADD             reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    LESS            reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    SPLIT_BY        reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    MULT_BY         reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    TIMES_BY_SAME   reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)
    RIGHTKEY        reduce using rule 74 (condition_code -> LEFTKEY lets func_code_aux RIGHTKEY .)


state 226

    (71) condition_end_check -> ELSE else_appear condition_code end_condition .

    IF              reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    WHILE           reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    AT              reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    PRINTG          reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    ID              reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    RETURN          reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    LEFTPARENT      reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    INI_INT         reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    INI_FLOAT       reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    DOTCOMMA        reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    ADD             reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    LESS            reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    SPLIT_BY        reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    MULT_BY         reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    TIMES_BY_SAME   reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)
    RIGHTKEY        reduce using rule 71 (condition_end_check -> ELSE else_appear condition_code end_condition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for AT in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for AT in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 62 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 62 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 62 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for AT in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for AT in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 66 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 66 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 66 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOTCOMMA in state 71 resolved as shift
WARNING: shift/reduce conflict for ADD in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS in state 97 resolved as shift
WARNING: shift/reduce conflict for SPLIT_BY in state 110 resolved as shift
WARNING: shift/reduce conflict for MULT_BY in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES_BY_SAME in state 111 resolved as shift
WARNING: shift/reduce conflict for AT in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 143 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 143 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 143 resolved as shift
WARNING: shift/reduce conflict for AT in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 144 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 144 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 144 resolved as shift
WARNING: shift/reduce conflict for AT in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 158 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 158 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 158 resolved as shift
WARNING: shift/reduce conflict for AT in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 159 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 159 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 159 resolved as shift
WARNING: shift/reduce conflict for AT in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 160 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 160 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 217 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 217 resolved as shift
WARNING: shift/reduce conflict for AT in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 217 resolved as shift
WARNING: shift/reduce conflict for IF in state 217 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 217 resolved as shift
WARNING: shift/reduce conflict for AT in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINTG in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 217 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 217 resolved as shift
WARNING: shift/reduce conflict for INI_INT in state 217 resolved as shift
WARNING: shift/reduce conflict for INI_FLOAT in state 217 resolved as shift
WARNING: reduce/reduce conflict in state 62 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 62
WARNING: reduce/reduce conflict in state 62 resolved using rule (return -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 62
WARNING: reduce/reduce conflict in state 62 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (return -> <empty>) in state 62
WARNING: reduce/reduce conflict in state 66 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 66 resolved using rule (return -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 66 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (return -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 73 resolved using rule (action -> access_array)
WARNING: rejected rule (expo -> access_array) in state 73
WARNING: reduce/reduce conflict in state 141 resolved using rule (add_operand_const -> <empty>)
WARNING: rejected rule (aux_int_check -> <empty>) in state 141
WARNING: reduce/reduce conflict in state 142 resolved using rule (add_operand_const -> <empty>)
WARNING: rejected rule (aux_float_check -> <empty>) in state 142
WARNING: reduce/reduce conflict in state 217 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 217
WARNING: reduce/reduce conflict in state 217 resolved using rule (return -> <empty>)
WARNING: rejected rule (func_call -> <empty>) in state 217
WARNING: reduce/reduce conflict in state 217 resolved using rule (func_code_aux -> <empty>)
WARNING: rejected rule (return -> <empty>) in state 217
WARNING: Rule (aux_int_check -> <empty>) is never reduced
WARNING: Rule (aux_float_check -> <empty>) is never reduced
