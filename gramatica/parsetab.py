
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AT BOOL COMMA DO DOTCOMMA ELSE ENDALL ENDFUNC FLOAT FUNC GOTO GOTOF GOTOT GREATERTN ID IF IGNOREGOTOFUNC INI_BOOL INI_FLOAT INI_INT INI_STRING INT LEFTBRACK LEFTKEY LEFTPARENT LESS LESSSAME LESSTN LET MAIN MORESAME MULT_BY NOTSAME PRINTG PROG RETURN RIGHTBRACK RIGHTKEY RIGHTPARENT SAME SET SPLIT_BY TIMES_BY_SAME TWOPOINTS VOID WHILE\n      compile : PROG ID seen_program DOTCOMMA lets modules\n                |\n    \n        modules : func modules\n                |\n    seen_program :  lets : LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets\n                | empty\n    seen_lets : \n      type : INT seen_type\n           | FLOAT seen_type\n           | BOOL seen_type\n    seen_type :  seen_ID_let : \n      aux_let : COMMA ID seen_ID_let aux_let\n              |\n    \n        func : FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code\n    \n        seen_func_name :\n    \n        params : LEFTPARENT param_table_init param_declare RIGHTPARENT\n    \n      param_table_init :\n    \n        param_declare : type ID seen_ID_let param_declare\n                | COMMA param_declare\n                | empty\n    \n      return_func_type : type\n                        | VOID void_detect\n    \n        void_detect :\n    \n        func_code : LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func\n    \n        end_func :\n    \n        func_code_aux : action func_code_aux\n                        |\n    \n        action : assign\n                | expresion_line\n                | condition\n                | while\n                | func_call DOTCOMMA\n                | write\n                | return\n    \n        return : RETURN expresion_line return_aux DOTCOMMA\n                |\n    \n        return_aux :\n    \n          write : PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA\n    \n       write_found : write_found_aux\n                    | write_found_aux COMMA write_found\n    \n        write_found_aux : expresion_line print_exp\n                        | INI_STRING string_appear print_exp\n    \n        print_exp :\n    \n        string_appear :\n    \n        func_call : AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call\n                    |\n    \n        end_func_call_params :\n    \n        func_call_ID :\n    \n        end_func_call :\n    \n        func_calls_params : expresion_line parameter_call COMMA add_parameter func_calls_params\n                            | expresion_line parameter_call\n    \n        parameter_call :\n    \n        add_parameter :\n    \n        while : WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end\n    \n        while_end :\n    \n        while_appear :\n    \n        condition : IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT  condition_code condition_end_check\n    \n        condtion_appear :\n    \n        condition_end_check : ELSE else_appear condition_code end_condition\n                              | end_condition\n    \n        else_appear :\n    \n        condition_code : LEFTKEY lets func_code_aux RIGHTKEY\n    \n        func_code_start :\n    \n        end_condition :\n    \n        condition_signs : GREATERTN add_operator\n                        | LESSTN add_operator\n                        | SAME add_operator\n                        | NOTSAME add_operator\n                        | LESSSAME add_operator\n                        | MORESAME add_operator\n    \n        condition_expresion :  expresion_line condition_signs expresion_line condtion_appear\n                    | expresion_line condtion_appear\n\n    \n        expresion_line : term term_appear\n                    | term term_appear aux_expresion\n    \n        aux_expresion : ADD add_operator expresion_line\n                      | LESS add_operator expresion_line\n    \n       term : fact factor_appear\n              | fact factor_appear aux_term\n    \n        aux_term : SPLIT_BY add_operator term\n                  | MULT_BY add_operator term\n    \n        fact : expo expo_appear\n              | expo expo_appear aux_expo\n    \n        expo :  parent_aux\n               | call_lets\n               | call_let\n               | func_call\n    \n        parent_aux : LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent\n    \n        right_parent_condition :\n    \n        found_init_parent :\n    \n        found_end_parent :\n    \n        aux_expo : TIMES_BY_SAME add_operator fact\n    \n        assign : call_let set_appear SET set_value\n                | call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA\n    \n       seen_final_asignacion :\n    \n        add_operand :\n    \n        add_operator :\n    \n         set_appear :\n    \n        term_appear :\n    \n        factor_appear :\n    \n        expo_appear :\n    \n        call_let : ID check_let_exists\n    \n       call_lets : INI_INT check_global_const_exists\n                    | INI_FLOAT check_global_const_exists\n    \n        check_global_const_exists : add_operand_const\n    \n        add_operand_const :\n    \n        check_let_exists :\n    \n        set_value : INI_INT aux_int_check append_operand DOTCOMMA\n                    | INI_FLOAT aux_float_check append_operand DOTCOMMA\n    \n        append_operand :\n    \n        aux_int_check :\n    \n        aux_float_check :\n    \n      empty :\n    '
    
_lr_action_items = {'PROG':([0,],[2,]),'$end':([0,1,5,6,8,9,10,13,38,45,47,78,97,],[-2,0,-114,-4,-7,-1,-4,-3,-114,-6,-16,-27,-26,]),'ID':([2,8,11,15,16,17,18,21,22,23,30,35,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,68,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[3,-7,14,20,-12,-12,-12,-9,-10,-11,39,43,-114,-6,-65,-114,69,69,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,86,-108,69,-101,-102,-85,-86,-107,-107,-34,-75,-91,69,-103,69,-87,-88,-79,-83,-104,-106,-105,69,-76,-98,-98,69,69,-80,-98,-98,-84,-98,-94,69,69,-92,69,69,-37,69,69,69,-77,-78,69,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,69,-56,-47,69,-66,-64,-61,]),'DOTCOMMA':([3,4,8,20,26,29,38,39,45,46,48,50,51,53,55,56,57,58,59,60,61,62,63,64,69,71,72,73,74,75,76,77,80,82,87,89,90,91,92,93,94,95,96,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,124,127,131,132,133,134,135,136,137,138,139,149,153,156,157,158,159,160,161,173,174,175,176,178,179,181,183,184,185,186,191,192,193,],[-5,5,-7,-13,-15,38,-114,-13,-6,-15,-65,-14,-114,-38,-38,-30,-31,-32,-33,80,-35,-36,-87,-100,-108,-48,-101,-102,-85,-86,-107,-107,-34,-75,-103,-39,-87,-88,-79,-83,-104,-106,-105,-48,-76,-98,-98,131,-80,-98,-98,-84,-98,-94,-96,-107,-107,-48,-48,-92,153,-37,-48,-48,-48,159,-111,-111,-77,-78,-89,-40,-81,-82,-93,-95,173,174,-109,-110,-66,-114,-57,-51,-59,-62,-38,-56,-47,-66,-64,-61,]),'LET':([5,38,48,51,176,],[7,7,-65,7,7,]),'FUNC':([5,6,8,10,38,45,47,78,97,],[-114,11,-7,11,-114,-6,-16,-27,-26,]),'INT':([7,12,25,27,28,36,43,49,],[-8,16,-19,16,16,16,-13,16,]),'FLOAT':([7,12,25,27,28,36,43,49,],[-8,17,-19,17,17,17,-13,17,]),'BOOL':([7,12,25,27,28,36,43,49,],[-8,18,-19,18,18,18,-13,18,]),'IF':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,69,72,73,74,75,76,77,80,82,87,90,91,92,93,94,95,96,99,100,101,111,112,113,114,115,116,120,121,124,131,132,133,134,138,139,149,153,156,157,158,159,173,174,175,176,178,179,181,183,184,185,186,191,192,193,],[-7,-114,-6,-65,-114,65,65,-30,-31,-32,-33,-88,-35,-36,-87,-100,-108,-101,-102,-85,-86,-107,-107,-34,-75,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-80,-98,-98,-84,-98,-94,-48,-48,-92,-37,-48,-48,-48,-77,-78,-89,-40,-81,-82,-93,-95,-109,-110,-66,-114,-57,-51,-59,-62,65,-56,-47,-66,-64,-61,]),'WHILE':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,69,72,73,74,75,76,77,80,82,87,90,91,92,93,94,95,96,99,100,101,111,112,113,114,115,116,120,121,124,131,132,133,134,138,139,149,153,156,157,158,159,173,174,175,176,178,179,181,183,184,185,186,191,192,193,],[-7,-114,-6,-65,-114,67,67,-30,-31,-32,-33,-88,-35,-36,-87,-100,-108,-101,-102,-85,-86,-107,-107,-34,-75,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-80,-98,-98,-84,-98,-94,-48,-48,-92,-37,-48,-48,-48,-77,-78,-89,-40,-81,-82,-93,-95,-109,-110,-66,-114,-57,-51,-59,-62,67,-56,-47,-66,-64,-61,]),'AT':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,68,68,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,68,-101,-102,-85,-86,-107,-107,-34,-75,-91,68,-103,68,-87,-88,-79,-83,-104,-106,-105,68,-76,-98,-98,68,68,-80,-98,-98,-84,-98,-94,68,68,-92,68,68,-37,68,68,68,-77,-78,68,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,68,-56,-47,68,-66,-64,-61,]),'PRINTG':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,69,72,73,74,75,76,77,80,82,87,90,91,92,93,94,95,96,99,100,101,111,112,113,114,115,116,120,121,124,131,132,133,134,138,139,149,153,156,157,158,159,173,174,175,176,178,179,181,183,184,185,186,191,192,193,],[-7,-114,-6,-65,-114,70,70,-30,-31,-32,-33,-88,-35,-36,-87,-100,-108,-101,-102,-85,-86,-107,-107,-34,-75,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-80,-98,-98,-84,-98,-94,-48,-48,-92,-37,-48,-48,-48,-77,-78,-89,-40,-81,-82,-93,-95,-109,-110,-66,-114,-57,-51,-59,-62,70,-56,-47,-66,-64,-61,]),'RETURN':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,69,72,73,74,75,76,77,80,82,87,90,91,92,93,94,95,96,99,100,101,111,112,113,114,115,116,120,121,124,131,132,133,134,138,139,149,153,156,157,158,159,173,174,175,176,178,179,181,183,184,185,186,191,192,193,],[-7,-114,-6,-65,-114,71,71,-30,-31,-32,-33,-88,-35,-36,-87,-100,-108,-101,-102,-85,-86,-107,-107,-34,-75,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-80,-98,-98,-84,-98,-94,-48,-48,-92,-37,-48,-48,-48,-77,-78,-89,-40,-81,-82,-93,-95,-109,-110,-66,-114,-57,-51,-59,-62,71,-56,-47,-66,-64,-61,]),'LEFTPARENT':([8,14,19,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,80,82,83,84,85,86,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,105,111,112,113,114,115,116,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-17,25,-114,-6,-65,-114,66,66,-30,-31,-32,-33,-88,-35,-36,-87,-100,83,-91,-58,-108,88,66,-101,-102,-85,-86,-107,-107,-34,-75,-91,66,104,-50,-103,66,-87,-88,-79,-83,-104,-106,-105,66,-76,-98,-98,66,66,126,-80,-98,-98,-84,-98,-94,66,66,-92,66,66,-37,66,66,66,-77,-78,66,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,66,-56,-47,66,-66,-64,-61,]),'INI_INT':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,76,76,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,76,-101,-102,-85,-86,-107,-107,-34,-75,-91,76,-103,76,-87,-88,-79,-83,-104,-106,-105,118,-76,-98,-98,76,76,-80,-98,-98,-84,-98,-94,76,76,-92,76,76,-37,76,76,76,-77,-78,76,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,76,-56,-47,76,-66,-64,-61,]),'INI_FLOAT':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,77,77,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,77,-101,-102,-85,-86,-107,-107,-34,-75,-91,77,-103,77,-87,-88,-79,-83,-104,-106,-105,119,-76,-98,-98,77,77,-80,-98,-98,-84,-98,-94,77,77,-92,77,77,-37,77,77,77,-77,-78,77,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,77,-56,-47,77,-66,-64,-61,]),'RIGHTKEY':([8,38,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,69,72,73,74,75,76,77,79,80,82,87,90,91,92,93,94,95,96,99,100,101,111,112,113,114,115,116,120,121,124,131,132,133,134,138,139,149,153,156,157,158,159,173,174,175,176,178,179,181,183,184,185,186,189,191,192,193,],[-7,-114,-6,-65,-114,-29,78,-29,-30,-31,-32,-33,-88,-35,-36,-87,-100,-108,-101,-102,-85,-86,-107,-107,-28,-34,-75,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-80,-98,-98,-84,-98,-94,-48,-48,-92,-37,-48,-48,-48,-77,-78,-89,-40,-81,-82,-93,-95,-109,-110,-66,-114,-57,-51,-59,-62,-29,-56,-47,192,-66,-64,-61,]),'ADD':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,118,119,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,-38,-38,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,-48,-101,-102,-85,-86,-107,-107,-34,100,-91,-48,-103,-48,-87,-88,-79,-83,-104,-106,-105,-48,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-94,-107,-107,-48,-48,-92,-48,-48,-37,-48,-48,-48,-77,-78,-48,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,-38,-56,-47,-48,-66,-64,-61,]),'LESS':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,118,119,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,-38,-38,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,-48,-101,-102,-85,-86,-107,-107,-34,101,-91,-48,-103,-48,-87,-88,-79,-83,-104,-106,-105,-48,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-94,-107,-107,-48,-48,-92,-48,-48,-37,-48,-48,-48,-77,-78,-48,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,-38,-56,-47,-48,-66,-64,-61,]),'SPLIT_BY':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,118,119,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,-38,-38,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,-48,-101,-102,-85,-86,-107,-107,-34,-75,-91,-48,-103,-48,-87,-88,112,-83,-104,-106,-105,-48,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-94,-107,-107,-48,-48,-92,-48,-48,-37,-48,-48,-48,-77,-78,-48,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,-38,-56,-47,-48,-66,-64,-61,]),'MULT_BY':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,118,119,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,-38,-38,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,-48,-101,-102,-85,-86,-107,-107,-34,-75,-91,-48,-103,-48,-87,-88,113,-83,-104,-106,-105,-48,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-94,-107,-107,-48,-48,-92,-48,-48,-37,-48,-48,-48,-77,-78,-48,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,-38,-56,-47,-48,-66,-64,-61,]),'TIMES_BY_SAME':([8,38,45,48,51,53,55,56,57,58,59,60,61,62,63,64,66,69,71,72,73,74,75,76,77,80,82,83,84,87,88,90,91,92,93,94,95,96,98,99,100,101,102,104,111,112,113,114,115,116,118,119,120,121,124,126,128,131,132,133,134,138,139,141,143,144,145,146,147,148,149,153,156,157,158,159,164,165,166,167,168,169,173,174,175,176,178,179,180,181,183,184,185,186,187,191,192,193,],[-7,-114,-6,-65,-114,-38,-38,-30,-31,-32,-33,-88,-35,-36,-87,-100,-91,-108,-48,-101,-102,-85,-86,-107,-107,-34,-75,-91,-48,-103,-48,-87,-88,-79,115,-104,-106,-105,-48,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-94,-107,-107,-48,-48,-92,-48,-48,-37,-48,-48,-48,-77,-78,-48,-98,-98,-98,-98,-98,-98,-89,-40,-81,-82,-93,-95,-67,-68,-69,-70,-71,-72,-109,-110,-66,-114,-57,-51,-55,-59,-62,-38,-56,-47,-48,-66,-64,-61,]),'TWOPOINTS':([16,17,18,21,22,23,24,31,32,33,41,42,],[-12,-12,-12,-9,-10,-11,27,40,-23,-25,-24,-18,]),'COMMA':([20,25,26,28,36,39,43,46,49,64,69,72,73,74,75,76,77,82,87,88,90,91,92,93,94,95,96,99,100,101,107,108,109,111,112,113,114,115,120,121,124,126,128,129,130,132,133,134,138,139,149,152,155,156,157,158,172,179,180,186,187,],[-13,-19,30,36,36,-13,-13,30,36,-100,-108,-101,-102,-85,-86,-107,-107,-75,-103,-48,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,128,-45,-46,-80,-98,-98,-84,-98,-48,-48,-92,-48,-48,-43,-45,-48,-48,-48,-77,-78,-89,-54,-44,-81,-82,-93,180,-51,-55,-47,-48,]),'RIGHTPARENT':([25,28,34,36,37,43,44,49,52,64,66,69,72,73,74,75,76,77,82,83,84,87,88,90,91,92,93,94,95,96,99,100,101,102,103,104,106,107,108,109,111,112,113,114,115,120,121,122,123,124,125,126,128,129,130,132,133,134,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,157,158,163,164,165,166,167,168,169,171,172,177,179,180,186,187,190,],[-19,-114,42,-114,-22,-13,-21,-114,-20,-100,-91,-108,-101,-102,-85,-86,-107,-107,-75,-91,-48,-103,-48,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,124,-48,127,-41,-45,-46,-80,-98,-98,-84,-98,-48,-48,-90,-60,-92,150,-48,-48,-43,-45,-48,-48,-48,-77,-78,162,-48,-74,-98,-98,-98,-98,-98,-98,-89,-49,-54,-42,-44,-81,-82,-93,-60,-67,-68,-69,-70,-71,-72,179,-53,-73,-51,-55,-47,-48,-52,]),'VOID':([27,],[33,]),'LEFTKEY':([40,150,162,170,182,188,],[48,-90,176,176,-63,176,]),'SET':([63,69,81,87,],[-99,-108,98,-103,]),'GREATERTN':([64,69,72,73,74,75,76,77,82,83,87,90,91,92,93,94,95,96,99,100,101,102,104,111,112,113,114,115,120,121,123,124,132,133,134,138,139,149,156,157,158,179,186,],[-100,-108,-101,-102,-85,-86,-107,-107,-75,-91,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-48,-48,143,-92,-48,-48,-48,-77,-78,-89,-81,-82,-93,-51,-47,]),'LESSTN':([64,69,72,73,74,75,76,77,82,83,87,90,91,92,93,94,95,96,99,100,101,102,104,111,112,113,114,115,120,121,123,124,132,133,134,138,139,149,156,157,158,179,186,],[-100,-108,-101,-102,-85,-86,-107,-107,-75,-91,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-48,-48,144,-92,-48,-48,-48,-77,-78,-89,-81,-82,-93,-51,-47,]),'SAME':([64,69,72,73,74,75,76,77,82,83,87,90,91,92,93,94,95,96,99,100,101,102,104,111,112,113,114,115,120,121,123,124,132,133,134,138,139,149,156,157,158,179,186,],[-100,-108,-101,-102,-85,-86,-107,-107,-75,-91,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-48,-48,145,-92,-48,-48,-48,-77,-78,-89,-81,-82,-93,-51,-47,]),'NOTSAME':([64,69,72,73,74,75,76,77,82,83,87,90,91,92,93,94,95,96,99,100,101,102,104,111,112,113,114,115,120,121,123,124,132,133,134,138,139,149,156,157,158,179,186,],[-100,-108,-101,-102,-85,-86,-107,-107,-75,-91,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-48,-48,146,-92,-48,-48,-48,-77,-78,-89,-81,-82,-93,-51,-47,]),'LESSSAME':([64,69,72,73,74,75,76,77,82,83,87,90,91,92,93,94,95,96,99,100,101,102,104,111,112,113,114,115,120,121,123,124,132,133,134,138,139,149,156,157,158,179,186,],[-100,-108,-101,-102,-85,-86,-107,-107,-75,-91,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-48,-48,147,-92,-48,-48,-48,-77,-78,-89,-81,-82,-93,-51,-47,]),'MORESAME':([64,69,72,73,74,75,76,77,82,83,87,90,91,92,93,94,95,96,99,100,101,102,104,111,112,113,114,115,120,121,123,124,132,133,134,138,139,149,156,157,158,179,186,],[-100,-108,-101,-102,-85,-86,-107,-107,-75,-91,-103,-87,-88,-79,-83,-104,-106,-105,-76,-98,-98,-48,-48,-80,-98,-98,-84,-98,-48,-48,148,-92,-48,-48,-48,-77,-78,-89,-81,-82,-93,-51,-47,]),'INI_STRING':([88,128,],[109,109,]),'ELSE':([175,192,],[182,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compile':([0,],[1,]),'seen_program':([3,],[4,]),'lets':([5,38,51,176,],[6,45,53,184,]),'empty':([5,28,36,38,49,51,176,],[8,37,37,8,37,8,8,]),'modules':([6,10,],[9,13,]),'func':([6,10,],[10,10,]),'seen_lets':([7,],[12,]),'type':([12,27,28,36,49,],[15,32,35,35,35,]),'seen_func_name':([14,],[19,]),'seen_type':([16,17,18,],[21,22,23,]),'params':([19,],[24,]),'seen_ID_let':([20,39,43,],[26,46,49,]),'param_table_init':([25,],[28,]),'aux_let':([26,46,],[29,50,]),'return_func_type':([27,],[31,]),'param_declare':([28,36,49,],[34,44,52,]),'void_detect':([33,],[41,]),'func_code':([40,],[47,]),'func_code_start':([48,],[51,]),'func_code_aux':([53,55,184,],[54,79,189,]),'action':([53,55,184,],[55,55,55,]),'assign':([53,55,184,],[56,56,56,]),'expresion_line':([53,55,71,84,88,98,102,104,120,121,126,128,141,184,187,],[57,57,89,103,108,117,123,123,138,139,152,108,163,57,152,]),'condition':([53,55,184,],[58,58,58,]),'while':([53,55,184,],[59,59,59,]),'func_call':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,134,141,184,187,],[60,60,91,91,91,91,91,91,91,91,91,91,91,91,91,91,60,91,]),'write':([53,55,184,],[61,61,61,]),'return':([53,55,184,],[62,62,62,]),'call_let':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,134,141,184,187,],[63,63,90,90,90,90,90,90,90,90,90,90,90,90,90,90,63,90,]),'term':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,141,184,187,],[64,64,64,64,64,64,64,64,64,64,64,64,156,157,64,64,64,]),'fact':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,134,141,184,187,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,158,72,72,72,]),'expo':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,134,141,184,187,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'parent_aux':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,134,141,184,187,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'call_lets':([53,55,71,84,88,98,102,104,120,121,126,128,132,133,134,141,184,187,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'set_appear':([63,],[81,]),'term_appear':([64,],[82,]),'found_init_parent':([66,83,],[84,102,]),'while_appear':([67,],[85,]),'check_let_exists':([69,],[87,]),'factor_appear':([72,],[92,]),'expo_appear':([73,],[93,]),'check_global_const_exists':([76,77,118,119,],[94,96,94,96,]),'add_operand_const':([76,77,118,119,],[95,95,95,95,]),'end_func':([78,],[97,]),'aux_expresion':([82,],[99,]),'func_call_ID':([86,],[105,]),'write_found':([88,128,],[106,154,]),'write_found_aux':([88,128,],[107,107,]),'return_aux':([89,],[110,]),'aux_term':([92,],[111,]),'aux_expo':([93,],[114,]),'set_value':([98,],[116,]),'add_operator':([100,101,112,113,115,143,144,145,146,147,148,],[120,121,132,133,134,164,165,166,167,168,169,]),'condition_expresion':([102,104,],[122,125,]),'print_exp':([108,130,],[129,155,]),'string_appear':([109,],[130,]),'seen_final_asignacion':([117,],[135,]),'aux_int_check':([118,],[136,]),'aux_float_check':([119,],[137,]),'right_parent_condition':([122,150,],[140,170,]),'condition_signs':([123,],[141,]),'condtion_appear':([123,163,],[142,177,]),'found_end_parent':([124,],[149,]),'func_calls_params':([126,187,],[151,190,]),'append_operand':([136,137,],[160,161,]),'end_func_call_params':([151,],[171,]),'parameter_call':([152,],[172,]),'condition_code':([162,170,188,],[175,178,191,]),'condition_end_check':([175,],[181,]),'end_condition':([175,191,],[183,193,]),'while_end':([178,],[185,]),'end_func_call':([179,],[186,]),'add_parameter':([180,],[187,]),'else_appear':([182,],[188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compile","S'",1,None,None,None),
  ('compile -> PROG ID seen_program DOTCOMMA lets modules','compile',6,'p_compile','reglas.py',16),
  ('compile -> <empty>','compile',0,'p_compile','reglas.py',17),
  ('modules -> func modules','modules',2,'p_modules','reglas.py',23),
  ('modules -> <empty>','modules',0,'p_modules','reglas.py',24),
  ('seen_program -> <empty>','seen_program',0,'p_seen_program','reglas.py',29),
  ('lets -> LET seen_lets type ID seen_ID_let aux_let DOTCOMMA lets','lets',8,'p_lets','reglas.py',37),
  ('lets -> empty','lets',1,'p_lets','reglas.py',38),
  ('seen_lets -> <empty>','seen_lets',0,'p_seen_lets','reglas.py',43),
  ('type -> INT seen_type','type',2,'p_type','reglas.py',51),
  ('type -> FLOAT seen_type','type',2,'p_type','reglas.py',52),
  ('type -> BOOL seen_type','type',2,'p_type','reglas.py',53),
  ('seen_type -> <empty>','seen_type',0,'p_seen_type','reglas.py',58),
  ('seen_ID_let -> <empty>','seen_ID_let',0,'p_seen_ID_let','reglas.py',63),
  ('aux_let -> COMMA ID seen_ID_let aux_let','aux_let',4,'p_aux_let','reglas.py',84),
  ('aux_let -> <empty>','aux_let',0,'p_aux_let','reglas.py',85),
  ('func -> FUNC ID seen_func_name params TWOPOINTS return_func_type TWOPOINTS func_code','func',8,'p_func','reglas.py',91),
  ('seen_func_name -> <empty>','seen_func_name',0,'p_seen_func_name','reglas.py',97),
  ('params -> LEFTPARENT param_table_init param_declare RIGHTPARENT','params',4,'p_params','reglas.py',117),
  ('param_table_init -> <empty>','param_table_init',0,'p_param_table_init','reglas.py',123),
  ('param_declare -> type ID seen_ID_let param_declare','param_declare',4,'p_param_declare','reglas.py',132),
  ('param_declare -> COMMA param_declare','param_declare',2,'p_param_declare','reglas.py',133),
  ('param_declare -> empty','param_declare',1,'p_param_declare','reglas.py',134),
  ('return_func_type -> type','return_func_type',1,'p_return_func_type','reglas.py',140),
  ('return_func_type -> VOID void_detect','return_func_type',2,'p_return_func_type','reglas.py',141),
  ('void_detect -> <empty>','void_detect',0,'p_void_detect','reglas.py',150),
  ('func_code -> LEFTKEY func_code_start lets func_code_aux RIGHTKEY end_func','func_code',6,'p_func_code','reglas.py',158),
  ('end_func -> <empty>','end_func',0,'p_end_func','reglas.py',163),
  ('func_code_aux -> action func_code_aux','func_code_aux',2,'p_func_code_aux','reglas.py',170),
  ('func_code_aux -> <empty>','func_code_aux',0,'p_func_code_aux','reglas.py',171),
  ('action -> assign','action',1,'p_action','reglas.py',177),
  ('action -> expresion_line','action',1,'p_action','reglas.py',178),
  ('action -> condition','action',1,'p_action','reglas.py',179),
  ('action -> while','action',1,'p_action','reglas.py',180),
  ('action -> func_call DOTCOMMA','action',2,'p_action','reglas.py',181),
  ('action -> write','action',1,'p_action','reglas.py',182),
  ('action -> return','action',1,'p_action','reglas.py',183),
  ('return -> RETURN expresion_line return_aux DOTCOMMA','return',4,'p_return','reglas.py',188),
  ('return -> <empty>','return',0,'p_return','reglas.py',189),
  ('return_aux -> <empty>','return_aux',0,'p_return_aux','reglas.py',194),
  ('write -> PRINTG LEFTPARENT write_found RIGHTPARENT DOTCOMMA','write',5,'p_write','reglas.py',201),
  ('write_found -> write_found_aux','write_found',1,'p_write_found','reglas.py',206),
  ('write_found -> write_found_aux COMMA write_found','write_found',3,'p_write_found','reglas.py',207),
  ('write_found_aux -> expresion_line print_exp','write_found_aux',2,'p_write_found_aux','reglas.py',212),
  ('write_found_aux -> INI_STRING string_appear print_exp','write_found_aux',3,'p_write_found_aux','reglas.py',213),
  ('print_exp -> <empty>','print_exp',0,'p_print_exp','reglas.py',218),
  ('string_appear -> <empty>','string_appear',0,'p_string_appear','reglas.py',225),
  ('func_call -> AT ID func_call_ID LEFTPARENT func_calls_params end_func_call_params RIGHTPARENT end_func_call','func_call',8,'p_func_call','reglas.py',232),
  ('func_call -> <empty>','func_call',0,'p_func_call','reglas.py',233),
  ('end_func_call_params -> <empty>','end_func_call_params',0,'p_end_func_call_params','reglas.py',238),
  ('func_call_ID -> <empty>','func_call_ID',0,'p_func_call_ID','reglas.py',246),
  ('end_func_call -> <empty>','end_func_call',0,'p_end_func_call','reglas.py',253),
  ('func_calls_params -> expresion_line parameter_call COMMA add_parameter func_calls_params','func_calls_params',5,'p_func_calls_params','reglas.py',260),
  ('func_calls_params -> expresion_line parameter_call','func_calls_params',2,'p_func_calls_params','reglas.py',261),
  ('parameter_call -> <empty>','parameter_call',0,'p_parameter_call','reglas.py',266),
  ('add_parameter -> <empty>','add_parameter',0,'p_add_parameter','reglas.py',273),
  ('while -> WHILE while_appear LEFTPARENT condition_expresion RIGHTPARENT right_parent_condition condition_code while_end','while',8,'p_while','reglas.py',281),
  ('while_end -> <empty>','while_end',0,'p_while_end','reglas.py',286),
  ('while_appear -> <empty>','while_appear',0,'p_while_appear','reglas.py',292),
  ('condition -> IF LEFTPARENT found_init_parent condition_expresion right_parent_condition RIGHTPARENT condition_code condition_end_check','condition',8,'p_condition','reglas.py',300),
  ('condtion_appear -> <empty>','condtion_appear',0,'p_condtion_appear','reglas.py',306),
  ('condition_end_check -> ELSE else_appear condition_code end_condition','condition_end_check',4,'p_condition_end_check','reglas.py',314),
  ('condition_end_check -> end_condition','condition_end_check',1,'p_condition_end_check','reglas.py',315),
  ('else_appear -> <empty>','else_appear',0,'p_else_appear','reglas.py',320),
  ('condition_code -> LEFTKEY lets func_code_aux RIGHTKEY','condition_code',4,'p_condition_code','reglas.py',326),
  ('func_code_start -> <empty>','func_code_start',0,'p_func_code_start','reglas.py',331),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','reglas.py',337),
  ('condition_signs -> GREATERTN add_operator','condition_signs',2,'p_condition_signs','reglas.py',345),
  ('condition_signs -> LESSTN add_operator','condition_signs',2,'p_condition_signs','reglas.py',346),
  ('condition_signs -> SAME add_operator','condition_signs',2,'p_condition_signs','reglas.py',347),
  ('condition_signs -> NOTSAME add_operator','condition_signs',2,'p_condition_signs','reglas.py',348),
  ('condition_signs -> LESSSAME add_operator','condition_signs',2,'p_condition_signs','reglas.py',349),
  ('condition_signs -> MORESAME add_operator','condition_signs',2,'p_condition_signs','reglas.py',350),
  ('condition_expresion -> expresion_line condition_signs expresion_line condtion_appear','condition_expresion',4,'p_condition_expresion','reglas.py',355),
  ('condition_expresion -> expresion_line condtion_appear','condition_expresion',2,'p_condition_expresion','reglas.py',356),
  ('expresion_line -> term term_appear','expresion_line',2,'p_expresion_line','reglas.py',363),
  ('expresion_line -> term term_appear aux_expresion','expresion_line',3,'p_expresion_line','reglas.py',364),
  ('aux_expresion -> ADD add_operator expresion_line','aux_expresion',3,'p_aux_expresion','reglas.py',370),
  ('aux_expresion -> LESS add_operator expresion_line','aux_expresion',3,'p_aux_expresion','reglas.py',371),
  ('term -> fact factor_appear','term',2,'p_term','reglas.py',377),
  ('term -> fact factor_appear aux_term','term',3,'p_term','reglas.py',378),
  ('aux_term -> SPLIT_BY add_operator term','aux_term',3,'p_aux_term','reglas.py',384),
  ('aux_term -> MULT_BY add_operator term','aux_term',3,'p_aux_term','reglas.py',385),
  ('fact -> expo expo_appear','fact',2,'p_fact','reglas.py',391),
  ('fact -> expo expo_appear aux_expo','fact',3,'p_fact','reglas.py',392),
  ('expo -> parent_aux','expo',1,'p_expo','reglas.py',398),
  ('expo -> call_lets','expo',1,'p_expo','reglas.py',399),
  ('expo -> call_let','expo',1,'p_expo','reglas.py',400),
  ('expo -> func_call','expo',1,'p_expo','reglas.py',401),
  ('parent_aux -> LEFTPARENT found_init_parent expresion_line RIGHTPARENT found_end_parent','parent_aux',5,'p_parenth_aux','reglas.py',407),
  ('right_parent_condition -> <empty>','right_parent_condition',0,'p_right_parent_condition','reglas.py',413),
  ('found_init_parent -> <empty>','found_init_parent',0,'p_found_init_parent','reglas.py',419),
  ('found_end_parent -> <empty>','found_end_parent',0,'p_found_end_parent','reglas.py',427),
  ('aux_expo -> TIMES_BY_SAME add_operator fact','aux_expo',3,'p_aux_expo','reglas.py',439),
  ('assign -> call_let set_appear SET set_value','assign',4,'p_assign','reglas.py',445),
  ('assign -> call_let set_appear SET expresion_line seen_final_asignacion DOTCOMMA','assign',6,'p_assign','reglas.py',446),
  ('seen_final_asignacion -> <empty>','seen_final_asignacion',0,'p_seen_final_asignacion','reglas.py',452),
  ('add_operand -> <empty>','add_operand',0,'p_add_operand','reglas.py',459),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','reglas.py',470),
  ('set_appear -> <empty>','set_appear',0,'p_set_appear','reglas.py',477),
  ('term_appear -> <empty>','term_appear',0,'p_term_appear','reglas.py',485),
  ('factor_appear -> <empty>','factor_appear',0,'p_factor_appear','reglas.py',498),
  ('expo_appear -> <empty>','expo_appear',0,'p_expo_appear','reglas.py',510),
  ('call_let -> ID check_let_exists','call_let',2,'p_call_let','reglas.py',521),
  ('call_lets -> INI_INT check_global_const_exists','call_lets',2,'p_call_lets','reglas.py',550),
  ('call_lets -> INI_FLOAT check_global_const_exists','call_lets',2,'p_call_lets','reglas.py',551),
  ('check_global_const_exists -> add_operand_const','check_global_const_exists',1,'p_check_global_const_exists','reglas.py',558),
  ('add_operand_const -> <empty>','add_operand_const',0,'p_add_operan_const','reglas.py',570),
  ('check_let_exists -> <empty>','check_let_exists',0,'p_check_let_exists','reglas.py',578),
  ('set_value -> INI_INT aux_int_check append_operand DOTCOMMA','set_value',4,'p_set_value','reglas.py',593),
  ('set_value -> INI_FLOAT aux_float_check append_operand DOTCOMMA','set_value',4,'p_set_value','reglas.py',594),
  ('append_operand -> <empty>','append_operand',0,'p_append_operand','reglas.py',601),
  ('aux_int_check -> <empty>','aux_int_check',0,'p_aux_int_check','reglas.py',608),
  ('aux_float_check -> <empty>','aux_float_check',0,'p_aux_float_check','reglas.py',620),
  ('empty -> <empty>','empty',0,'p_empty','reglas.py',633),
]
